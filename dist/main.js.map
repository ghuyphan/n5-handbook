{
  "version": 3,
  "sources": ["../js/dom.js", "../js/config.js", "../node_modules/idb/build/index.js", "../node_modules/src/utils/typeOf.js", "../node_modules/src/utils/isEmpty.js", "../node_modules/src/utils/isCharInRange.js", "../node_modules/src/constants.ts", "../node_modules/src/utils/isCharJapanese.js", "../node_modules/src/isJapanese.js", "../node_modules/node_modules/memoize-one/dist/memoize-one.esm.js", "../node_modules/node_modules/dequal/dist/index.mjs", "../node_modules/src/utils/mergeWithDefaultOptions.js", "../node_modules/src/utils/kanaMapping.js", "../node_modules/src/utils/romajiToKanaMap.js", "../node_modules/src/utils/isCharUpperCase.js", "../node_modules/src/utils/isCharLongDash.js", "../node_modules/src/utils/isCharSlashDot.js", "../node_modules/src/utils/isCharHiragana.js", "../node_modules/src/utils/hiraganaToKatakana.js", "../node_modules/src/toKana.js", "../node_modules/src/utils/dom.js", "../node_modules/src/utils/logInputEvents.js", "../node_modules/src/bind.js", "../node_modules/src/unbind.js", "../node_modules/src/utils/isCharRomaji.js", "../node_modules/src/isRomaji.js", "../node_modules/src/utils/isCharKatakana.js", "../node_modules/src/utils/isCharKana.js", "../node_modules/src/isKana.js", "../node_modules/src/isHiragana.js", "../node_modules/src/isKatakana.js", "../node_modules/src/utils/isCharIterationMark.js", "../node_modules/src/utils/isCharKanji.js", "../node_modules/src/isKanji.js", "../node_modules/src/isMixed.js", "../node_modules/src/utils/katakanaToHiragana.js", "../node_modules/src/utils/kanaToRomajiMap.js", "../node_modules/src/toRomaji.js", "../node_modules/src/utils/isCharEnglishPunctuation.js", "../node_modules/src/toHiragana.js", "../node_modules/src/toKatakana.js", "../node_modules/src/utils/isCharJapanesePunctuation.js", "../node_modules/src/tokenize.js", "../node_modules/src/stripOkurigana.js", "../js/utils.js", "../node_modules/fuse.js/dist/fuse.mjs", "../js/jotoba.js", "../js/handlers.js", "../js/ui.js", "../js/database.js", "../js/main.js"],
  "sourcesContent": ["/**\n * @module dom\n * @description Centralized object for all DOM element selections.\n */\n\n// Export an object that will be populated later.\nexport const els = {};\n\n/**\n * Populates the `els` object with all necessary DOM element references.\n * This should be called after the DOM is fully loaded.\n */\nexport function populateEls() {\n    // Main layout\n    els.sidebar = document.getElementById('sidebar');\n    els.overlay = document.getElementById('overlay');\n    els.mainContent = document.getElementById('main-content');\n\n    // Loading\n    els.loadingOverlay = document.getElementById('loading-overlay');\n\n    // Header\n    els.levelBadgeDesktop = document.getElementById('level-badge-desktop');\n    els.levelBadgeMobile = document.getElementById('level-badge-mobile');\n    els.mobileHeaderTitle = document.getElementById('mobile-header-title');\n\n    // Search\n    els.searchInput = document.getElementById('search-input');\n    els.mobileSearchInput = document.getElementById('mobile-search-input');\n    els.mobileSearchBar = document.querySelector('.mobile-search-bar');\n\n    // Controls\n    els.menuToggle = document.getElementById('menu-toggle');\n    els.pinToggle = document.getElementById('pin-toggle');\n    els.themeEmoji = document.getElementById('theme-emoji'); // Added this line\n\n    // Content containers\n    els.progressOverview = document.getElementById('progress-overview');\n    els.progressTab = document.getElementById('progress');\n    els.hiraganaTab = document.getElementById('hiragana');\n    els.katakanaTab = document.getElementById('katakana');\n    els.kanjiTab = document.getElementById('kanji');\n    els.keyPointsTab = document.getElementById('keyPoints');\n    els.vocabTab = document.getElementById('vocab');\n    els.grammarContainer = document.getElementById('grammar-container');\n    els.grammarTab = document.getElementById('grammar');\n    els.externalSearchTab = document.getElementById('external-search');\n\n    // Sidebar Controls\n    els.sidebarControls = document.getElementById('sidebar-controls');\n    els.closeSidebarBtn = document.getElementById('close-sidebar-btn');\n\n    // Import Modal\n    els.importModal = document.getElementById('import-modal');\n    els.importModalBackdrop = document.getElementById('import-modal-backdrop');\n    els.modalWrapper = document.querySelector('#import-modal .modal-wrapper');\n    els.openModalBtn = document.getElementById('sidebar-import-btn');\n    els.closeModalBtn = document.getElementById('close-modal-btn');\n    els.levelNameInput = document.getElementById('level-name-input');\n    els.levelNameError = document.getElementById('level-name-error');\n    els.fileImportArea = document.getElementById('file-import-area');\n    els.fileInput = document.getElementById('file-input');\n    els.importBtn = document.getElementById('import-btn');\n\n    // Notes Modal\n    els.desktopNotesBtn = document.getElementById('desktop-notes-btn');\n    els.mobileNotesBtn = document.getElementById('mobile-notes-btn');\n    els.notesModal = document.getElementById('notes-modal');\n    els.notesModalBackdrop = document.getElementById('notes-modal-backdrop');\n    els.notesModalWrapper = document.querySelector('#notes-modal .modal-wrapper');\n    els.notesModalTitle = document.getElementById('notes-modal-title');\n    els.closeNotesModalBtn = document.getElementById('close-notes-modal-btn');\n    els.notesTextarea = document.getElementById('notes-textarea');\n    els.notesSaveBtn = document.getElementById('notes-save-btn');\n    els.notesStatus = document.getElementById('notes-status');\n\n    // Kanji Modal\n    els.kanjiDetailModal = document.getElementById('kanji-detail-modal');\n    els.kanjiModalBackdrop = document.querySelector('#kanji-detail-modal #modal-backdrop');\n    els.kanjiModalContentContainer = document.querySelector('#kanji-detail-modal #modal-content-container');\n\n    // NEW: Custom Dialog Elements\n    els.customDialogContainer = document.getElementById('custom-dialog-container');\n    els.customDialogBackdrop = document.getElementById('custom-dialog-backdrop');\n    els.customDialogWrapper = document.querySelector('#custom-dialog-container .modal-wrapper');\n    // Note: The title, message, and actions will be injected directly into the cloned template\n}", "/**\n * @module config\n * @description Holds the application's static configuration and dynamic state.\n */\n\n// Static configuration that doesn't change during runtime\nexport const config = {\n    defaultLevel: 'n5',\n    dataPath: 'https://raw.githubusercontent.com/ghuyphan/JLPT_Datas/main',\n};\n\n// Dynamic state of the application, which will be modified during runtime\nexport const state = {\n    appData: {},\n    progress: { kanji: [], vocab: [] },\n    currentLang: 'en',\n    currentLevel: config.defaultLevel,\n    allAvailableLevels: [config.defaultLevel],\n    pinnedTab: null,\n    isSwitchingLevel: false,\n    loadingStatus: 'idle',\n    activeTab: 'progress',\n    notes: {\n        /** @type {Map<string, string>} */\n        data: new Map(), \n        originalContent: '' \n    },\n    fuseInstances: {},\n    universalFuse: null,\n    currentQuery: '',\n    lastDictionaryQuery: '',\n    tabScrollPositions: new Map(),\n    renderedTabs: new Map(),\n    externalDB: {\n        vocab: [],\n        kanji: [],\n        vocabFuse: null,\n        kanjiFuse: null,\n    },\n};", "const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst transactionDoneMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    // This mapping exists in reverseTransformCache but doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(this.request);\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n    get(target, prop) {\n        if (!advanceMethodProps.includes(prop))\n            return target[prop];\n        let cachedFunc = methodMap[prop];\n        if (!cachedFunc) {\n            cachedFunc = methodMap[prop] = function (...args) {\n                advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...args));\n            };\n        }\n        return cachedFunc;\n    },\n};\nasync function* iterate(...args) {\n    // tslint:disable-next-line:no-this-assignment\n    let cursor = this;\n    if (!(cursor instanceof IDBCursor)) {\n        cursor = await cursor.openCursor(...args);\n    }\n    if (!cursor)\n        return;\n    cursor = cursor;\n    const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n    ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor);\n    // Map this double-proxy back to the original, so other cursor methods work.\n    reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n    while (cursor) {\n        yield proxiedCursor;\n        // If one of the advancing methods was not called, call continue().\n        cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n        advanceResults.delete(proxiedCursor);\n    }\n}\nfunction isIteratorProp(target, prop) {\n    return ((prop === Symbol.asyncIterator &&\n        instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor])) ||\n        (prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore])));\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get(target, prop, receiver) {\n        if (isIteratorProp(target, prop))\n            return iterate;\n        return oldTraps.get(target, prop, receiver);\n    },\n    has(target, prop) {\n        return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n    },\n}));\n\nexport { deleteDB, openDB, unwrap, wrap };\n", "/**\n * Returns detailed type as string (instead of just 'object' for arrays etc)\n * @private\n * @param {any} value js value\n * @returns {String} type of value\n * @example\n * typeOf({}); // 'object'\n * typeOf([]); // 'array'\n * typeOf(function() {}); // 'function'\n * typeOf(/a/); // 'regexp'\n * typeOf(new Date()); // 'date'\n * typeOf(null); // 'null'\n * typeOf(undefined); // 'undefined'\n * typeOf('a'); // 'string'\n * typeOf(1); // 'number'\n * typeOf(true); // 'boolean'\n * typeOf(new Map()); // 'map'\n * typeOf(new Set()); // 'map'\n */\nfunction typeOf(value) {\n  if (value === null) {\n    return 'null';\n  }\n  if (value !== Object(value)) {\n    return typeof value;\n  }\n  return {}.toString\n    .call(value)\n    .slice(8, -1)\n    .toLowerCase();\n}\n\nexport default typeOf;\n", "import typeOf from './typeOf';\n/**\n * Checks if input string is empty\n * @param  {String} input text input\n * @return {Boolean} true if no input\n */\nfunction isEmpty(input) {\n  if (typeOf(input) !== 'string') {\n    return true;\n  }\n  return !input.length;\n}\n\nexport default isEmpty;\n", "import isEmpty from './isEmpty';\n\n/**\n * Takes a character and a unicode range. Returns true if the char is in the range.\n * @param  {String}  char  unicode character\n * @param  {Number}  start unicode start range\n * @param  {Number}  end   unicode end range\n * @return {Boolean}\n */\nfunction isCharInRange(char = '', start, end) {\n  if (isEmpty(char)) return false;\n  const code = char.charCodeAt(0);\n  return start <= code && code <= end;\n}\n\nexport default isCharInRange;\n", "export const VERSION = '5.3.1';\n\nexport const TO_KANA_METHODS: {\n  HIRAGANA: 'toHiragana',\n  KATAKANA: 'toKatakana',\n} = {\n  HIRAGANA: 'toHiragana',\n  KATAKANA: 'toKatakana',\n};\n\nexport const ROMANIZATIONS: { HEPBURN: 'hepburn' } = {\n  HEPBURN: 'hepburn',\n};\n\nexport type DefaultOptions = {\n  useObsoleteKana?: boolean,\n  passRomaji?: boolean,\n  convertLongVowelMark?: boolean,\n  upcaseKatakana?: boolean,\n  IMEMode?: boolean | 'toHiragana' | 'toKatakana',\n  romanization?: 'hepburn',\n  customKanaMapping?: { [index: string]: string }\n  customRomajiMapping?: { [index: string]: string }\n};\n\n/**\n * Default config for WanaKana, user passed options will be merged with these\n * @type {DefaultOptions}\n * @name DefaultOptions\n * @property {Boolean} [useObsoleteKana=false] - Set to true to use obsolete characters, such as ゐ and ゑ.\n * @example\n * toHiragana('we', { useObsoleteKana: true })\n * // => 'ゑ'\n * @property {Boolean} [passRomaji=false] - Set to true to pass romaji when using mixed syllabaries with toKatakana() or toHiragana()\n * @example\n * toHiragana('only convert the katakana: ヒラガナ', { passRomaji: true })\n * // => \"only convert the katakana: ひらがな\"\n * @property {Boolean} [convertLongVowelMark=true] - Set to false to prevent conversions of 'ー' to extended vowels with toHiragana()\n * @example\n * toHiragana('ラーメン', { convertLongVowelMark: false });\n * // => 'らーめん\n * @property {Boolean} [upcaseKatakana=false] - Set to true to convert katakana to uppercase using toRomaji()\n * @example\n * toRomaji('ひらがな カタカナ', { upcaseKatakana: true })\n * // => \"hiragana KATAKANA\"\n * @property {Boolean | 'toHiragana' | 'toKatakana'} [IMEMode=false] - Set to true, 'toHiragana', or 'toKatakana' to handle conversion while it is being typed.\n * @property {'hepburn'} [romanization='hepburn'] - choose toRomaji() romanization map (currently only 'hepburn')\n * @property {Object.<String, String>} [customKanaMapping] - custom map will be merged with default conversion\n * @example\n * toKana('wanakana', { customKanaMapping: { na: 'に', ka: 'Bana' }) };\n * // => 'わにBanaに'\n * @property {Object.<String, String>} [customRomajiMapping] - custom map will be merged with default conversion\n * @example\n * toRomaji('つじぎり', { customRomajiMapping: { じ: 'zi', つ: 'tu', り: 'li' }) };\n * // => 'tuzigili'\n */\nexport const DEFAULT_OPTIONS: DefaultOptions = {\n  useObsoleteKana: false,\n  passRomaji: false,\n  convertLongVowelMark: true,\n  upcaseKatakana: false,\n  IMEMode: false,\n  romanization: ROMANIZATIONS.HEPBURN,\n};\n\n// CharCode References\n// http://www.rikai.com/library/kanjitables/kanji_codes.unicode.shtml\n// http://unicode-table.com\n\nexport const LATIN_LOWERCASE_START = 0x61;\nexport const LATIN_LOWERCASE_END = 0x7a;\nexport const LATIN_UPPERCASE_START = 0x41;\nexport const LATIN_UPPERCASE_END = 0x5a;\nexport const LOWERCASE_ZENKAKU_START = 0xff41;\nexport const LOWERCASE_ZENKAKU_END = 0xff5a;\nexport const UPPERCASE_ZENKAKU_START = 0xff21;\nexport const UPPERCASE_ZENKAKU_END = 0xff3a;\nexport const HIRAGANA_START = 0x3041;\nexport const HIRAGANA_END = 0x3096;\nexport const KATAKANA_START = 0x30a1;\nexport const KATAKANA_END = 0x30fc;\nexport const KANJI_START = 0x4e00;\nexport const KANJI_END = 0x9faf;\n\nexport const KANJI_ITERATION_MARK = 0x3005; // 々\nexport const PROLONGED_SOUND_MARK = 0x30fc; // ー\nexport const KANA_SLASH_DOT = 0x30fb; // ・\n\nconst ZENKAKU_NUMBERS = [0xff10, 0xff19];\nconst ZENKAKU_UPPERCASE = [UPPERCASE_ZENKAKU_START, UPPERCASE_ZENKAKU_END];\nconst ZENKAKU_LOWERCASE = [LOWERCASE_ZENKAKU_START, LOWERCASE_ZENKAKU_END];\nconst ZENKAKU_PUNCTUATION_1 = [0xff01, 0xff0f];\nconst ZENKAKU_PUNCTUATION_2 = [0xff1a, 0xff1f];\nconst ZENKAKU_PUNCTUATION_3 = [0xff3b, 0xff3f];\nconst ZENKAKU_PUNCTUATION_4 = [0xff5b, 0xff60];\nconst ZENKAKU_SYMBOLS_CURRENCY = [0xffe0, 0xffee];\n\nconst HIRAGANA_CHARS = [0x3040, 0x309f];\nconst KATAKANA_CHARS = [0x30a0, 0x30ff];\nconst HANKAKU_KATAKANA = [0xff66, 0xff9f];\nconst KATAKANA_PUNCTUATION = [0x30fb, 0x30fc];\nconst KANA_PUNCTUATION = [0xff61, 0xff65];\nconst CJK_SYMBOLS_PUNCTUATION = [0x3000, 0x303f];\nconst COMMON_CJK = [0x4e00, 0x9fff];\nconst RARE_CJK = [0x3400, 0x4dbf];\n\nexport const KANA_RANGES = [\n  HIRAGANA_CHARS,\n  KATAKANA_CHARS,\n  KANA_PUNCTUATION,\n  HANKAKU_KATAKANA,\n];\n\nexport const JA_PUNCTUATION_RANGES = [\n  CJK_SYMBOLS_PUNCTUATION,\n  KANA_PUNCTUATION,\n  KATAKANA_PUNCTUATION,\n  ZENKAKU_PUNCTUATION_1,\n  ZENKAKU_PUNCTUATION_2,\n  ZENKAKU_PUNCTUATION_3,\n  ZENKAKU_PUNCTUATION_4,\n  ZENKAKU_SYMBOLS_CURRENCY,\n];\n\n// All Japanese unicode start and end ranges\n// Includes kanji, kana, zenkaku latin chars, punctuation, and number ranges.\nexport const JAPANESE_RANGES = [\n  ...KANA_RANGES,\n  ...JA_PUNCTUATION_RANGES,\n  ZENKAKU_UPPERCASE,\n  ZENKAKU_LOWERCASE,\n  ZENKAKU_NUMBERS,\n  COMMON_CJK,\n  RARE_CJK,\n];\n\nconst MODERN_ENGLISH = [0x0000, 0x007f];\nconst HEPBURN_MACRON_RANGES = [\n  [0x0100, 0x0101], // Ā ā\n  [0x0112, 0x0113], // Ē ē\n  [0x012a, 0x012b], // Ī ī\n  [0x014c, 0x014d], // Ō ō\n  [0x016a, 0x016b], // Ū ū\n];\nconst SMART_QUOTE_RANGES = [\n  [0x2018, 0x2019], // ‘ ’\n  [0x201c, 0x201d], // “ ”\n];\n\nexport const ROMAJI_RANGES = [MODERN_ENGLISH, ...HEPBURN_MACRON_RANGES];\n\nexport const EN_PUNCTUATION_RANGES = [\n  [0x20, 0x2f],\n  [0x3a, 0x3f],\n  [0x5b, 0x60],\n  [0x7b, 0x7e],\n  ...SMART_QUOTE_RANGES,\n];\n", "import isCharInRange from './isCharInRange';\nimport { JAPANESE_RANGES } from '../constants.ts';\n\n/**\n * Tests a character. Returns true if the character is [Katakana](https://en.wikipedia.org/wiki/Katakana).\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharJapanese(char = '') {\n  return JAPANESE_RANGES.some(([start, end]) => isCharInRange(char, start, end));\n}\n\nexport default isCharJapanese;\n", "import typeOf from './utils/typeOf';\nimport isEmpty from './utils/isEmpty';\nimport isCharJapanese from './utils/isCharJapanese';\n\n/**\n * Test if `input` only includes [Kanji](https://en.wikipedia.org/wiki/Kanji), [Kana](https://en.wikipedia.org/wiki/Kana), zenkaku numbers, and JA punctuation/symbols.”\n * @param  {String} [input=''] text\n * @param  {RegExp} [allowed] additional test allowed to pass for each char\n * @return {Boolean} true if passes checks\n * @example\n * isJapanese('泣き虫')\n * // => true\n * isJapanese('あア')\n * // => true\n * isJapanese('２月') // Zenkaku numbers allowed\n * // => true\n * isJapanese('泣き虫。！〜＄') // Zenkaku/JA punctuation\n * // => true\n * isJapanese('泣き虫.!~$') // Latin punctuation fails\n * // => false\n * isJapanese('A泣き虫')\n * // => false\n * isJapanese('≪偽括弧≫', /[≪≫]/);\n * // => true\n */\nfunction isJapanese(input = '', allowed) {\n  const augmented = typeOf(allowed) === 'regexp';\n  return isEmpty(input)\n    ? false\n    : [...input].every((char) => {\n      const isJa = isCharJapanese(char);\n      return !augmented ? isJa : isJa || allowed.test(char);\n    });\n}\n\nexport default isJapanese;\n", "var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var cache = null;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (cache && cache.lastThis === this && isEqual(newArgs, cache.lastArgs)) {\n            return cache.lastResult;\n        }\n        var lastResult = resultFn.apply(this, newArgs);\n        cache = {\n            lastResult: lastResult,\n            lastArgs: newArgs,\n            lastThis: this,\n        };\n        return lastResult;\n    }\n    memoized.clear = function clear() {\n        cache = null;\n    };\n    return memoized;\n}\n\nexport { memoizeOne as default };\n", "var has = Object.prototype.hasOwnProperty;\n\nfunction find(iter, tar, key) {\n\tfor (key of iter.keys()) {\n\t\tif (dequal(key, tar)) return key;\n\t}\n}\n\nexport function dequal(foo, bar) {\n\tvar ctor, len, tmp;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ctor === Set) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len;\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!bar.has(tmp)) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === Map) {\n\t\t\tif (foo.size !== bar.size) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (len of foo) {\n\t\t\t\ttmp = len[0];\n\t\t\t\tif (tmp && typeof tmp === 'object') {\n\t\t\t\t\ttmp = find(bar, tmp);\n\t\t\t\t\tif (!tmp) return false;\n\t\t\t\t}\n\t\t\t\tif (!dequal(len[1], bar.get(tmp))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tif (ctor === ArrayBuffer) {\n\t\t\tfoo = new Uint8Array(foo);\n\t\t\tbar = new Uint8Array(bar);\n\t\t} else if (ctor === DataView) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo.getInt8(len) === bar.getInt8(len));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (ArrayBuffer.isView(foo)) {\n\t\t\tif ((len=foo.byteLength) === bar.byteLength) {\n\t\t\t\twhile (len-- && foo[len] === bar[len]);\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n", "import { DEFAULT_OPTIONS } from '../constants.ts';\n/**\n * Easy re-use of merging with default options\n * @param {Object} opts user options\n * @returns user options merged over default options\n */\nconst mergeWithDefaultOptions = (opts = {}) => Object.assign({}, DEFAULT_OPTIONS, opts);\n\nexport default mergeWithDefaultOptions;\n", "import typeOf from './typeOf';\n\nexport function applyMapping(string, mapping, convertEnding) {\n  const root = mapping;\n\n  function nextSubtree(tree, nextChar) {\n    const subtree = tree[nextChar];\n    if (subtree === undefined) {\n      return undefined;\n    }\n    // if the next child node does not have a node value, set its node value to the input\n    return Object.assign({ '': tree[''] + nextChar }, tree[nextChar]);\n  }\n\n  function newChunk(remaining, currentCursor) {\n    // start parsing a new chunk\n    const firstChar = remaining.charAt(0);\n\n    return parse(\n      Object.assign({ '': firstChar }, root[firstChar]),\n      remaining.slice(1),\n      currentCursor,\n      currentCursor + 1\n    );\n  }\n\n  function parse(tree, remaining, lastCursor, currentCursor) {\n    if (!remaining) {\n      if (convertEnding || Object.keys(tree).length === 1) {\n        // nothing more to consume, just commit the last chunk and return it\n        // so as to not have an empty element at the end of the result\n        return tree[''] ? [[lastCursor, currentCursor, tree['']]] : [];\n      }\n      // if we don't want to convert the ending, because there are still possible continuations\n      // return null as the final node value\n      return [[lastCursor, currentCursor, null]];\n    }\n\n    if (Object.keys(tree).length === 1) {\n      return [[lastCursor, currentCursor, tree['']]].concat(\n        newChunk(remaining, currentCursor)\n      );\n    }\n\n    const subtree = nextSubtree(tree, remaining.charAt(0));\n\n    if (subtree === undefined) {\n      return [[lastCursor, currentCursor, tree['']]].concat(\n        newChunk(remaining, currentCursor)\n      );\n    }\n    // continue current branch\n    return parse(subtree, remaining.slice(1), lastCursor, currentCursor + 1);\n  }\n\n  return newChunk(string, 0);\n}\n\n// transform the tree, so that for example hepburnTree['ゔ']['ぁ'][''] === 'va'\n// or kanaTree['k']['y']['a'][''] === 'きゃ'\nexport function transform(tree) {\n  return Object.entries(tree).reduce((map, [char, subtree]) => {\n    const endOfBranch = typeOf(subtree) === 'string';\n    // eslint-disable-next-line no-param-reassign\n    map[char] = endOfBranch ? { '': subtree } : transform(subtree);\n    return map;\n  }, {});\n}\n\nexport function getSubTreeOf(tree, string) {\n  return string.split('').reduce((correctSubTree, char) => {\n    if (correctSubTree[char] === undefined) {\n      // eslint-disable-next-line no-param-reassign\n      correctSubTree[char] = {};\n    }\n    return correctSubTree[char];\n  }, tree);\n}\n\n/**\n * Creates a custom mapping tree, returns a function that accepts a defaultMap which the newly created customMapping will be merged with and returned\n * (customMap) => (defaultMap) => mergedMap\n * @param  {Object} customMap { 'ka' : 'な' }\n * @return {Function} (defaultMap) => defaultMergedWithCustomMap\n * @example\n * const sillyMap = createCustomMapping({ 'ちゃ': 'time', '茎': 'cookie'　});\n * // sillyMap is passed defaultMapping to merge with when called in toRomaji()\n * toRomaji(\"It's 茎 ちゃ よ\", { customRomajiMapping: sillyMap });\n * // => 'It's cookie time yo';\n */\nexport function createCustomMapping(customMap = {}) {\n  const customTree = {};\n\n  if (typeOf(customMap) === 'object') {\n    Object.entries(customMap).forEach(([roma, kana]) => {\n      let subTree = customTree;\n      roma.split('').forEach((char) => {\n        if (subTree[char] === undefined) {\n          subTree[char] = {};\n        }\n        subTree = subTree[char];\n      });\n      subTree[''] = kana;\n    });\n  }\n\n  return function makeMap(map) {\n    const mapCopy = JSON.parse(JSON.stringify(map));\n\n    function transformMap(mapSubtree, customSubtree) {\n      if (mapSubtree === undefined || typeOf(mapSubtree) === 'string') {\n        return customSubtree;\n      }\n      return Object.entries(customSubtree).reduce(\n        (newSubtree, [char, subtree]) => {\n          // eslint-disable-next-line no-param-reassign\n          newSubtree[char] = transformMap(mapSubtree[char], subtree);\n          return newSubtree;\n        },\n        mapSubtree\n      );\n    }\n\n    return transformMap(mapCopy, customTree);\n  };\n}\n\n// allow consumer to pass either function or object as customMapping\nexport function mergeCustomMapping(map, customMapping) {\n  if (!customMapping) {\n    return map;\n  }\n  return typeOf(customMapping) === 'function'\n    ? customMapping(map)\n    : createCustomMapping(customMapping)(map);\n}\n", "import { transform, getSubTreeOf, createCustomMapping } from './kanaMapping';\n\n// NOTE: not exactly kunrei shiki, for example ぢゃ -> dya instead of zya, to avoid name clashing\n/* eslint-disable */\n// prettier-ignore\nconst BASIC_KUNREI = {\n  a: 'あ', i: 'い', u: 'う', e: 'え', o: 'お',\n  k: { a: 'か', i: 'き', u: 'く', e: 'け', o: 'こ', },\n  s: { a: 'さ', i: 'し', u: 'す', e: 'せ', o: 'そ', },\n  t: { a: 'た', i: 'ち', u: 'つ', e: 'て', o: 'と', },\n  n: { a: 'な', i: 'に', u: 'ぬ', e: 'ね', o: 'の', },\n  h: { a: 'は', i: 'ひ', u: 'ふ', e: 'へ', o: 'ほ', },\n  m: { a: 'ま', i: 'み', u: 'む', e: 'め', o: 'も', },\n  y: { a: 'や', u: 'ゆ', o: 'よ' },\n  r: { a: 'ら', i: 'り', u: 'る', e: 'れ', o: 'ろ', },\n  w: { a: 'わ', i: 'ゐ', e: 'ゑ', o: 'を', },\n  g: { a: 'が', i: 'ぎ', u: 'ぐ', e: 'げ', o: 'ご', },\n  z: { a: 'ざ', i: 'じ', u: 'ず', e: 'ぜ', o: 'ぞ', },\n  d: { a: 'だ', i: 'ぢ', u: 'づ', e: 'で', o: 'ど', },\n  b: { a: 'ば', i: 'び', u: 'ぶ', e: 'べ', o: 'ぼ', },\n  p: { a: 'ぱ', i: 'ぴ', u: 'ぷ', e: 'ぺ', o: 'ぽ', },\n  v: { a: 'ゔぁ', i: 'ゔぃ', u: 'ゔ', e: 'ゔぇ', o: 'ゔぉ', },\n};\n\nconst SPECIAL_SYMBOLS = {\n  '.': '。',\n  ',': '、',\n  ':': '：',\n  '/': '・',\n  '!': '！',\n  '?': '？',\n  '~': '〜',\n  '-': 'ー',\n  '‘': '「',\n  '’': '」',\n  '“': '『',\n  '”': '』',\n  '[': '［',\n  ']': '］',\n  '(': '（',\n  ')': '）',\n  '{': '｛',\n  '}': '｝',\n};\n\nconst CONSONANTS = {\n  k: 'き',\n  s: 'し',\n  t: 'ち',\n  n: 'に',\n  h: 'ひ',\n  m: 'み',\n  r: 'り',\n  g: 'ぎ',\n  z: 'じ',\n  d: 'ぢ',\n  b: 'び',\n  p: 'ぴ',\n  v: 'ゔ',\n  q: 'く',\n  f: 'ふ',\n};\nconst SMALL_Y = { ya: 'ゃ', yi: 'ぃ', yu: 'ゅ', ye: 'ぇ', yo: 'ょ' };\nconst SMALL_VOWELS = { a: 'ぁ', i: 'ぃ', u: 'ぅ', e: 'ぇ', o: 'ぉ' };\n\n// typing one should be the same as having typed the other instead\nconst ALIASES = {\n  sh: 'sy', // sha -> sya\n  ch: 'ty', // cho -> tyo\n  cy: 'ty', // cyo -> tyo\n  chy: 'ty', // chyu -> tyu\n  shy: 'sy', // shya -> sya\n  j: 'zy', // ja -> zya\n  jy: 'zy', // jye -> zye\n\n  // exceptions to above rules\n  shi: 'si',\n  chi: 'ti',\n  tsu: 'tu',\n  ji: 'zi',\n  fu: 'hu',\n};\n\n// xtu -> っ\nconst SMALL_LETTERS = Object.assign(\n  {\n    tu: 'っ',\n    wa: 'ゎ',\n    ka: 'ヵ',\n    ke: 'ヶ',\n  },\n  SMALL_VOWELS,\n  SMALL_Y\n);\n\n// don't follow any notable patterns\nconst SPECIAL_CASES = {\n  yi: 'い',\n  wu: 'う',\n  ye: 'いぇ',\n  wi: 'うぃ',\n  we: 'うぇ',\n  kwa: 'くぁ',\n  whu: 'う',\n  // because it's not thya for てゃ but tha\n  // and tha is not てぁ, but てゃ\n  tha: 'てゃ',\n  thu: 'てゅ',\n  tho: 'てょ',\n  dha: 'でゃ',\n  dhu: 'でゅ',\n  dho: 'でょ',\n};\n\nconst AIUEO_CONSTRUCTIONS = {\n  wh: 'う',\n  kw: 'く',\n  qw: 'く',\n  q: 'く',\n  gw: 'ぐ',\n  sw: 'す',\n  ts: 'つ',\n  th: 'て',\n  tw: 'と',\n  dh: 'で',\n  dw: 'ど',\n  fw: 'ふ',\n  f: 'ふ',\n};\n\n/* eslint-enable */\nfunction createRomajiToKanaMap() {\n  const kanaTree = transform(BASIC_KUNREI);\n  // pseudo partial application\n  const subtreeOf = (string) => getSubTreeOf(kanaTree, string);\n\n  // add tya, sya, etc.\n  Object.entries(CONSONANTS).forEach(([consonant, yKana]) => {\n    Object.entries(SMALL_Y).forEach(([roma, kana]) => {\n      // for example kyo -> き + ょ\n      subtreeOf(consonant + roma)[''] = yKana + kana;\n    });\n  });\n\n  Object.entries(SPECIAL_SYMBOLS).forEach(([symbol, jsymbol]) => {\n    subtreeOf(symbol)[''] = jsymbol;\n  });\n\n  // things like うぃ, くぃ, etc.\n  Object.entries(AIUEO_CONSTRUCTIONS).forEach(([consonant, aiueoKana]) => {\n    Object.entries(SMALL_VOWELS).forEach(([vowel, kana]) => {\n      const subtree = subtreeOf(consonant + vowel);\n      subtree[''] = aiueoKana + kana;\n    });\n  });\n\n  // different ways to write ん\n  ['n', \"n'\", 'xn'].forEach((nChar) => {\n    subtreeOf(nChar)[''] = 'ん';\n  });\n\n  // c is equivalent to k, but not for chi, cha, etc. that's why we have to make a copy of k\n  kanaTree.c = JSON.parse(JSON.stringify(kanaTree.k));\n\n  Object.entries(ALIASES).forEach(([string, alternative]) => {\n    const allExceptLast = string.slice(0, string.length - 1);\n    const last = string.charAt(string.length - 1);\n    const parentTree = subtreeOf(allExceptLast);\n    // copy to avoid recursive containment\n    parentTree[last] = JSON.parse(JSON.stringify(subtreeOf(alternative)));\n  });\n\n  function getAlternatives(string) {\n    return [...Object.entries(ALIASES), ...[['c', 'k']]].reduce(\n      (list, [alt, roma]) => (string.startsWith(roma) ? list.concat(string.replace(roma, alt)) : list),\n      []\n    );\n  }\n\n  Object.entries(SMALL_LETTERS).forEach(([kunreiRoma, kana]) => {\n    const last = (char) => char.charAt(char.length - 1);\n    const allExceptLast = (chars) => chars.slice(0, chars.length - 1);\n    const xRoma = `x${kunreiRoma}`;\n    const xSubtree = subtreeOf(xRoma);\n    xSubtree[''] = kana;\n\n    // ltu -> xtu -> っ\n    const parentTree = subtreeOf(`l${allExceptLast(kunreiRoma)}`);\n    parentTree[last(kunreiRoma)] = xSubtree;\n\n    // ltsu -> ltu -> っ\n    getAlternatives(kunreiRoma).forEach((altRoma) => {\n      ['l', 'x'].forEach((prefix) => {\n        const altParentTree = subtreeOf(prefix + allExceptLast(altRoma));\n        altParentTree[last(altRoma)] = subtreeOf(prefix + kunreiRoma);\n      });\n    });\n  });\n\n  Object.entries(SPECIAL_CASES).forEach(([string, kana]) => {\n    subtreeOf(string)[''] = kana;\n  });\n\n  // add kka, tta, etc.\n  function addTsu(tree) {\n    return Object.entries(tree).reduce((tsuTree, [key, value]) => {\n      if (!key) {\n        // we have reached the bottom of this branch\n        // eslint-disable-next-line no-param-reassign\n        tsuTree[key] = `っ${value}`;\n      } else {\n        // more subtrees\n        // eslint-disable-next-line no-param-reassign\n        tsuTree[key] = addTsu(value);\n      }\n      return tsuTree;\n    }, {});\n  }\n  // have to explicitly name c here, because we made it a copy of k, not a reference\n  [...Object.keys(CONSONANTS), 'c', 'y', 'w', 'j'].forEach((consonant) => {\n    const subtree = kanaTree[consonant];\n    subtree[consonant] = addTsu(subtree);\n  });\n  // nn should not be っん\n  delete kanaTree.n.n;\n  // solidify the results, so that there there is referential transparency within the tree\n  return Object.freeze(JSON.parse(JSON.stringify(kanaTree)));\n}\n\nlet romajiToKanaMap = null;\n\nexport function getRomajiToKanaTree() {\n  if (romajiToKanaMap == null) {\n    romajiToKanaMap = createRomajiToKanaMap();\n  }\n  return romajiToKanaMap;\n}\n\nexport const USE_OBSOLETE_KANA_MAP = createCustomMapping({\n  wi: 'ゐ',\n  we: 'ゑ',\n});\n\nexport function IME_MODE_MAP(map) {\n  // in IME mode, we do not want to convert single ns\n  const mapCopy = JSON.parse(JSON.stringify(map));\n  mapCopy.n.n = { '': 'ん' };\n  mapCopy.n[' '] = { '': 'ん' };\n  return mapCopy;\n}\n", "import isEmpty from './isEmpty';\nimport isCharInRange from './isCharInRange';\nimport { LATIN_UPPERCASE_START, LATIN_UPPERCASE_END } from '../constants.ts';\n\n/**\n * Tests if char is in English unicode uppercase range\n * @param  {String} char\n * @return {Boolean}\n */\nfunction isCharUpperCase(char = '') {\n  if (isEmpty(char)) return false;\n  return isCharInRange(char, LATIN_UPPERCASE_START, LATIN_UPPERCASE_END);\n}\n\nexport default isCharUpperCase;\n", "import isEmpty from './isEmpty';\nimport { PROLONGED_SOUND_MARK } from '../constants.ts';\n\n/**\n * Returns true if char is 'ー'\n * @param  {String} char to test\n * @return {Boolean}\n */\nfunction isCharLongDash(char = '') {\n  if (isEmpty(char)) return false;\n  return char.charCodeAt(0) === PROLONGED_SOUND_MARK;\n}\n\nexport default isCharLongDash;\n", "import isEmpty from './isEmpty';\nimport { KANA_SLASH_DOT } from '../constants.ts';\n\n/**\n * Tests if char is '・'\n * @param  {String} char\n * @return {Boolean} true if '・'\n */\nfunction isCharSlashDot(char = '') {\n  if (isEmpty(char)) return false;\n  return char.charCodeAt(0) === KANA_SLASH_DOT;\n}\n\nexport default isCharSlashDot;\n", "import isEmpty from './isEmpty';\nimport isCharLongDash from './isCharLongDash';\nimport isCharInRange from './isCharInRange';\nimport {\n  HIRAGANA_START,\n  HIRAGANA_END,\n} from '../constants.ts';\n\n/**\n * Tests a character. Returns true if the character is [Hiragana](https://en.wikipedia.org/wiki/Hiragana).\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharHiragana(char = '') {\n  if (isEmpty(char)) return false;\n  if (isCharLongDash(char)) return true;\n  return isCharInRange(char, HIRAGANA_START, HIRAGANA_END);\n}\n\nexport default isCharHiragana;\n", "import { KATAKANA_START, HIRAGANA_START } from '../constants.ts';\n\nimport isCharLongDash from './isCharLongDash';\nimport isCharSlashDot from './isCharSlashDot';\nimport isCharHiragana from './isCharHiragana';\n\n/**\n * Convert [Hiragana](https://en.wikipedia.org/wiki/Hiragana) to [Katakana](https://en.wikipedia.org/wiki/Katakana)\n * Passes through any non-hiragana chars\n * @private\n * @param  {String} [input=''] text input\n * @return {String} converted text\n * @example\n * hiraganaToKatakana('ひらがな')\n * // => \"ヒラガナ\"\n * hiraganaToKatakana('ひらがな is a type of kana')\n * // => \"ヒラガナ is a type of kana\"\n */\nfunction hiraganaToKatakana(input = '') {\n  const kata = [];\n  input.split('').forEach((char) => {\n    // Short circuit to avoid incorrect codeshift for 'ー' and '・'\n    if (isCharLongDash(char) || isCharSlashDot(char)) {\n      kata.push(char);\n    } else if (isCharHiragana(char)) {\n      // Shift charcode.\n      const code = char.charCodeAt(0) + (KATAKANA_START - HIRAGANA_START);\n      const kataChar = String.fromCharCode(code);\n      kata.push(kataChar);\n    } else {\n      // Pass non-hiragana chars through\n      kata.push(char);\n    }\n  });\n  return kata.join('');\n}\n\nexport default hiraganaToKatakana;\n", "import memoizeOne from 'memoize-one';\nimport { dequal } from 'dequal';\n\nimport { TO_KANA_METHODS } from './constants';\nimport mergeWithDefaultOptions from './utils/mergeWithDefaultOptions';\nimport {\n  getRomajiToKanaTree,\n  IME_MODE_MAP,\n  USE_OBSOLETE_KANA_MAP,\n} from './utils/romajiToKanaMap';\nimport { applyMapping, mergeCustomMapping } from './utils/kanaMapping';\nimport isCharUpperCase from './utils/isCharUpperCase';\nimport hiraganaToKatakana from './utils/hiraganaToKatakana';\n\n// memoize and deeply compare args so we only recreate when necessary\nexport const createRomajiToKanaMap = memoizeOne(\n  (IMEMode, useObsoleteKana, customKanaMapping) => {\n    let map = getRomajiToKanaTree();\n\n    map = IMEMode ? IME_MODE_MAP(map) : map;\n    map = useObsoleteKana ? USE_OBSOLETE_KANA_MAP(map) : map;\n\n    if (customKanaMapping) {\n      map = mergeCustomMapping(map, customKanaMapping);\n    }\n\n    return map;\n  },\n  dequal\n);\n\n/**\n * Convert [Romaji](https://en.wikipedia.org/wiki/Romaji) to [Kana](https://en.wikipedia.org/wiki/Kana), lowercase text will result in [Hiragana](https://en.wikipedia.org/wiki/Hiragana) and uppercase text will result in [Katakana](https://en.wikipedia.org/wiki/Katakana).\n * @param  {String} [input=''] text\n * @param  {DefaultOptions} [options=defaultOptions]\n * @param  {Object.<string, string>} [map] custom mapping\n * @return {String} converted text\n * @example\n * toKana('onaji BUTTSUUJI')\n * // => 'おなじ ブッツウジ'\n * toKana('ONAJI buttsuuji')\n * // => 'オナジ ぶっつうじ'\n * toKana('座禅‘zazen’スタイル')\n * // => '座禅「ざぜん」スタイル'\n * toKana('batsuge-mu')\n * // => 'ばつげーむ'\n * toKana('!?.:/,~-‘’“”[](){}') // Punctuation conversion\n * // => '！？。：・、〜ー「」『』［］（）｛｝'\n * toKana('we', { useObsoleteKana: true })\n * // => 'ゑ'\n * toKana('wanakana', { customKanaMapping: { na: 'に', ka: 'bana' } });\n * // => 'わにbanaに'\n */\nexport function toKana(input = '', options = {}, map) {\n  let config;\n  if (!map) {\n    config = mergeWithDefaultOptions(options);\n    map = createRomajiToKanaMap(\n      config.IMEMode,\n      config.useObsoleteKana,\n      config.customKanaMapping\n    );\n  } else {\n    config = options;\n  }\n\n  // throw away the substring index information and just concatenate all the kana\n  return splitIntoConvertedKana(input, config, map)\n    .map((kanaToken) => {\n      const [start, end, kana] = kanaToken;\n      if (kana === null) {\n        // haven't converted the end of the string, since we are in IME mode\n        return input.slice(start);\n      }\n      const enforceHiragana = config.IMEMode === TO_KANA_METHODS.HIRAGANA;\n      const enforceKatakana = config.IMEMode === TO_KANA_METHODS.KATAKANA\n        || [...input.slice(start, end)].every(isCharUpperCase);\n\n      return enforceHiragana || !enforceKatakana\n        ? kana\n        : hiraganaToKatakana(kana);\n    })\n    .join('');\n}\n\n/**\n *\n * @private\n * @param {String} [input=''] input text\n * @param {DefaultOptions} [options=defaultOptions] toKana options\n * @param {Object} [map] custom mapping\n * @returns {Array[]} [[start, end, token]]\n * @example\n * splitIntoConvertedKana('buttsuuji')\n * // => [[0, 2, 'ぶ'], [2, 6, 'っつ'], [6, 7, 'う'], [7, 9, 'じ']]\n */\nexport function splitIntoConvertedKana(input = '', options = {}, map) {\n  const { IMEMode, useObsoleteKana, customKanaMapping } = options;\n\n  if (!map) {\n    map = createRomajiToKanaMap(IMEMode, useObsoleteKana, customKanaMapping);\n  }\n\n  return applyMapping(input.toLowerCase(), map, !IMEMode);\n}\n\nexport default toKana;\n", "import isJapanese from '../isJapanese';\nimport toKana, { createRomajiToKanaMap } from '../toKana';\nimport mergeWithDefaultOptions from './mergeWithDefaultOptions';\n\nlet LISTENERS = [];\n/**\n * Automagically replaces input values with converted text to kana\n * @param  {defaultOptions} [options] user config overrides, default conversion is toKana()\n * @return {Function} event handler with bound options\n * @private\n */\nexport function makeOnInput(options) {\n  let prevInput;\n\n  // Enforce IMEMode if not already specified\n  const mergedConfig = Object.assign({}, mergeWithDefaultOptions(options), {\n    IMEMode: options.IMEMode || true,\n  });\n\n  const preConfiguredMap = createRomajiToKanaMap(\n    mergedConfig.IMEMode,\n    mergedConfig.useObsoleteKana,\n    mergedConfig.customKanaMapping\n  );\n\n  const triggers = [\n    ...Object.keys(preConfiguredMap),\n    ...Object.keys(preConfiguredMap).map((char) => char.toUpperCase()),\n  ];\n\n  return function onInput({ target }) {\n    if (\n      target.value !== prevInput\n      && target.dataset.ignoreComposition !== 'true'\n    ) {\n      convertInput(target, mergedConfig, preConfiguredMap, triggers, prevInput);\n    }\n  };\n}\n\nexport function convertInput(target, options, map, triggers, prevInput) {\n  const [head, textToConvert, tail] = splitInput(\n    target.value,\n    target.selectionEnd,\n    triggers\n  );\n  const convertedText = toKana(textToConvert, options, map);\n  const changed = textToConvert !== convertedText;\n\n  if (changed) {\n    const newCursor = head.length + convertedText.length;\n    const newValue = head + convertedText + tail;\n    // eslint-disable-next-line no-param-reassign\n    target.value = newValue;\n    // eslint-disable-next-line no-param-reassign\n    prevInput = newValue;\n\n    if (tail.length) {\n      // push later on event loop (otherwise mid-text insertion can be 1 char too far to the right)\n      setTimeout(() => target.setSelectionRange(newCursor, newCursor), 1);\n    } else {\n      target.setSelectionRange(newCursor, newCursor);\n    }\n  } else {\n    // eslint-disable-next-line no-param-reassign\n    prevInput = target.value;\n  }\n}\n\nexport function onComposition({ type, target, data }) {\n  // navigator.platform is not 100% reliable for singling out all OS,\n  // but for determining desktop \"Mac OS\" it is effective enough.\n  const isMacOS = /Mac/.test(window.navigator && window.navigator.platform);\n  // We don't want to ignore on Android:\n  // https://github.com/WaniKani/WanaKana/issues/82\n  // But MacOS IME auto-closes if we don't ignore:\n  // https://github.com/WaniKani/WanaKana/issues/71\n  // Other platform Japanese IMEs pass through happily\n  if (isMacOS) {\n    if (type === 'compositionupdate' && isJapanese(data)) {\n      // eslint-disable-next-line no-param-reassign\n      target.dataset.ignoreComposition = 'true';\n    }\n\n    if (type === 'compositionend') {\n      // eslint-disable-next-line no-param-reassign\n      target.dataset.ignoreComposition = 'false';\n    }\n  }\n}\n\nexport function trackListeners(id, inputHandler, compositionHandler) {\n  LISTENERS = LISTENERS.concat({\n    id,\n    inputHandler,\n    compositionHandler,\n  });\n}\n\nexport function untrackListeners({ id: targetId }) {\n  LISTENERS = LISTENERS.filter(({ id }) => id !== targetId);\n}\n\nexport function findListeners(el) {\n  return (\n    el && LISTENERS.find(({ id }) => id === el.getAttribute('data-wanakana-id'))\n  );\n}\n\n// Handle non-terminal inserted input conversion:\n// | -> わ| -> わび| -> わ|び -> わs|び -> わsh|び -> わshi|び -> わし|び\n// or multiple ambiguous positioning (to select which \"s\" to work from)\n// こsこs|こsこ -> こsこso|こsこ -> こsこそ|こsこ\nexport function splitInput(text = '', cursor = 0, triggers = []) {\n  let head;\n  let toConvert;\n  let tail;\n\n  if (cursor === 0 && triggers.includes(text[0])) {\n    [head, toConvert, tail] = workFromStart(text, triggers);\n  } else if (cursor > 0) {\n    [head, toConvert, tail] = workBackwards(text, cursor);\n  } else {\n    [head, toConvert] = takeWhileAndSlice(\n      text,\n      (char) => !triggers.includes(char)\n    );\n    [toConvert, tail] = takeWhileAndSlice(\n      toConvert,\n      (char) => !isJapanese(char)\n    );\n  }\n\n  return [head, toConvert, tail];\n}\n\nfunction workFromStart(text, catalystChars) {\n  return [\n    '',\n    ...takeWhileAndSlice(\n      text,\n      (char) => catalystChars.includes(char) || !isJapanese(char, /[0-9]/)\n    ),\n  ];\n}\n\nfunction workBackwards(text = '', startIndex = 0) {\n  const [toConvert, head] = takeWhileAndSlice(\n    [...text.slice(0, startIndex)].reverse(),\n    (char) => !isJapanese(char)\n  );\n  return [\n    head.reverse().join(''),\n    toConvert\n      .split('')\n      .reverse()\n      .join(''),\n    text.slice(startIndex),\n  ];\n}\n\nfunction takeWhileAndSlice(source = {}, predicate = (x) => !!x) {\n  const result = [];\n  const { length } = source;\n  let i = 0;\n  while (i < length && predicate(source[i], i)) {\n    result.push(source[i]);\n    i += 1;\n  }\n  return [result.join(''), source.slice(i)];\n}\n", "/* eslint-disable no-console */\nconst onInput = ({ target: { value, selectionStart, selectionEnd } }) => console.log('input:', { value, selectionStart, selectionEnd });\nconst onCompositionStart = () => console.log('compositionstart');\nconst onCompositionUpdate = ({\n  target: { value, selectionStart, selectionEnd },\n  data,\n}) => console.log('compositionupdate', {\n  data,\n  value,\n  selectionStart,\n  selectionEnd,\n});\nconst onCompositionEnd = () => console.log('compositionend');\n\nconst events = {\n  input: onInput,\n  compositionstart: onCompositionStart,\n  compositionupdate: onCompositionUpdate,\n  compositionend: onCompositionEnd,\n};\n\nexport const addDebugListeners = (input) => {\n  Object.entries(events).forEach(([event, handler]) => input.addEventListener(event, handler)\n  );\n};\n\nexport const removeDebugListeners = (input) => {\n  Object.entries(events).forEach(([event, handler]) => input.removeEventListener(event, handler)\n  );\n};\n", "import { makeOnInput, onComposition, trackListeners } from './utils/dom';\nimport { addDebugListeners } from './utils/logInputEvents';\n\nconst ELEMENTS = ['TEXTAREA', 'INPUT'];\n\nlet idCounter = 0;\nconst newId = () => {\n  idCounter += 1;\n  return `${Date.now()}${idCounter}`;\n};\n\n/**\n * Binds eventListener for 'input' events to an input field to automagically replace values with kana\n * Can pass `{ IMEMode: 'toHiragana' || 'toKatakana' }` to enforce kana conversion type\n * @param  {HTMLInputElement | HTMLTextAreaElement} element textarea, input[type=\"text\"] etc\n * @param  {DefaultOptions} [options=defaultOptions] defaults to { IMEMode: true } using `toKana`\n * @example\n * bind(document.querySelector('#myInput'));\n */\nfunction bind(element = {}, options = {}, debug = false) {\n  if (!ELEMENTS.includes(element.nodeName)) {\n    throw new Error(\n      `Element provided to Wanakana bind() was not a valid input or textarea element.\\n Received: (${JSON.stringify(\n        element\n      )})`\n    );\n  }\n  if (element.hasAttribute('data-wanakana-id')) {\n    return;\n  }\n  const onInput = makeOnInput(options);\n  const id = newId();\n  const attributes = [\n    { name: 'data-wanakana-id', value: id },\n    { name: 'lang', value: 'ja' },\n    { name: 'autoCapitalize', value: 'none' },\n    { name: 'autoCorrect', value: 'off' },\n    { name: 'autoComplete', value: 'off' },\n    { name: 'spellCheck', value: 'false' },\n  ];\n  const previousAttributes = {};\n  attributes.forEach((attribute) => {\n    previousAttributes[attribute.name] = element.getAttribute(attribute.name);\n    element.setAttribute(attribute.name, attribute.value);\n  });\n  element.dataset.previousAttributes = JSON.stringify(previousAttributes);\n  element.addEventListener('input', onInput);\n  element.addEventListener('compositionupdate', onComposition);\n  element.addEventListener('compositionend', onComposition);\n  trackListeners(id, onInput, onComposition);\n  if (debug === true) {\n    addDebugListeners(element);\n  }\n}\n\nexport default bind;\n", "import { findListeners, untrackListeners } from './utils/dom';\nimport { removeDebugListeners } from './utils/logInputEvents';\n\n/**\n * Unbinds eventListener from input field\n * @param  {HTMLInputElement | HTMLTextAreaElement} element textarea, input\n */\nexport function unbind(element, debug = false) {\n  const listeners = findListeners(element);\n  if (listeners == null) {\n    throw new Error(\n      `Element provided to Wanakana unbind() had no listener registered.\\n Received: ${JSON.stringify(\n        element\n      )}`\n    );\n  }\n  const { inputHandler, compositionHandler } = listeners;\n  const attributes = JSON.parse(element.dataset.previousAttributes);\n  Object.keys(attributes).forEach((key) => {\n    if (attributes[key]) {\n      element.setAttribute(key, attributes[key]);\n    } else {\n      element.removeAttribute(key);\n    }\n  });\n  element.removeAttribute('data-previous-attributes');\n  element.removeAttribute('data-ignore-composition');\n  element.removeEventListener('input', inputHandler);\n  element.removeEventListener('compositionstart', compositionHandler);\n  element.removeEventListener('compositionupdate', compositionHandler);\n  element.removeEventListener('compositionend', compositionHandler);\n  untrackListeners(listeners);\n  if (debug === true) {\n    removeDebugListeners(element);\n  }\n}\n\nexport default unbind;\n", "import isEmpty from './isEmpty';\nimport isCharInRange from './isCharInRange';\nimport { ROMAJI_RANGES } from '../constants.ts';\n\n/**\n * Tests a character. Returns true if the character is [Romaji](https://en.wikipedia.org/wiki/Romaji) (allowing [Hepburn romanisation](https://en.wikipedia.org/wiki/Hepburn_romanization))\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharRomaji(char = '') {\n  if (isEmpty(char)) return false;\n  return ROMAJI_RANGES.some(([start, end]) => isCharInRange(char, start, end));\n}\n\nexport default isCharRomaji;\n", "import typeOf from './utils/typeOf';\nimport isEmpty from './utils/isEmpty';\nimport isCharRomaji from './utils/isCharRomaji';\n\n/**\n * Test if `input` is [Romaji](https://en.wikipedia.org/wiki/Romaji) (allowing [Hepburn romanisation](https://en.wikipedia.org/wiki/Hepburn_romanization))\n * @param  {String} [input=''] text\n * @param  {RegExp} [allowed] additional test allowed to pass for each char\n * @return {Boolean} true if [Romaji](https://en.wikipedia.org/wiki/Romaji)\n * @example\n * isRomaji('Tōkyō and Ōsaka')\n * // => true\n * isRomaji('12a*b&c-d')\n * // => true\n * isRomaji('あアA')\n * // => false\n * isRomaji('お願い')\n * // => false\n * isRomaji('a！b&cーd') // Zenkaku punctuation fails\n * // => false\n * isRomaji('a！b&cーd', /[！ー]/)\n * // => true\n */\nfunction isRomaji(input = '', allowed) {\n  const augmented = typeOf(allowed) === 'regexp';\n  return isEmpty(input)\n    ? false\n    : [...input].every((char) => {\n      const isRoma = isCharRomaji(char);\n      return !augmented ? isRoma : isRoma || allowed.test(char);\n    });\n}\n\nexport default isRomaji;\n", "import {\n  KATAKANA_START,\n  KATAKANA_END,\n} from '../constants.ts';\n\nimport isCharInRange from './isCharInRange';\n\n/**\n * Tests a character. Returns true if the character is [Katakana](https://en.wikipedia.org/wiki/Katakana).\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharKatakana(char = '') {\n  return isCharInRange(char, KATAKANA_START, KATAKANA_END);\n}\n\nexport default isCharKatakana;\n", "import isEmpty from './isEmpty';\nimport isCharHiragana from './isCharHiragana';\nimport isCharKatakana from './isCharKatakana';\n\n/**\n * Tests a character. Returns true if the character is [Hiragana](https://en.wikipedia.org/wiki/Hiragana) or [Katakana](https://en.wikipedia.org/wiki/Katakana).\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharKana(char = '') {\n  if (isEmpty(char)) return false;\n  return isCharHiragana(char) || isCharKatakana(char);\n}\n\nexport default isCharKana;\n", "import isEmpty from './utils/isEmpty';\nimport isCharKana from './utils/isCharKana';\n\n/**\n * Test if `input` is [Kana](https://en.wikipedia.org/wiki/Kana) ([Katakana](https://en.wikipedia.org/wiki/Katakana) and/or [Hiragana](https://en.wikipedia.org/wiki/Hiragana))\n * @param  {String} [input=''] text\n * @return {Boolean} true if all [Kana](https://en.wikipedia.org/wiki/Kana)\n * @example\n * isKana('あ')\n * // => true\n * isKana('ア')\n * // => true\n * isKana('あーア')\n * // => true\n * isKana('A')\n * // => false\n * isKana('あAア')\n * // => false\n */\nfunction isKana(input = '') {\n  if (isEmpty(input)) return false;\n  return [...input].every(isCharKana);\n}\n\nexport default isKana;\n", "import isEmpty from './utils/isEmpty';\nimport isCharHiragana from './utils/isCharHiragana';\n\n/**\n * Test if `input` is [Hiragana](https://en.wikipedia.org/wiki/Hiragana)\n * @param  {String} [input=''] text\n * @return {Boolean} true if all [Hiragana](https://en.wikipedia.org/wiki/Hiragana)\n * @example\n * isHiragana('げーむ')\n * // => true\n * isHiragana('A')\n * // => false\n * isHiragana('あア')\n * // => false\n */\nfunction isHiragana(input = '') {\n  if (isEmpty(input)) return false;\n  return [...input].every(isCharHiragana);\n}\n\nexport default isHiragana;\n", "import isEmpty from './utils/isEmpty';\nimport isCharKatakana from './utils/isCharKatakana';\n\n/**\n * Test if `input` is [Katakana](https://en.wikipedia.org/wiki/Katakana)\n * @param  {String} [input=''] text\n * @return {Boolean} true if all [Katakana](https://en.wikipedia.org/wiki/Katakana)\n * @example\n * isKatakana('ゲーム')\n * // => true\n * isKatakana('あ')\n * // => false\n * isKatakana('A')\n * // => false\n * isKatakana('あア')\n * // => false\n */\nfunction isKatakana(input = '') {\n  if (isEmpty(input)) return false;\n  return [...input].every(isCharKatakana);\n}\n\nexport default isKatakana;\n", "import isEmpty from './isEmpty';\nimport { KANJI_ITERATION_MARK } from '../constants.ts';\n\n/**\n * Returns true if char is '々'\n * @param  {String} char to test\n * @return {Boolean}\n */\nfunction isCharIterationMark(char = '') {\n  if (isEmpty(char)) return false;\n  return char.charCodeAt(0) === KANJI_ITERATION_MARK;\n}\n\nexport default isCharIterationMark;\n", "import { KANJI_START, KANJI_END } from '../constants.ts';\n\nimport isCharInRange from './isCharInRange';\nimport isCharIterationMark from './isCharIterationMark';\n/**\n * Tests a character. Returns true if the character is a CJK ideograph (kanji).\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharKanji(char = '') {\n  return isCharInRange(char, KANJI_START, KANJI_END) || isCharIterationMark(char);\n}\n\nexport default isCharKanji;\n", "import isEmpty from './utils/isEmpty';\nimport isCharKanji from './utils/isCharKanji';\n\n/**\n * Tests if `input` is [Kanji](https://en.wikipedia.org/wiki/Kanji) ([Japanese CJK ideographs](https://en.wikipedia.org/wiki/CJK_Unified_Ideographs))\n * @param  {String} [input=''] text\n * @return {Boolean} true if all [Kanji](https://en.wikipedia.org/wiki/Kanji)\n * @example\n * isKanji('刀')\n * // => true\n * isKanji('切腹')\n * // => true\n * isKanji('勢い')\n * // => false\n * isKanji('あAア')\n * // => false\n * isKanji('🐸')\n * // => false\n */\nfunction isKanji(input = '') {\n  if (isEmpty(input)) return false;\n  return [...input].every(isCharKanji);\n}\n\nexport default isKanji;\n", "import isKanji from './isKanji';\nimport isHiragana from './isHiragana';\nimport isKatakana from './isKatakana';\nimport isRomaji from './isRomaji';\n\n/**\n * Test if `input` contains a mix of [Romaji](https://en.wikipedia.org/wiki/Romaji) *and* [Kana](https://en.wikipedia.org/wiki/Kana), defaults to pass through [Kanji](https://en.wikipedia.org/wiki/Kanji)\n * @param  {String} input text\n * @param  {{ passKanji: Boolean}} [options={ passKanji: true }] optional config to pass through kanji\n * @return {Boolean} true if mixed\n * @example\n * isMixed('Abあア'))\n * // => true\n * isMixed('お腹A')) // ignores kanji by default\n * // => true\n * isMixed('お腹A', { passKanji: false }))\n * // => false\n * isMixed('ab'))\n * // => false\n * isMixed('あア'))\n * // => false\n */\nfunction isMixed(input = '', options = { passKanji: true }) {\n  const chars = [...input];\n  let hasKanji = false;\n  if (!options.passKanji) {\n    hasKanji = chars.some(isKanji);\n  }\n  return (chars.some(isHiragana) || chars.some(isKatakana)) && chars.some(isRomaji) && !hasKanji;\n}\n\nexport default isMixed;\n", "import { KATAKANA_START, HIRAGANA_START } from '../constants.ts';\n\nimport isCharLongDash from './isCharLongDash';\nimport isCharSlashDot from './isCharSlashDot';\nimport isCharKatakana from './isCharKatakana';\nconst isCharInitialLongDash = (char, index) => isCharLongDash(char) && index < 1;\nconst isCharInnerLongDash = (char, index) => isCharLongDash(char) && index > 0;\nconst isKanaAsSymbol = (char) => ['ヶ', 'ヵ'].includes(char);\nconst LONG_VOWELS = {\n  a: 'あ',\n  i: 'い',\n  u: 'う',\n  e: 'え',\n  o: 'う',\n};\n\n// inject toRomaji to avoid circular dependency between toRomaji <-> katakanaToHiragana\nfunction katakanaToHiragana(\n  input = '',\n  toRomaji,\n  { isDestinationRomaji, convertLongVowelMark } = {}\n) {\n  let previousKana = '';\n\n  return input\n    .split('')\n    .reduce((hira, char, index) => {\n      // Short circuit to avoid incorrect codeshift for 'ー' and '・'\n      if (\n        isCharSlashDot(char)\n        || isCharInitialLongDash(char, index)\n        || isKanaAsSymbol(char)\n      ) {\n        return hira.concat(char);\n      }\n\n      // Transform long vowels: 'オー' to 'おう'\n      if (\n        convertLongVowelMark\n        && previousKana\n        && isCharInnerLongDash(char, index)\n      ) {\n        // Transform previousKana back to romaji, and slice off the vowel\n        const romaji = toRomaji(previousKana).slice(-1);\n        // However, ensure 'オー' => 'おお' => 'oo' if this is a transform on the way to romaji\n        if (\n          isCharKatakana(input[index - 1])\n          && romaji === 'o'\n          && isDestinationRomaji\n        ) {\n          return hira.concat('お');\n        }\n        return hira.concat(LONG_VOWELS[romaji]);\n        // Transform all other chars\n      }\n\n      if (!isCharLongDash(char) && isCharKatakana(char)) {\n        const code = char.charCodeAt(0) + (HIRAGANA_START - KATAKANA_START);\n        const hiraChar = String.fromCharCode(code);\n        previousKana = hiraChar;\n        return hira.concat(hiraChar);\n      }\n\n      // Pass non katakana chars through\n      previousKana = '';\n      return hira.concat(char);\n    }, [])\n    .join('');\n}\n\nexport default katakanaToHiragana;\n", "import { transform, getSubTreeOf } from './kanaMapping';\nimport { ROMANIZATIONS } from '../constants.ts';\n\nlet kanaToHepburnMap = null;\n\n/* eslint-disable */\n// prettier-ignore\nconst BASIC_ROMAJI = {\n  あ:'a',    い:'i',   う:'u',   え:'e',    お:'o',\n  か:'ka',   き:'ki',  く:'ku',  け:'ke',   こ:'ko',\n  さ:'sa',   し:'shi', す:'su',  せ:'se',   そ:'so',\n  た:'ta',   ち:'chi', つ:'tsu', て:'te',   と:'to',\n  な:'na',   に:'ni',  ぬ:'nu',  ね:'ne',   の:'no',\n  は:'ha',   ひ:'hi',  ふ:'fu',  へ:'he',   ほ:'ho',\n  ま:'ma',   み:'mi',  む:'mu',  め:'me',   も:'mo',\n  ら:'ra',   り:'ri',  る:'ru',  れ:'re',   ろ:'ro',\n  や:'ya',   ゆ:'yu',  よ:'yo',\n  わ:'wa',   ゐ:'wi',  ゑ:'we',  を:'wo',\n  ん: 'n',\n  が:'ga',   ぎ:'gi',  ぐ:'gu',  げ:'ge',   ご:'go',\n  ざ:'za',   じ:'ji',  ず:'zu',  ぜ:'ze',   ぞ:'zo',\n  だ:'da',   ぢ:'ji',  づ:'zu',  で:'de',   ど:'do',\n  ば:'ba',   び:'bi',  ぶ:'bu',  べ:'be',   ぼ:'bo',\n  ぱ:'pa',   ぴ:'pi',  ぷ:'pu',  ぺ:'pe',   ぽ:'po',\n  ゔぁ:'va', ゔぃ:'vi', ゔ:'vu',  ゔぇ:'ve', ゔぉ:'vo',\n};\n/* eslint-enable  */\n\nconst SPECIAL_SYMBOLS = {\n  '。': '.',\n  '、': ',',\n  '：': ':',\n  '・': '/',\n  '！': '!',\n  '？': '?',\n  '〜': '~',\n  'ー': '-',\n  '「': '‘',\n  '」': '’',\n  '『': '“',\n  '』': '”',\n  '［': '[',\n  '］': ']',\n  '（': '(',\n  '）': ')',\n  '｛': '{',\n  '｝': '}',\n  '　': ' ',\n};\n\n// んい -> n'i\nconst AMBIGUOUS_VOWELS = ['あ', 'い', 'う', 'え', 'お', 'や', 'ゆ', 'よ'];\nconst SMALL_Y = { ゃ: 'ya', ゅ: 'yu', ょ: 'yo' };\nconst SMALL_Y_EXTRA = { ぃ: 'yi', ぇ: 'ye' };\nconst SMALL_AIUEO = {\n  ぁ: 'a',\n  ぃ: 'i',\n  ぅ: 'u',\n  ぇ: 'e',\n  ぉ: 'o',\n};\nconst YOON_KANA = [\n  'き',\n  'に',\n  'ひ',\n  'み',\n  'り',\n  'ぎ',\n  'び',\n  'ぴ',\n  'ゔ',\n  'く',\n  'ふ',\n];\nconst YOON_EXCEPTIONS = {\n  し: 'sh',\n  ち: 'ch',\n  じ: 'j',\n  ぢ: 'j',\n};\nconst SMALL_KANA = {\n  っ: '',\n  ゃ: 'ya',\n  ゅ: 'yu',\n  ょ: 'yo',\n  ぁ: 'a',\n  ぃ: 'i',\n  ぅ: 'u',\n  ぇ: 'e',\n  ぉ: 'o',\n};\n\n// going with the intuitive (yet incorrect) solution where っや -> yya and っぃ -> ii\n// in other words, just assume the sokuon could have been applied to anything\nconst SOKUON_WHITELIST = {\n  b: 'b',\n  c: 't',\n  d: 'd',\n  f: 'f',\n  g: 'g',\n  h: 'h',\n  j: 'j',\n  k: 'k',\n  m: 'm',\n  p: 'p',\n  q: 'q',\n  r: 'r',\n  s: 's',\n  t: 't',\n  v: 'v',\n  w: 'w',\n  x: 'x',\n  z: 'z',\n};\n\nfunction getKanaToHepburnTree() {\n  if (kanaToHepburnMap == null) {\n    kanaToHepburnMap = createKanaToHepburnMap();\n  }\n  return kanaToHepburnMap;\n}\n\nexport function getKanaToRomajiTree(romanization) {\n  switch (romanization) {\n    case ROMANIZATIONS.HEPBURN:\n      return getKanaToHepburnTree();\n    default:\n      return {};\n  }\n}\n\nfunction createKanaToHepburnMap() {\n  const romajiTree = transform(BASIC_ROMAJI);\n\n  const subtreeOf = (string) => getSubTreeOf(romajiTree, string);\n  const setTrans = (string, transliteration) => {\n    subtreeOf(string)[''] = transliteration;\n  };\n\n  Object.entries(SPECIAL_SYMBOLS).forEach(([jsymbol, symbol]) => {\n    subtreeOf(jsymbol)[''] = symbol;\n  });\n\n  [...Object.entries(SMALL_Y), ...Object.entries(SMALL_AIUEO)].forEach(\n    ([roma, kana]) => {\n      setTrans(roma, kana);\n    }\n  );\n\n  // きゃ -> kya\n  YOON_KANA.forEach((kana) => {\n    const firstRomajiChar = subtreeOf(kana)[''][0];\n    Object.entries(SMALL_Y).forEach(([yKana, yRoma]) => {\n      setTrans(kana + yKana, firstRomajiChar + yRoma);\n    });\n    // きぃ -> kyi\n    Object.entries(SMALL_Y_EXTRA).forEach(([yKana, yRoma]) => {\n      setTrans(kana + yKana, firstRomajiChar + yRoma);\n    });\n  });\n\n  Object.entries(YOON_EXCEPTIONS).forEach(([kana, roma]) => {\n    // じゃ -> ja\n    Object.entries(SMALL_Y).forEach(([yKana, yRoma]) => {\n      setTrans(kana + yKana, roma + yRoma[1]);\n    });\n    // じぃ -> jyi, じぇ -> je\n    setTrans(`${kana}ぃ`, `${roma}yi`);\n    setTrans(`${kana}ぇ`, `${roma}e`);\n  });\n\n  romajiTree['っ'] = resolveTsu(romajiTree);\n\n  Object.entries(SMALL_KANA).forEach(([kana, roma]) => {\n    setTrans(kana, roma);\n  });\n\n  AMBIGUOUS_VOWELS.forEach((kana) => {\n    setTrans(`ん${kana}`, `n'${subtreeOf(kana)['']}`);\n  });\n\n  // NOTE: could be re-enabled with an option?\n  // // んば -> mbo\n  // const LABIAL = [\n  //   'ば', 'び', 'ぶ', 'べ', 'ぼ',\n  //   'ぱ', 'ぴ', 'ぷ', 'ぺ', 'ぽ',\n  //   'ま', 'み', 'む', 'め', 'も',\n  // ];\n  // LABIAL.forEach((kana) => {\n  //   setTrans(`ん${kana}`, `m${subtreeOf(kana)['']}`);\n  // });\n\n  return Object.freeze(JSON.parse(JSON.stringify(romajiTree)));\n}\n\nfunction resolveTsu(tree) {\n  return Object.entries(tree).reduce((tsuTree, [key, value]) => {\n    if (!key) {\n      // we have reached the bottom of this branch\n      const consonant = value.charAt(0);\n      // eslint-disable-next-line no-param-reassign\n      tsuTree[key] = Object.keys(SOKUON_WHITELIST).includes(consonant)\n        ? SOKUON_WHITELIST[consonant] + value\n        : value;\n    } else {\n      // more subtrees\n      // eslint-disable-next-line no-param-reassign\n      tsuTree[key] = resolveTsu(value);\n    }\n    return tsuTree;\n  }, {});\n}\n", "import memoizeOne from 'memoize-one';\nimport { dequal } from 'dequal';\n\nimport mergeWithDefaultOptions from './utils/mergeWithDefaultOptions';\nimport katakanaToHiragana from './utils/katakanaToHiragana';\nimport isKatakana from './isKatakana';\nimport { getKanaToRomajiTree } from './utils/kanaToRomajiMap';\nimport { applyMapping, mergeCustomMapping } from './utils/kanaMapping';\n\n// memoize and deeply compare args so we only recreate when necessary\nexport const createKanaToRomajiMap = memoizeOne(\n  (romanization, customRomajiMapping) => {\n    let map = getKanaToRomajiTree(romanization);\n\n    if (customRomajiMapping) {\n      map = mergeCustomMapping(map, customRomajiMapping);\n    }\n\n    return map;\n  },\n  dequal\n);\n\n/**\n * Convert kana to romaji\n * @param  {String} kana text input\n * @param  {DefaultOptions} [options=defaultOptions]\n * @param  {Object.<string, string>} [map] custom mapping\n * @return {String} converted text\n * @example\n * toRomaji('ひらがな　カタカナ')\n * // => 'hiragana katakana'\n * toRomaji('げーむ　ゲーム')\n * // => 'ge-mu geemu'\n * toRomaji('ひらがな　カタカナ', { upcaseKatakana: true })\n * // => 'hiragana KATAKANA'\n * toRomaji('つじぎり', { customRomajiMapping: { じ: 'zi', つ: 'tu', り: 'li' } });\n * // => 'tuzigili'\n */\nexport function toRomaji(input = '', options = {}, map) {\n  const config = mergeWithDefaultOptions(options);\n\n  if (!map) {\n    map = createKanaToRomajiMap(\n      config.romanization,\n      config.customRomajiMapping\n    );\n  }\n\n  // just throw away the substring index information and simply concatenate all the kana\n  return splitIntoRomaji(input, config, map)\n    .map((romajiToken) => {\n      const [start, end, romaji] = romajiToken;\n      const makeUpperCase = config.upcaseKatakana && isKatakana(input.slice(start, end));\n      return makeUpperCase ? romaji.toUpperCase() : romaji;\n    })\n    .join('');\n}\n\nfunction splitIntoRomaji(input, options, map) {\n  if (!map) {\n    map = createKanaToRomajiMap(\n      options.romanization,\n      options.customRomajiMapping\n    );\n  }\n\n  const config = Object.assign({}, { isDestinationRomaji: true }, options);\n\n  return applyMapping(\n    katakanaToHiragana(input, toRomaji, config),\n    map,\n    !options.IMEMode\n  );\n}\n\nexport default toRomaji;\n", "import isEmpty from './isEmpty';\nimport { EN_PUNCTUATION_RANGES } from '../constants.ts';\nimport isCharInRange from './isCharInRange';\n\n/**\n * Tests a character. Returns true if the character is considered English punctuation.\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharEnglishPunctuation(char = '') {\n  if (isEmpty(char)) return false;\n  return EN_PUNCTUATION_RANGES.some(([start, end]) => isCharInRange(char, start, end));\n}\n\nexport default isCharEnglishPunctuation;\n", "import mergeWithDefaultOptions from './utils/mergeWithDefaultOptions';\nimport katakanaToHiragana from './utils/katakanaToHiragana';\nimport isCharEnglishPunctuation from './utils/isCharEnglishPunctuation';\nimport isRomaji from './isRomaji';\nimport isMixed from './isMixed';\nimport toKana from './toKana';\nimport toRomaji from './toRomaji';\n\n/**\n * Convert input to [Hiragana](https://en.wikipedia.org/wiki/Hiragana)\n * @param  {String} [input=''] text\n * @param  {DefaultOptions} [options=defaultOptions]\n * @return {String} converted text\n * @example\n * toHiragana('toukyou, オオサカ')\n * // => 'とうきょう、　おおさか'\n * toHiragana('only カナ', { passRomaji: true })\n * // => 'only かな'\n * toHiragana('wi')\n * // => 'うぃ'\n * toHiragana('wi', { useObsoleteKana: true })\n * // => 'ゐ'\n */\nfunction toHiragana(input = '', options = {}) {\n  const config = mergeWithDefaultOptions(options);\n  if (config.passRomaji) {\n    return katakanaToHiragana(input, toRomaji, config);\n  }\n\n  if (isMixed(input, { passKanji: true })) {\n    const convertedKatakana = katakanaToHiragana(input, toRomaji, config);\n    return toKana(convertedKatakana.toLowerCase(), config);\n  }\n\n  if (isRomaji(input) || isCharEnglishPunctuation(input)) {\n    return toKana(input.toLowerCase(), config);\n  }\n\n  return katakanaToHiragana(input, toRomaji, config);\n}\n\nexport default toHiragana;\n", "import mergeWithDefaultOptions from './utils/mergeWithDefaultOptions';\nimport hiraganaToKatakana from './utils/hiraganaToKatakana';\nimport isCharEnglishPunctuation from './utils/isCharEnglishPunctuation';\nimport toKana from './toKana';\nimport isRomaji from './isRomaji';\nimport isMixed from './isMixed';\n\n/**\n * Convert input to [Katakana](https://en.wikipedia.org/wiki/Katakana)\n * @param  {String} [input=''] text\n * @param  {DefaultOptions} [options=defaultOptions]\n * @return {String} converted text\n * @example\n * toKatakana('toukyou, おおさか')\n * // => 'トウキョウ、　オオサカ'\n * toKatakana('only かな', { passRomaji: true })\n * // => 'only カナ'\n * toKatakana('wi')\n * // => 'ウィ'\n * toKatakana('wi', { useObsoleteKana: true })\n * // => 'ヰ'\n */\nfunction toKatakana(input = '', options = {}) {\n  const mergedOptions = mergeWithDefaultOptions(options);\n  if (mergedOptions.passRomaji) {\n    return hiraganaToKatakana(input);\n  }\n\n  if (isMixed(input) || isRomaji(input) || isCharEnglishPunctuation(input)) {\n    const hiragana = toKana(input.toLowerCase(), mergedOptions);\n    return hiraganaToKatakana(hiragana);\n  }\n\n  return hiraganaToKatakana(input);\n}\n\nexport default toKatakana;\n", "import isEmpty from './isEmpty';\nimport { JA_PUNCTUATION_RANGES } from '../constants.ts';\nimport isCharInRange from './isCharInRange';\nimport isCharIterationMark from './isCharIterationMark';\n\n/**\n * Tests a character. Returns true if the character is considered Japanese punctuation.\n * @param  {String} char character string to test\n * @return {Boolean}\n */\nfunction isCharJapanesePunctuation(char = '') {\n  if (isEmpty(char) || isCharIterationMark(char)) return false;\n  return JA_PUNCTUATION_RANGES.some(([start, end]) => isCharInRange(char, start, end));\n}\n\nexport default isCharJapanesePunctuation;\n", "import isEmpty from './utils/isEmpty';\nimport isCharEnglishPunctuation from './utils/isCharEnglishPunctuation';\nimport isCharJapanesePunctuation from './utils/isCharJapanesePunctuation';\nimport isCharRomaji from './utils/isCharRomaji';\nimport isCharKanji from './utils/isCharKanji';\nimport isCharHiragana from './utils/isCharHiragana';\nimport isCharKatakana from './utils/isCharKatakana';\nimport isCharJapanese from './utils/isCharJapanese';\n\nconst isCharEnSpace = (x) => x === ' ';\nconst isCharJaSpace = (x) => x === '　';\nconst isCharJaNum = (x) => /[０-９]/.test(x);\nconst isCharEnNum = (x) => /[0-9]/.test(x);\n\nconst TOKEN_TYPES = {\n  EN: 'en',\n  JA: 'ja',\n  EN_NUM: 'englishNumeral',\n  JA_NUM: 'japaneseNumeral',\n  EN_PUNC: 'englishPunctuation',\n  JA_PUNC: 'japanesePunctuation',\n  KANJI: 'kanji',\n  HIRAGANA: 'hiragana',\n  KATAKANA: 'katakana',\n  SPACE: 'space',\n  OTHER: 'other',\n};\n\n// prettier-ignore\nexport function getType(input, compact = false) {\n  const {\n    EN, JA, EN_NUM, JA_NUM, EN_PUNC, JA_PUNC, KANJI, HIRAGANA, KATAKANA, SPACE, OTHER,\n  } = TOKEN_TYPES;\n\n  if (compact) {\n    switch (true) {\n      case isCharJaNum(input): return OTHER;\n      case isCharEnNum(input): return OTHER;\n      case isCharEnSpace(input): return EN;\n      case isCharEnglishPunctuation(input): return OTHER;\n      case isCharJaSpace(input): return JA;\n      case isCharJapanesePunctuation(input): return OTHER;\n      case isCharJapanese(input): return JA;\n      case isCharRomaji(input): return EN;\n      default: return OTHER;\n    }\n  } else {\n    switch (true) {\n      case isCharJaSpace(input): return SPACE;\n      case isCharEnSpace(input): return SPACE;\n      case isCharJaNum(input): return JA_NUM;\n      case isCharEnNum(input): return EN_NUM;\n      case isCharEnglishPunctuation(input): return EN_PUNC;\n      case isCharJapanesePunctuation(input): return JA_PUNC;\n      case isCharKanji(input): return KANJI;\n      case isCharHiragana(input): return HIRAGANA;\n      case isCharKatakana(input): return KATAKANA;\n      case isCharJapanese(input): return JA;\n      case isCharRomaji(input): return EN;\n      default: return OTHER;\n    }\n  }\n}\n\n/**\n * Splits input into array of strings separated by opinionated token types\n * `'en', 'ja', 'englishNumeral', 'japaneseNumeral','englishPunctuation', 'japanesePunctuation','kanji', 'hiragana', 'katakana', 'space', 'other'`.\n * If `{ compact: true }` then many same-language tokens are combined (spaces + text, kanji + kana, numeral + punctuation).\n * If `{ detailed: true }` then return array will contain `{ type, value }` instead of `'value'`\n * @param  {String} input text\n * @param  {{compact: Boolean | undefined, detailed: Boolean | undefined}} [options={ compact: false, detailed: false}] options to modify output style\n * @return {(String[]|Array.<{type: String, value: String}>)} text split into tokens containing values, or detailed object\n * @example\n * tokenize('ふふフフ')\n * // ['ふふ', 'フフ']\n *\n * tokenize('感じ')\n * // ['感', 'じ']\n *\n * tokenize('人々')\n * // ['人々']\n *\n * tokenize('truly 私は悲しい')\n * // ['truly', ' ', '私', 'は', '悲', 'しい']\n *\n * tokenize('truly 私は悲しい', { compact: true })\n * // ['truly ', '私は悲しい']\n *\n * tokenize('5romaji here...!?人々漢字ひらがなカタ　カナ４「ＳＨＩＯ」。！')\n * // [ '5', 'romaji', ' ', 'here', '...!?', '人々漢字', 'ひらがな', 'カタ', '　', 'カナ', '４', '「', 'ＳＨＩＯ', '」。！']\n *\n * tokenize('5romaji here...!?人々漢字ひらがなカタ　カナ４「ＳＨＩＯ」。！', { compact: true })\n * // [ '5', 'romaji here', '...!?', '人々漢字ひらがなカタ　カナ', '４「', 'ＳＨＩＯ', '」。！']\n *\n * tokenize('5romaji here...!?人々漢字ひらがなカタ　カナ４「ＳＨＩＯ」。！ لنذهب', { detailed: true })\n * // [\n *  { type: 'englishNumeral', value: '5' },\n *  { type: 'en', value: 'romaji' },\n *  { type: 'space', value: ' ' },\n *  { type: 'en', value: 'here' },\n *  { type: 'englishPunctuation', value: '...!?' },\n *  { type: 'kanji', value: '人々漢字' },\n *  { type: 'hiragana', value: 'ひらがな' },\n *  { type: 'katakana', value: 'カタ' },\n *  { type: 'space', value: '　' },\n *  { type: 'katakana', value: 'カナ' },\n *  { type: 'japaneseNumeral', value: '４' },\n *  { type: 'japanesePunctuation', value: '「' },\n *  { type: 'ja', value: 'ＳＨＩＯ' },\n *  { type: 'japanesePunctuation', value: '」。！' },\n *  { type: 'space', value: ' ' },\n *  { type: 'other', value: 'لنذهب' },\n * ]\n *\n * tokenize('5romaji here...!?人々漢字ひらがなカタ　カナ４「ＳＨＩＯ」。！ لنذهب', { compact: true, detailed: true})\n * // [\n *  { type: 'other', value: '5' },\n *  { type: 'en', value: 'romaji here' },\n *  { type: 'other', value: '...!?' },\n *  { type: 'ja', value: '人々漢字ひらがなカタ　カナ' },\n *  { type: 'other', value: '４「' },\n *  { type: 'ja', value: 'ＳＨＩＯ' },\n *  { type: 'other', value: '」。！' },\n *  { type: 'en', value: ' ' },\n *  { type: 'other', value: 'لنذهب' },\n *]\n */\nfunction tokenize(input, { compact = false, detailed = false } = {}) {\n  if (input == null || isEmpty(input)) {\n    return [];\n  }\n  const chars = [...input];\n  let initial = chars.shift();\n  let prevType = getType(initial, compact);\n  initial = detailed ? { type: prevType, value: initial } : initial;\n\n  const result = chars.reduce(\n    (tokens, char) => {\n      const currType = getType(char, compact);\n      const sameType = currType === prevType;\n      prevType = currType;\n      let newValue = char;\n\n      if (sameType) {\n        newValue = (detailed ? tokens.pop().value : tokens.pop()) + newValue;\n      }\n\n      return detailed\n        ? tokens.concat({ type: currType, value: newValue })\n        : tokens.concat(newValue);\n    },\n    [initial]\n  );\n  return result;\n}\n\nexport default tokenize;\n", "import isJapanese from './isJapanese';\nimport isKana from './isKana';\nimport isKanji from './isKanji';\nimport tokenize from './tokenize';\n\nconst isLeadingWithoutInitialKana = (input, leading) => leading && !isKana(input[0]);\nconst isTrailingWithoutFinalKana = (input, leading) => !leading && !isKana(input[input.length - 1]);\nconst isInvalidMatcher = (input, matchKanji) =>\n  (matchKanji && ![...matchKanji].some(isKanji)) || (!matchKanji && isKana(input));\n\n/**\n * Strips [Okurigana](https://en.wikipedia.org/wiki/Okurigana)\n * @param  {String} input text\n * @param  {{ leading: Boolean | undefined, matchKanji: string | undefined }} [options={ leading: false, matchKanji: '' }] optional config\n * @return {String} text with okurigana removed\n * @example\n * stripOkurigana('踏み込む')\n * // => '踏み込'\n * stripOkurigana('お祝い')\n * // => 'お祝'\n * stripOkurigana('お腹', { leading: true });\n * // => '腹'\n * stripOkurigana('ふみこむ', { matchKanji: '踏み込む' });\n * // => 'ふみこ'\n * stripOkurigana('おみまい', { matchKanji: 'お祝い', leading: true });\n * // => 'みまい'\n */\nfunction stripOkurigana(input = '', { leading = false, matchKanji = '' } = {}) {\n  if (\n    !isJapanese(input) ||\n    isLeadingWithoutInitialKana(input, leading) ||\n    isTrailingWithoutFinalKana(input, leading) ||\n    isInvalidMatcher(input, matchKanji)\n  ) {\n    return input;\n  }\n\n  const chars = matchKanji || input;\n  const okuriganaRegex = new RegExp(\n    leading ? `^${tokenize(chars).shift()}` : `${tokenize(chars).pop()}$`\n  );\n  return input.replace(okuriganaRegex, '');\n}\n\nexport default stripOkurigana;\n", "/**\n * @module utils\n * @description Provides utility functions for the application.\n */\n\n// To this:\nimport * as wanakana from 'wanakana';\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait` milliseconds.\n * @param {Function} func The function to debounce.\n * @param {number} wait The number of milliseconds to delay.\n * @returns {Function} The new debounced function.\n */\nexport const debounce = (func, wait) => {\n    let timeout;\n    const debounced = (...args) => {\n        const later = () => {\n            clearTimeout(timeout);\n            func.apply(this, args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n    debounced.cancel = () => clearTimeout(timeout);\n    return debounced;\n};\n\n/**\n * Generates a focused string of search terms from an array of texts.\n * @param {string[]} texts - An array of strings to process.\n * @returns {string} A space-separated string of search terms.\n */\nexport const generateSearchTerms = (texts = []) => {\n    const termsSet = new Set();\n    texts.filter(Boolean).forEach(text => {\n        const lowerText = String(text).toLowerCase();\n        termsSet.add(lowerText);\n\n        if (wanakana.isKana(lowerText)) {\n            termsSet.add(wanakana.toRomaji(lowerText));\n        }\n        if (wanakana.isRomaji(lowerText)) {\n            termsSet.add(wanakana.toHiragana(lowerText));\n            termsSet.add(wanakana.toKatakana(lowerText));\n        }\n    });\n    return Array.from(termsSet).join(' ');\n};", "/**\n * Fuse.js v7.1.0 - Lightweight fuzzy-search (http://fusejs.io)\n *\n * Copyright (c) 2025 Kiro Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction isArray(value) {\n  return !Array.isArray\n    ? getTag(value) === '[object Array]'\n    : Array.isArray(value)\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/baseToString.js\nconst INFINITY = 1 / 0;\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value\n  }\n  let result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result\n}\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value)\n}\n\nfunction isString(value) {\n  return typeof value === 'string'\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number'\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/isBoolean.js\nfunction isBoolean(value) {\n  return (\n    value === true ||\n    value === false ||\n    (isObjectLike(value) && getTag(value) == '[object Boolean]')\n  )\n}\n\nfunction isObject(value) {\n  return typeof value === 'object'\n}\n\n// Checks if `value` is object-like.\nfunction isObjectLike(value) {\n  return isObject(value) && value !== null\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null\n}\n\nfunction isBlank(value) {\n  return !value.trim().length\n}\n\n// Gets the `toStringTag` of `value`.\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/getTag.js\nfunction getTag(value) {\n  return value == null\n    ? value === undefined\n      ? '[object Undefined]'\n      : '[object Null]'\n    : Object.prototype.toString.call(value)\n}\n\nconst EXTENDED_SEARCH_UNAVAILABLE = 'Extended search is not available';\n\nconst INCORRECT_INDEX_TYPE = \"Incorrect 'index' type\";\n\nconst LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key) =>\n  `Invalid value for key ${key}`;\n\nconst PATTERN_LENGTH_TOO_LARGE = (max) =>\n  `Pattern length exceeds max of ${max}.`;\n\nconst MISSING_KEY_PROPERTY = (name) => `Missing ${name} property in key`;\n\nconst INVALID_KEY_WEIGHT_VALUE = (key) =>\n  `Property 'weight' in key '${key}' must be a positive integer`;\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nclass KeyStore {\n  constructor(keys) {\n    this._keys = [];\n    this._keyMap = {};\n\n    let totalWeight = 0;\n\n    keys.forEach((key) => {\n      let obj = createKey(key);\n\n      this._keys.push(obj);\n      this._keyMap[obj.id] = obj;\n\n      totalWeight += obj.weight;\n    });\n\n    // Normalize weights so that their sum is equal to 1\n    this._keys.forEach((key) => {\n      key.weight /= totalWeight;\n    });\n  }\n  get(keyId) {\n    return this._keyMap[keyId]\n  }\n  keys() {\n    return this._keys\n  }\n  toJSON() {\n    return JSON.stringify(this._keys)\n  }\n}\n\nfunction createKey(key) {\n  let path = null;\n  let id = null;\n  let src = null;\n  let weight = 1;\n  let getFn = null;\n\n  if (isString(key) || isArray(key)) {\n    src = key;\n    path = createKeyPath(key);\n    id = createKeyId(key);\n  } else {\n    if (!hasOwn.call(key, 'name')) {\n      throw new Error(MISSING_KEY_PROPERTY('name'))\n    }\n\n    const name = key.name;\n    src = name;\n\n    if (hasOwn.call(key, 'weight')) {\n      weight = key.weight;\n\n      if (weight <= 0) {\n        throw new Error(INVALID_KEY_WEIGHT_VALUE(name))\n      }\n    }\n\n    path = createKeyPath(name);\n    id = createKeyId(name);\n    getFn = key.getFn;\n  }\n\n  return { path, id, weight, src, getFn }\n}\n\nfunction createKeyPath(key) {\n  return isArray(key) ? key : key.split('.')\n}\n\nfunction createKeyId(key) {\n  return isArray(key) ? key.join('.') : key\n}\n\nfunction get(obj, path) {\n  let list = [];\n  let arr = false;\n\n  const deepGet = (obj, path, index) => {\n    if (!isDefined(obj)) {\n      return\n    }\n    if (!path[index]) {\n      // If there's no path left, we've arrived at the object we care about.\n      list.push(obj);\n    } else {\n      let key = path[index];\n\n      const value = obj[key];\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      // If we're at the last value in the path, and if it's a string/number/bool,\n      // add it to the list\n      if (\n        index === path.length - 1 &&\n        (isString(value) || isNumber(value) || isBoolean(value))\n      ) {\n        list.push(toString(value));\n      } else if (isArray(value)) {\n        arr = true;\n        // Search each item in the array.\n        for (let i = 0, len = value.length; i < len; i += 1) {\n          deepGet(value[i], path, index + 1);\n        }\n      } else if (path.length) {\n        // An object. Recurse further.\n        deepGet(value, path, index + 1);\n      }\n    }\n  };\n\n  // Backwards compatibility (since path used to be a string)\n  deepGet(obj, isString(path) ? path.split('.') : path, 0);\n\n  return arr ? list : list[0]\n}\n\nconst MatchOptions = {\n  // Whether the matches should be included in the result set. When `true`, each record in the result\n  // set will include the indices of the matched characters.\n  // These can consequently be used for highlighting purposes.\n  includeMatches: false,\n  // When `true`, the matching function will continue to the end of a search pattern even if\n  // a perfect match has already been located in the string.\n  findAllMatches: false,\n  // Minimum number of characters that must be matched before a result is considered a match\n  minMatchCharLength: 1\n};\n\nconst BasicOptions = {\n  // When `true`, the algorithm continues searching to the end of the input even if a perfect\n  // match is found before the end of the same input.\n  isCaseSensitive: false,\n  // When `true`, the algorithm will ignore diacritics (accents) in comparisons\n  ignoreDiacritics: false,\n  // When true, the matching function will continue to the end of a search pattern even if\n  includeScore: false,\n  // List of properties that will be searched. This also supports nested properties.\n  keys: [],\n  // Whether to sort the result list, by score\n  shouldSort: true,\n  // Default sort function: sort by ascending score, ascending index\n  sortFn: (a, b) =>\n    a.score === b.score ? (a.idx < b.idx ? -1 : 1) : a.score < b.score ? -1 : 1\n};\n\nconst FuzzyOptions = {\n  // Approximately where in the text is the pattern expected to be found?\n  location: 0,\n  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n  // (of both letters and location), a threshold of '1.0' would match anything.\n  threshold: 0.6,\n  // Determines how close the match must be to the fuzzy location (specified above).\n  // An exact letter match which is 'distance' characters away from the fuzzy location\n  // would score as a complete mismatch. A distance of '0' requires the match be at\n  // the exact location specified, a threshold of '1000' would require a perfect match\n  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n  distance: 100\n};\n\nconst AdvancedOptions = {\n  // When `true`, it enables the use of unix-like search commands\n  useExtendedSearch: false,\n  // The get function to use when fetching an object's properties.\n  // The default will search nested paths *ie foo.bar.baz*\n  getFn: get,\n  // When `true`, search will ignore `location` and `distance`, so it won't matter\n  // where in the string the pattern appears.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score\n  ignoreLocation: false,\n  // When `true`, the calculation for the relevance score (used for sorting) will\n  // ignore the field-length norm.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm\n  ignoreFieldNorm: false,\n  // The weight to determine how much field length norm effects scoring.\n  fieldNormWeight: 1\n};\n\nvar Config = {\n  ...BasicOptions,\n  ...MatchOptions,\n  ...FuzzyOptions,\n  ...AdvancedOptions\n};\n\nconst SPACE = /[^ ]+/g;\n\n// Field-length norm: the shorter the field, the higher the weight.\n// Set to 3 decimals to reduce index size.\nfunction norm(weight = 1, mantissa = 3) {\n  const cache = new Map();\n  const m = Math.pow(10, mantissa);\n\n  return {\n    get(value) {\n      const numTokens = value.match(SPACE).length;\n\n      if (cache.has(numTokens)) {\n        return cache.get(numTokens)\n      }\n\n      // Default function is 1/sqrt(x), weight makes that variable\n      const norm = 1 / Math.pow(numTokens, 0.5 * weight);\n\n      // In place of `toFixed(mantissa)`, for faster computation\n      const n = parseFloat(Math.round(norm * m) / m);\n\n      cache.set(numTokens, n);\n\n      return n\n    },\n    clear() {\n      cache.clear();\n    }\n  }\n}\n\nclass FuseIndex {\n  constructor({\n    getFn = Config.getFn,\n    fieldNormWeight = Config.fieldNormWeight\n  } = {}) {\n    this.norm = norm(fieldNormWeight, 3);\n    this.getFn = getFn;\n    this.isCreated = false;\n\n    this.setIndexRecords();\n  }\n  setSources(docs = []) {\n    this.docs = docs;\n  }\n  setIndexRecords(records = []) {\n    this.records = records;\n  }\n  setKeys(keys = []) {\n    this.keys = keys;\n    this._keysMap = {};\n    keys.forEach((key, idx) => {\n      this._keysMap[key.id] = idx;\n    });\n  }\n  create() {\n    if (this.isCreated || !this.docs.length) {\n      return\n    }\n\n    this.isCreated = true;\n\n    // List is Array<String>\n    if (isString(this.docs[0])) {\n      this.docs.forEach((doc, docIndex) => {\n        this._addString(doc, docIndex);\n      });\n    } else {\n      // List is Array<Object>\n      this.docs.forEach((doc, docIndex) => {\n        this._addObject(doc, docIndex);\n      });\n    }\n\n    this.norm.clear();\n  }\n  // Adds a doc to the end of the index\n  add(doc) {\n    const idx = this.size();\n\n    if (isString(doc)) {\n      this._addString(doc, idx);\n    } else {\n      this._addObject(doc, idx);\n    }\n  }\n  // Removes the doc at the specified index of the index\n  removeAt(idx) {\n    this.records.splice(idx, 1);\n\n    // Change ref index of every subsquent doc\n    for (let i = idx, len = this.size(); i < len; i += 1) {\n      this.records[i].i -= 1;\n    }\n  }\n  getValueForItemAtKeyId(item, keyId) {\n    return item[this._keysMap[keyId]]\n  }\n  size() {\n    return this.records.length\n  }\n  _addString(doc, docIndex) {\n    if (!isDefined(doc) || isBlank(doc)) {\n      return\n    }\n\n    let record = {\n      v: doc,\n      i: docIndex,\n      n: this.norm.get(doc)\n    };\n\n    this.records.push(record);\n  }\n  _addObject(doc, docIndex) {\n    let record = { i: docIndex, $: {} };\n\n    // Iterate over every key (i.e, path), and fetch the value at that key\n    this.keys.forEach((key, keyIndex) => {\n      let value = key.getFn ? key.getFn(doc) : this.getFn(doc, key.path);\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      if (isArray(value)) {\n        let subRecords = [];\n        const stack = [{ nestedArrIndex: -1, value }];\n\n        while (stack.length) {\n          const { nestedArrIndex, value } = stack.pop();\n\n          if (!isDefined(value)) {\n            continue\n          }\n\n          if (isString(value) && !isBlank(value)) {\n            let subRecord = {\n              v: value,\n              i: nestedArrIndex,\n              n: this.norm.get(value)\n            };\n\n            subRecords.push(subRecord);\n          } else if (isArray(value)) {\n            value.forEach((item, k) => {\n              stack.push({\n                nestedArrIndex: k,\n                value: item\n              });\n            });\n          } else ;\n        }\n        record.$[keyIndex] = subRecords;\n      } else if (isString(value) && !isBlank(value)) {\n        let subRecord = {\n          v: value,\n          n: this.norm.get(value)\n        };\n\n        record.$[keyIndex] = subRecord;\n      }\n    });\n\n    this.records.push(record);\n  }\n  toJSON() {\n    return {\n      keys: this.keys,\n      records: this.records\n    }\n  }\n}\n\nfunction createIndex(\n  keys,\n  docs,\n  { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}\n) {\n  const myIndex = new FuseIndex({ getFn, fieldNormWeight });\n  myIndex.setKeys(keys.map(createKey));\n  myIndex.setSources(docs);\n  myIndex.create();\n  return myIndex\n}\n\nfunction parseIndex(\n  data,\n  { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}\n) {\n  const { keys, records } = data;\n  const myIndex = new FuseIndex({ getFn, fieldNormWeight });\n  myIndex.setKeys(keys);\n  myIndex.setIndexRecords(records);\n  return myIndex\n}\n\nfunction computeScore$1(\n  pattern,\n  {\n    errors = 0,\n    currentLocation = 0,\n    expectedLocation = 0,\n    distance = Config.distance,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  const accuracy = errors / pattern.length;\n\n  if (ignoreLocation) {\n    return accuracy\n  }\n\n  const proximity = Math.abs(expectedLocation - currentLocation);\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy\n  }\n\n  return accuracy + proximity / distance\n}\n\nfunction convertMaskToIndices(\n  matchmask = [],\n  minMatchCharLength = Config.minMatchCharLength\n) {\n  let indices = [];\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (let len = matchmask.length; i < len; i += 1) {\n    let match = matchmask[i];\n    if (match && start === -1) {\n      start = i;\n    } else if (!match && start !== -1) {\n      end = i - 1;\n      if (end - start + 1 >= minMatchCharLength) {\n        indices.push([start, end]);\n      }\n      start = -1;\n    }\n  }\n\n  // (i-1 - start) + 1 => i - start\n  if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n    indices.push([start, i - 1]);\n  }\n\n  return indices\n}\n\n// Machine word size\nconst MAX_BITS = 32;\n\nfunction search(\n  text,\n  pattern,\n  patternAlphabet,\n  {\n    location = Config.location,\n    distance = Config.distance,\n    threshold = Config.threshold,\n    findAllMatches = Config.findAllMatches,\n    minMatchCharLength = Config.minMatchCharLength,\n    includeMatches = Config.includeMatches,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  if (pattern.length > MAX_BITS) {\n    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS))\n  }\n\n  const patternLen = pattern.length;\n  // Set starting location at beginning text and initialize the alphabet.\n  const textLen = text.length;\n  // Handle the case when location > text.length\n  const expectedLocation = Math.max(0, Math.min(location, textLen));\n  // Highest score beyond which we give up.\n  let currentThreshold = threshold;\n  // Is there a nearby exact match? (speedup)\n  let bestLocation = expectedLocation;\n\n  // Performance: only computer matches when the minMatchCharLength > 1\n  // OR if `includeMatches` is true.\n  const computeMatches = minMatchCharLength > 1 || includeMatches;\n  // A mask of the matches, used for building the indices\n  const matchMask = computeMatches ? Array(textLen) : [];\n\n  let index;\n\n  // Get all exact matches, here for speed up\n  while ((index = text.indexOf(pattern, bestLocation)) > -1) {\n    let score = computeScore$1(pattern, {\n      currentLocation: index,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    currentThreshold = Math.min(score, currentThreshold);\n    bestLocation = index + patternLen;\n\n    if (computeMatches) {\n      let i = 0;\n      while (i < patternLen) {\n        matchMask[index + i] = 1;\n        i += 1;\n      }\n    }\n  }\n\n  // Reset the best location\n  bestLocation = -1;\n\n  let lastBitArr = [];\n  let finalScore = 1;\n  let binMax = patternLen + textLen;\n\n  const mask = 1 << (patternLen - 1);\n\n  for (let i = 0; i < patternLen; i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    let binMin = 0;\n    let binMid = binMax;\n\n    while (binMin < binMid) {\n      const score = computeScore$1(pattern, {\n        errors: i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation,\n        distance,\n        ignoreLocation\n      });\n\n      if (score <= currentThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    }\n\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid;\n\n    let start = Math.max(1, expectedLocation - binMid + 1);\n    let finish = findAllMatches\n      ? textLen\n      : Math.min(expectedLocation + binMid, textLen) + patternLen;\n\n    // Initialize the bit array\n    let bitArr = Array(finish + 2);\n\n    bitArr[finish + 1] = (1 << i) - 1;\n\n    for (let j = finish; j >= start; j -= 1) {\n      let currentLocation = j - 1;\n      let charMatch = patternAlphabet[text.charAt(currentLocation)];\n\n      if (computeMatches) {\n        // Speed up: quick bool to int conversion (i.e, `charMatch ? 1 : 0`)\n        matchMask[currentLocation] = +!!charMatch;\n      }\n\n      // First pass: exact match\n      bitArr[j] = ((bitArr[j + 1] << 1) | 1) & charMatch;\n\n      // Subsequent passes: fuzzy match\n      if (i) {\n        bitArr[j] |=\n          ((lastBitArr[j + 1] | lastBitArr[j]) << 1) | 1 | lastBitArr[j + 1];\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = computeScore$1(pattern, {\n          errors: i,\n          currentLocation,\n          expectedLocation,\n          distance,\n          ignoreLocation\n        });\n\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore;\n          bestLocation = currentLocation;\n\n          // Already passed `loc`, downhill from here on in.\n          if (bestLocation <= expectedLocation) {\n            break\n          }\n\n          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n          start = Math.max(1, 2 * expectedLocation - bestLocation);\n        }\n      }\n    }\n\n    // No hope for a (better) match at greater error levels.\n    const score = computeScore$1(pattern, {\n      errors: i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    if (score > currentThreshold) {\n      break\n    }\n\n    lastBitArr = bitArr;\n  }\n\n  const result = {\n    isMatch: bestLocation >= 0,\n    // Count exact matches (those with a score of 0) to be \"almost\" exact\n    score: Math.max(0.001, finalScore)\n  };\n\n  if (computeMatches) {\n    const indices = convertMaskToIndices(matchMask, minMatchCharLength);\n    if (!indices.length) {\n      result.isMatch = false;\n    } else if (includeMatches) {\n      result.indices = indices;\n    }\n  }\n\n  return result\n}\n\nfunction createPatternAlphabet(pattern) {\n  let mask = {};\n\n  for (let i = 0, len = pattern.length; i < len; i += 1) {\n    const char = pattern.charAt(i);\n    mask[char] = (mask[char] || 0) | (1 << (len - i - 1));\n  }\n\n  return mask\n}\n\nconst stripDiacritics = String.prototype.normalize\n    ? ((str) => str.normalize('NFD').replace(/[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C04\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F]/g, ''))\n    : ((str) => str);\n\nclass BitapSearch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreDiacritics = Config.ignoreDiacritics,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    this.options = {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreDiacritics,\n      ignoreLocation\n    };\n\n    pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    pattern = ignoreDiacritics ? stripDiacritics(pattern) : pattern;\n    this.pattern = pattern;\n\n    this.chunks = [];\n\n    if (!this.pattern.length) {\n      return\n    }\n\n    const addChunk = (pattern, startIndex) => {\n      this.chunks.push({\n        pattern,\n        alphabet: createPatternAlphabet(pattern),\n        startIndex\n      });\n    };\n\n    const len = this.pattern.length;\n\n    if (len > MAX_BITS) {\n      let i = 0;\n      const remainder = len % MAX_BITS;\n      const end = len - remainder;\n\n      while (i < end) {\n        addChunk(this.pattern.substr(i, MAX_BITS), i);\n        i += MAX_BITS;\n      }\n\n      if (remainder) {\n        const startIndex = len - MAX_BITS;\n        addChunk(this.pattern.substr(startIndex), startIndex);\n      }\n    } else {\n      addChunk(this.pattern, 0);\n    }\n  }\n\n  searchIn(text) {\n    const { isCaseSensitive, ignoreDiacritics, includeMatches } = this.options;\n\n    text = isCaseSensitive ? text : text.toLowerCase();\n    text = ignoreDiacritics ? stripDiacritics(text) : text;\n\n    // Exact match\n    if (this.pattern === text) {\n      let result = {\n        isMatch: true,\n        score: 0\n      };\n\n      if (includeMatches) {\n        result.indices = [[0, text.length - 1]];\n      }\n\n      return result\n    }\n\n    // Otherwise, use Bitap algorithm\n    const {\n      location,\n      distance,\n      threshold,\n      findAllMatches,\n      minMatchCharLength,\n      ignoreLocation\n    } = this.options;\n\n    let allIndices = [];\n    let totalScore = 0;\n    let hasMatches = false;\n\n    this.chunks.forEach(({ pattern, alphabet, startIndex }) => {\n      const { isMatch, score, indices } = search(text, pattern, alphabet, {\n        location: location + startIndex,\n        distance,\n        threshold,\n        findAllMatches,\n        minMatchCharLength,\n        includeMatches,\n        ignoreLocation\n      });\n\n      if (isMatch) {\n        hasMatches = true;\n      }\n\n      totalScore += score;\n\n      if (isMatch && indices) {\n        allIndices = [...allIndices, ...indices];\n      }\n    });\n\n    let result = {\n      isMatch: hasMatches,\n      score: hasMatches ? totalScore / this.chunks.length : 1\n    };\n\n    if (hasMatches && includeMatches) {\n      result.indices = allIndices;\n    }\n\n    return result\n  }\n}\n\nclass BaseMatch {\n  constructor(pattern) {\n    this.pattern = pattern;\n  }\n  static isMultiMatch(pattern) {\n    return getMatch(pattern, this.multiRegex)\n  }\n  static isSingleMatch(pattern) {\n    return getMatch(pattern, this.singleRegex)\n  }\n  search(/*text*/) {}\n}\n\nfunction getMatch(pattern, exp) {\n  const matches = pattern.match(exp);\n  return matches ? matches[1] : null\n}\n\n// Token: 'file\n\nclass ExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'exact'\n  }\n  static get multiRegex() {\n    return /^=\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^=(.*)$/\n  }\n  search(text) {\n    const isMatch = text === this.pattern;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !fire\n\nclass InverseExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!(.*)$/\n  }\n  search(text) {\n    const index = text.indexOf(this.pattern);\n    const isMatch = index === -1;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: ^file\n\nclass PrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'prefix-exact'\n  }\n  static get multiRegex() {\n    return /^\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !^fire\n\nclass InversePrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-prefix-exact'\n  }\n  static get multiRegex() {\n    return /^!\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = !text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: .file$\n\nclass SuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'suffix-exact'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = text.endsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [text.length - this.pattern.length, text.length - 1]\n    }\n  }\n}\n\n// Token: !.file$\n\nclass InverseSuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-suffix-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^!(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = !text.endsWith(this.pattern);\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\nclass FuzzyMatch extends BaseMatch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreDiacritics = Config.ignoreDiacritics,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    super(pattern);\n    this._bitapSearch = new BitapSearch(pattern, {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreDiacritics,\n      ignoreLocation\n    });\n  }\n  static get type() {\n    return 'fuzzy'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^(.*)$/\n  }\n  search(text) {\n    return this._bitapSearch.searchIn(text)\n  }\n}\n\n// Token: 'file\n\nclass IncludeMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'include'\n  }\n  static get multiRegex() {\n    return /^'\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^'(.*)$/\n  }\n  search(text) {\n    let location = 0;\n    let index;\n\n    const indices = [];\n    const patternLen = this.pattern.length;\n\n    // Get all exact matches\n    while ((index = text.indexOf(this.pattern, location)) > -1) {\n      location = index + patternLen;\n      indices.push([index, location - 1]);\n    }\n\n    const isMatch = !!indices.length;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices\n    }\n  }\n}\n\n// \u2757Order is important. DO NOT CHANGE.\nconst searchers = [\n  ExactMatch,\n  IncludeMatch,\n  PrefixExactMatch,\n  InversePrefixExactMatch,\n  InverseSuffixExactMatch,\n  SuffixExactMatch,\n  InverseExactMatch,\n  FuzzyMatch\n];\n\nconst searchersLen = searchers.length;\n\n// Regex to split by spaces, but keep anything in quotes together\nconst SPACE_RE = / +(?=(?:[^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)/;\nconst OR_TOKEN = '|';\n\n// Return a 2D array representation of the query, for simpler parsing.\n// Example:\n// \"^core go$ | rb$ | py$ xy$\" => [[\"^core\", \"go$\"], [\"rb$\"], [\"py$\", \"xy$\"]]\nfunction parseQuery(pattern, options = {}) {\n  return pattern.split(OR_TOKEN).map((item) => {\n    let query = item\n      .trim()\n      .split(SPACE_RE)\n      .filter((item) => item && !!item.trim());\n\n    let results = [];\n    for (let i = 0, len = query.length; i < len; i += 1) {\n      const queryItem = query[i];\n\n      // 1. Handle multiple query match (i.e, once that are quoted, like `\"hello world\"`)\n      let found = false;\n      let idx = -1;\n      while (!found && ++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isMultiMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          found = true;\n        }\n      }\n\n      if (found) {\n        continue\n      }\n\n      // 2. Handle single query matches (i.e, once that are *not* quoted)\n      idx = -1;\n      while (++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isSingleMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          break\n        }\n      }\n    }\n\n    return results\n  })\n}\n\n// These extended matchers can return an array of matches, as opposed\n// to a singl match\nconst MultiMatchSet = new Set([FuzzyMatch.type, IncludeMatch.type]);\n\n/**\n * Command-like searching\n * ======================\n *\n * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,\n * search in a given text.\n *\n * Search syntax:\n *\n * | Token       | Match type                 | Description                            |\n * | ----------- | -------------------------- | -------------------------------------- |\n * | `jscript`   | fuzzy-match                | Items that fuzzy match `jscript`       |\n * | `=scheme`   | exact-match                | Items that are `scheme`                |\n * | `'python`   | include-match              | Items that include `python`            |\n * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |\n * | `^java`     | prefix-exact-match         | Items that start with `java`           |\n * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |\n * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |\n * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |\n *\n * A single pipe character acts as an OR operator. For example, the following\n * query matches entries that start with `core` and end with either`go`, `rb`,\n * or`py`.\n *\n * ```\n * ^core go$ | rb$ | py$\n * ```\n */\nclass ExtendedSearch {\n  constructor(\n    pattern,\n    {\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreDiacritics = Config.ignoreDiacritics,\n      includeMatches = Config.includeMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      ignoreLocation = Config.ignoreLocation,\n      findAllMatches = Config.findAllMatches,\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance\n    } = {}\n  ) {\n    this.query = null;\n    this.options = {\n      isCaseSensitive,\n      ignoreDiacritics,\n      includeMatches,\n      minMatchCharLength,\n      findAllMatches,\n      ignoreLocation,\n      location,\n      threshold,\n      distance\n    };\n\n    pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    pattern = ignoreDiacritics ? stripDiacritics(pattern) : pattern;\n    this.pattern = pattern;\n    this.query = parseQuery(this.pattern, this.options);\n  }\n\n  static condition(_, options) {\n    return options.useExtendedSearch\n  }\n\n  searchIn(text) {\n    const query = this.query;\n\n    if (!query) {\n      return {\n        isMatch: false,\n        score: 1\n      }\n    }\n\n    const { includeMatches, isCaseSensitive, ignoreDiacritics } = this.options;\n\n    text = isCaseSensitive ? text : text.toLowerCase();\n    text = ignoreDiacritics ? stripDiacritics(text) : text;\n\n    let numMatches = 0;\n    let allIndices = [];\n    let totalScore = 0;\n\n    // ORs\n    for (let i = 0, qLen = query.length; i < qLen; i += 1) {\n      const searchers = query[i];\n\n      // Reset indices\n      allIndices.length = 0;\n      numMatches = 0;\n\n      // ANDs\n      for (let j = 0, pLen = searchers.length; j < pLen; j += 1) {\n        const searcher = searchers[j];\n        const { isMatch, indices, score } = searcher.search(text);\n\n        if (isMatch) {\n          numMatches += 1;\n          totalScore += score;\n          if (includeMatches) {\n            const type = searcher.constructor.type;\n            if (MultiMatchSet.has(type)) {\n              allIndices = [...allIndices, ...indices];\n            } else {\n              allIndices.push(indices);\n            }\n          }\n        } else {\n          totalScore = 0;\n          numMatches = 0;\n          allIndices.length = 0;\n          break\n        }\n      }\n\n      // OR condition, so if TRUE, return\n      if (numMatches) {\n        let result = {\n          isMatch: true,\n          score: totalScore / numMatches\n        };\n\n        if (includeMatches) {\n          result.indices = allIndices;\n        }\n\n        return result\n      }\n    }\n\n    // Nothing was matched\n    return {\n      isMatch: false,\n      score: 1\n    }\n  }\n}\n\nconst registeredSearchers = [];\n\nfunction register(...args) {\n  registeredSearchers.push(...args);\n}\n\nfunction createSearcher(pattern, options) {\n  for (let i = 0, len = registeredSearchers.length; i < len; i += 1) {\n    let searcherClass = registeredSearchers[i];\n    if (searcherClass.condition(pattern, options)) {\n      return new searcherClass(pattern, options)\n    }\n  }\n\n  return new BitapSearch(pattern, options)\n}\n\nconst LogicalOperator = {\n  AND: '$and',\n  OR: '$or'\n};\n\nconst KeyType = {\n  PATH: '$path',\n  PATTERN: '$val'\n};\n\nconst isExpression = (query) =>\n  !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);\n\nconst isPath = (query) => !!query[KeyType.PATH];\n\nconst isLeaf = (query) =>\n  !isArray(query) && isObject(query) && !isExpression(query);\n\nconst convertToExplicit = (query) => ({\n  [LogicalOperator.AND]: Object.keys(query).map((key) => ({\n    [key]: query[key]\n  }))\n});\n\n// When `auto` is `true`, the parse function will infer and initialize and add\n// the appropriate `Searcher` instance\nfunction parse(query, options, { auto = true } = {}) {\n  const next = (query) => {\n    let keys = Object.keys(query);\n\n    const isQueryPath = isPath(query);\n\n    if (!isQueryPath && keys.length > 1 && !isExpression(query)) {\n      return next(convertToExplicit(query))\n    }\n\n    if (isLeaf(query)) {\n      const key = isQueryPath ? query[KeyType.PATH] : keys[0];\n\n      const pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];\n\n      if (!isString(pattern)) {\n        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key))\n      }\n\n      const obj = {\n        keyId: createKeyId(key),\n        pattern\n      };\n\n      if (auto) {\n        obj.searcher = createSearcher(pattern, options);\n      }\n\n      return obj\n    }\n\n    let node = {\n      children: [],\n      operator: keys[0]\n    };\n\n    keys.forEach((key) => {\n      const value = query[key];\n\n      if (isArray(value)) {\n        value.forEach((item) => {\n          node.children.push(next(item));\n        });\n      }\n    });\n\n    return node\n  };\n\n  if (!isExpression(query)) {\n    query = convertToExplicit(query);\n  }\n\n  return next(query)\n}\n\n// Practical scoring function\nfunction computeScore(\n  results,\n  { ignoreFieldNorm = Config.ignoreFieldNorm }\n) {\n  results.forEach((result) => {\n    let totalScore = 1;\n\n    result.matches.forEach(({ key, norm, score }) => {\n      const weight = key ? key.weight : null;\n\n      totalScore *= Math.pow(\n        score === 0 && weight ? Number.EPSILON : score,\n        (weight || 1) * (ignoreFieldNorm ? 1 : norm)\n      );\n    });\n\n    result.score = totalScore;\n  });\n}\n\nfunction transformMatches(result, data) {\n  const matches = result.matches;\n  data.matches = [];\n\n  if (!isDefined(matches)) {\n    return\n  }\n\n  matches.forEach((match) => {\n    if (!isDefined(match.indices) || !match.indices.length) {\n      return\n    }\n\n    const { indices, value } = match;\n\n    let obj = {\n      indices,\n      value\n    };\n\n    if (match.key) {\n      obj.key = match.key.src;\n    }\n\n    if (match.idx > -1) {\n      obj.refIndex = match.idx;\n    }\n\n    data.matches.push(obj);\n  });\n}\n\nfunction transformScore(result, data) {\n  data.score = result.score;\n}\n\nfunction format(\n  results,\n  docs,\n  {\n    includeMatches = Config.includeMatches,\n    includeScore = Config.includeScore\n  } = {}\n) {\n  const transformers = [];\n\n  if (includeMatches) transformers.push(transformMatches);\n  if (includeScore) transformers.push(transformScore);\n\n  return results.map((result) => {\n    const { idx } = result;\n\n    const data = {\n      item: docs[idx],\n      refIndex: idx\n    };\n\n    if (transformers.length) {\n      transformers.forEach((transformer) => {\n        transformer(result, data);\n      });\n    }\n\n    return data\n  })\n}\n\nclass Fuse {\n  constructor(docs, options = {}, index) {\n    this.options = { ...Config, ...options };\n\n    if (\n      this.options.useExtendedSearch &&\n      !true\n    ) {\n      throw new Error(EXTENDED_SEARCH_UNAVAILABLE)\n    }\n\n    this._keyStore = new KeyStore(this.options.keys);\n\n    this.setCollection(docs, index);\n  }\n\n  setCollection(docs, index) {\n    this._docs = docs;\n\n    if (index && !(index instanceof FuseIndex)) {\n      throw new Error(INCORRECT_INDEX_TYPE)\n    }\n\n    this._myIndex =\n      index ||\n      createIndex(this.options.keys, this._docs, {\n        getFn: this.options.getFn,\n        fieldNormWeight: this.options.fieldNormWeight\n      });\n  }\n\n  add(doc) {\n    if (!isDefined(doc)) {\n      return\n    }\n\n    this._docs.push(doc);\n    this._myIndex.add(doc);\n  }\n\n  remove(predicate = (/* doc, idx */) => false) {\n    const results = [];\n\n    for (let i = 0, len = this._docs.length; i < len; i += 1) {\n      const doc = this._docs[i];\n      if (predicate(doc, i)) {\n        this.removeAt(i);\n        i -= 1;\n        len -= 1;\n\n        results.push(doc);\n      }\n    }\n\n    return results\n  }\n\n  removeAt(idx) {\n    this._docs.splice(idx, 1);\n    this._myIndex.removeAt(idx);\n  }\n\n  getIndex() {\n    return this._myIndex\n  }\n\n  search(query, { limit = -1 } = {}) {\n    const {\n      includeMatches,\n      includeScore,\n      shouldSort,\n      sortFn,\n      ignoreFieldNorm\n    } = this.options;\n\n    let results = isString(query)\n      ? isString(this._docs[0])\n        ? this._searchStringList(query)\n        : this._searchObjectList(query)\n      : this._searchLogical(query);\n\n    computeScore(results, { ignoreFieldNorm });\n\n    if (shouldSort) {\n      results.sort(sortFn);\n    }\n\n    if (isNumber(limit) && limit > -1) {\n      results = results.slice(0, limit);\n    }\n\n    return format(results, this._docs, {\n      includeMatches,\n      includeScore\n    })\n  }\n\n  _searchStringList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { records } = this._myIndex;\n    const results = [];\n\n    // Iterate over every string in the index\n    records.forEach(({ v: text, i: idx, n: norm }) => {\n      if (!isDefined(text)) {\n        return\n      }\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        results.push({\n          item: text,\n          idx,\n          matches: [{ score, value: text, norm, indices }]\n        });\n      }\n    });\n\n    return results\n  }\n\n  _searchLogical(query) {\n\n    const expression = parse(query, this.options);\n\n    const evaluate = (node, item, idx) => {\n      if (!node.children) {\n        const { keyId, searcher } = node;\n\n        const matches = this._findMatches({\n          key: this._keyStore.get(keyId),\n          value: this._myIndex.getValueForItemAtKeyId(item, keyId),\n          searcher\n        });\n\n        if (matches && matches.length) {\n          return [\n            {\n              idx,\n              item,\n              matches\n            }\n          ]\n        }\n\n        return []\n      }\n\n      const res = [];\n      for (let i = 0, len = node.children.length; i < len; i += 1) {\n        const child = node.children[i];\n        const result = evaluate(child, item, idx);\n        if (result.length) {\n          res.push(...result);\n        } else if (node.operator === LogicalOperator.AND) {\n          return []\n        }\n      }\n      return res\n    };\n\n    const records = this._myIndex.records;\n    const resultMap = {};\n    const results = [];\n\n    records.forEach(({ $: item, i: idx }) => {\n      if (isDefined(item)) {\n        let expResults = evaluate(expression, item, idx);\n\n        if (expResults.length) {\n          // Dedupe when adding\n          if (!resultMap[idx]) {\n            resultMap[idx] = { idx, item, matches: [] };\n            results.push(resultMap[idx]);\n          }\n          expResults.forEach(({ matches }) => {\n            resultMap[idx].matches.push(...matches);\n          });\n        }\n      }\n    });\n\n    return results\n  }\n\n  _searchObjectList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { keys, records } = this._myIndex;\n    const results = [];\n\n    // List is Array<Object>\n    records.forEach(({ $: item, i: idx }) => {\n      if (!isDefined(item)) {\n        return\n      }\n\n      let matches = [];\n\n      // Iterate over every key (i.e, path), and fetch the value at that key\n      keys.forEach((key, keyIndex) => {\n        matches.push(\n          ...this._findMatches({\n            key,\n            value: item[keyIndex],\n            searcher\n          })\n        );\n      });\n\n      if (matches.length) {\n        results.push({\n          idx,\n          item,\n          matches\n        });\n      }\n    });\n\n    return results\n  }\n  _findMatches({ key, value, searcher }) {\n    if (!isDefined(value)) {\n      return []\n    }\n\n    let matches = [];\n\n    if (isArray(value)) {\n      value.forEach(({ v: text, i: idx, n: norm }) => {\n        if (!isDefined(text)) {\n          return\n        }\n\n        const { isMatch, score, indices } = searcher.searchIn(text);\n\n        if (isMatch) {\n          matches.push({\n            score,\n            key,\n            value: text,\n            idx,\n            norm,\n            indices\n          });\n        }\n      });\n    } else {\n      const { v: text, n: norm } = value;\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        matches.push({ score, key, value: text, norm, indices });\n      }\n    }\n\n    return matches\n  }\n}\n\nFuse.version = '7.1.0';\nFuse.createIndex = createIndex;\nFuse.parseIndex = parseIndex;\nFuse.config = Config;\n\n{\n  Fuse.parseQuery = parse;\n}\n\n{\n  register(ExtendedSearch);\n}\n\nexport { Fuse as default };\n", "/**\n * @module jotoba\n * @description Handles searching via the Jotoba and JDict APIs with fallback mechanisms.\n */\nimport { els } from './dom.js';\nimport { state } from './config.js';\nimport { updateExternalSearchTab } from './ui.js';\n\nimport { dbPromise } from './database.js';\nimport { debounce } from './utils.js';\n\n// --- Constants ---\nconst JAPANESE_REGEX = /[\\u3040-\\u309F\\u30A0-\\u30FF\\u4E00-\\u9FAF]/;\nconst JDICT_BASE_URL = 'https://jdict.net/api/v1/search';\nconst JOTOBA_BASE_URL = 'https://jotoba.de/api/search/words';\nconst REQUEST_TIMEOUT = 10000;\nconst CACHE_DURATION = 24 * 60 * 60 * 1000; // 24 hours\nconst RATE_LIMIT_WINDOW = 1000;\nconst MAX_RETRIES = 2;\nconst RETRY_DELAY = 1000;\n\n// --- State Management ---\nlet lastRequestTime = 0;\nlet currentSearchId = 0; // Used to prevent race conditions\n\n// --- Core Fetch Logic ---\n\nfunction createTimeout(ms) {\n    return new Promise((_, reject) =>\n        setTimeout(() => reject(new Error('Request timeout')), ms)\n    );\n}\n\nfunction delay(attempt) {\n    const backoffDelay = RETRY_DELAY * Math.pow(2, attempt);\n    return new Promise(resolve => setTimeout(resolve, backoffDelay));\n}\n\nfunction shouldRetry(error) {\n    const retryableErrors = ['Request timeout', 'Rate limit exceeded', 'Server error', 'Failed to fetch', 'NetworkError'];\n    return retryableErrors.some(errorType => error.message.includes(errorType));\n}\n\nasync function fetchWithTimeoutAndRetry(url, options = {}, signal, retries = MAX_RETRIES) {\n    const now = Date.now();\n    if (now - lastRequestTime < RATE_LIMIT_WINDOW) {\n        await new Promise(resolve => setTimeout(resolve, RATE_LIMIT_WINDOW - (now - lastRequestTime)));\n    }\n    lastRequestTime = Date.now();\n\n    if (signal.aborted) {\n        throw new DOMException('Request was aborted', 'AbortError');\n    }\n\n    try {\n        const response = await Promise.race([\n            fetch(url, { ...options, signal }),\n            createTimeout(REQUEST_TIMEOUT)\n        ]);\n\n        if (!response.ok) {\n            if (response.status === 429) throw new Error('Rate limit exceeded');\n            if (response.status >= 500) throw new Error(`Server error: ${response.status}`);\n            throw new Error(`HTTP error: ${response.status}`);\n        }\n\n        return response;\n    } catch (error) {\n        if (error.name === 'AbortError') throw error;\n        if (retries > 0 && shouldRetry(error)) {\n            console.warn(`Request failed, retrying... (${retries} attempts left):`, error.message);\n            await delay(MAX_RETRIES - retries);\n            return fetchWithTimeoutAndRetry(url, options, signal, retries - 1);\n        }\n        throw error;\n    }\n}\n\n\n// --- API Specific Logic (JDict & Jotoba) ---\n\nfunction parseSuggestMean(suggestMean) {\n    if (!suggestMean || typeof suggestMean !== 'string') return [];\n    try {\n        const readingRegex = /\u300C(.*?)\u300D/;\n        return suggestMean.split(';').map(s => s.trim()).filter(Boolean).map(entry => {\n            const match = entry.match(readingRegex);\n            if (match) {\n                const kana = match[1];\n                const kanji = entry.replace(readingRegex, '').trim();\n                return { kanji: kanji || kana, kana };\n            }\n            return { kanji: entry, kana: entry };\n        });\n    } catch (error) {\n        console.warn('Error parsing suggest_mean:', error);\n        return [];\n    }\n}\n\nfunction transformJDictData(jdictData, isJP) {\n    if (!jdictData?.list?.length) return null;\n\n    try {\n        const words = isJP\n            ? jdictData.list.map(item => {\n                const meanings = (item.suggest_mean || '').split(';').map(s => s.trim()).filter(Boolean);\n                const kanaMatch = (item.word || '').match(/\u300C(.*?)\u300D/);\n                const kanji = (item.word || '').replace(/\u300C(.*?)\u300D/, '').trim();\n                return {\n                    reading: { kanji: kanji || (kanaMatch ? kanaMatch[1] : ''), kana: kanaMatch ? kanaMatch[1] : '' },\n                    senses: [{ glosses: meanings }]\n                };\n            })\n            : jdictData.list.map(item => ({\n                reading: { kanji: item.word || '', kana: '' },\n                senses: parseSuggestMean(item.suggest_mean).map(meaning => ({\n                    glosses: [meaning.kanji],\n                    reading: meaning.kana\n                }))\n            }));\n        return { words, kanji: [] };\n    } catch (error) {\n        console.warn('Error transforming JDict data:', error);\n        return null;\n    }\n}\n\nasync function searchJDict(query, isJP, signal) {\n    const dictType = isJP ? 'jp_vi' : 'vi_jp';\n    const url = `${JDICT_BASE_URL}?keyword=${encodeURIComponent(query.trim())}&dict=${dictType}`;\n    const response = await fetchWithTimeoutAndRetry(url, {}, signal);\n    const data = await response.json();\n    return transformJDictData(data, isJP);\n}\n\nasync function searchJotoba(query, isJP, signal) {\n    const response = await fetchWithTimeoutAndRetry(JOTOBA_BASE_URL, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },\n        body: JSON.stringify({ query: query.trim(), language: isJP ? 'Japanese' : 'English', no_english: false }),\n    }, signal);\n    const data = await response.json();\n\n    if (!data || (!data.words?.length && !data.kanji?.length)) {\n        throw new Error('No results found');\n    }\n    return { words: data.words || [], kanji: data.kanji || [] };\n}\n\n\n// --- Caching Logic ---\n\nasync function getCachedResult(db, query) {\n    try {\n        const cachedResult = await db.get('dictionary_cache', query);\n        const isCacheStillValid = cachedResult?.timestamp && (Date.now() - cachedResult.timestamp < CACHE_DURATION);\n        if (isCacheStillValid) return cachedResult;\n        if (cachedResult) await db.delete('dictionary_cache', query);\n    } catch (error) {\n        console.warn('Cache retrieval failed:', error);\n    }\n    return null;\n}\n\nasync function cacheResult(db, query, data) {\n    try {\n        await db.put('dictionary_cache', { data, lang: state.currentLang, timestamp: Date.now() }, query);\n    } catch (error) {\n        console.warn('Cache storage failed:', error);\n    }\n}\n\n\n// --- UI Rendering ---\n\nfunction getUIText(key, fallback) {\n    return state.appData?.ui?.[state.currentLang]?.[key] || fallback;\n}\n\nfunction renderErrorState(error, query) {\n    let errorMessage;\n    const errorMessages = {\n        'timeout': 'searchTimeout',\n        'Rate limit': 'searchRateLimitError',\n        'Server error': 'searchServerError',\n        'Network': 'searchNetworkError',\n        'No results': 'noResults'\n    };\n    const errorKey = Object.keys(errorMessages).find(key => error.message.includes(key)) || 'default';\n\n    if (errorKey === 'noResults') {\n        updateExternalSearchTab('no-results', { query });\n        return;\n    }\n\n    errorMessage = getUIText(errorMessages[errorKey], 'Could not fetch results. Please try again.');\n\n    const errorIcon = `<svg class=\"w-16 h-16 text-red-400 opacity-80 mb-4 mx-auto\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\" /></svg>`;\n\n    const errorContentHTML = `\n        <div class=\"search-placeholder-box text-center content-anim-fade-in\">\n            ${errorIcon}\n            <h3 class=\"text-xl font-semibold text-primary\">${getUIText('searchErrorTitle', 'Search Error')}</h3>\n            <p class=\"text-secondary text-base mt-1 max-w-md mx-auto\">${errorMessage}</p>\n            <button class=\"mt-4 px-4 py-2 bg-primary text-white rounded hover:bg-primary-dark transition-colors\" onclick=\"window.handleExternalSearch('${query.replace(/'/g, \"\\\\'\")}', true)\">\n                ${getUIText('retryButton', 'Retry')}\n            </button>\n        </div>`;\n\n    const placeholderContainer = els.externalSearchTab.querySelector('.placeholder-container');\n    const resultsContainer = els.externalSearchTab.querySelector('.results-container');\n    \n    if(resultsContainer) resultsContainer.style.display = 'none';\n\n    if (placeholderContainer) {\n        placeholderContainer.style.display = 'flex';\n        placeholderContainer.innerHTML = errorContentHTML;\n    }\n}\n\n// --- Main Search Logic ---\n\nasync function performSearch(query, isJP, signal) {\n    if (state.currentLang === 'vi') {\n        try {\n            const jdictResults = await searchJDict(query, isJP, signal);\n            if (jdictResults) return jdictResults;\n            console.log('JDict failed or returned no results, falling back to Jotoba.');\n        } catch (error) {\n            if (error.name === 'AbortError') throw error;\n            console.warn('JDict search failed, falling back to Jotoba:', error.message);\n        }\n    }\n    return await searchJotoba(query, isJP, signal);\n}\n\n// **THE FIX IS HERE**: Added the 'isTabSwitch' parameter.\nasync function handleExternalSearchInternal(query, forceRefresh = false, isTabSwitch = false) {\n    const searchId = ++currentSearchId;\n    const controller = new AbortController();\n\n    if (window.activeSearchController) {\n        window.activeSearchController.abort();\n    }\n    window.activeSearchController = controller;\n    const { signal } = controller;\n    const normalizedQuery = query.trim();\n\n    if (normalizedQuery.length === 0) {\n        updateExternalSearchTab('prompt', {}, true);\n        return;\n    }\n    \n    const db = await dbPromise;\n\n    if (!forceRefresh) {\n        const cachedResult = await getCachedResult(db, normalizedQuery);\n        if (cachedResult && cachedResult.lang === state.currentLang) {\n            if (searchId === currentSearchId) {\n                // Pass the 'isTabSwitch' flag to the UI function.\n                updateExternalSearchTab('results', { results: cachedResult.data, query: normalizedQuery }, isTabSwitch);\n            }\n            return;\n        }\n    }\n    \n    // Only show the searching state if it's an actual search, not just a tab switch.\n    if (!isTabSwitch) {\n        updateExternalSearchTab('searching', { query: normalizedQuery }, false);\n    }\n\n    try {\n        const isJP = JAPANESE_REGEX.test(normalizedQuery);\n        const results = await performSearch(normalizedQuery, isJP, signal);\n\n        if (searchId === currentSearchId) {\n            await cacheResult(db, normalizedQuery, results);\n            // And here.\n            updateExternalSearchTab('results', { results: results, query: normalizedQuery }, isTabSwitch);\n        }\n\n    } catch (error) {\n        if (error.name !== 'AbortError' && searchId === currentSearchId) {\n            console.error(\"External Search Error:\", error);\n            renderErrorState(error, normalizedQuery);\n        }\n    } finally {\n        if (window.activeSearchController === controller) {\n            window.activeSearchController = null;\n        }\n    }\n}\n\nwindow.handleExternalSearch = debounce(handleExternalSearchInternal, 300);\nexport const handleExternalSearch = window.handleExternalSearch;", "/**\n * @module handlers\n * @description Contains event handlers and core application logic for the event-driven architecture.\n */\n\nimport Fuse from 'fuse.js';\nimport { els } from './dom.js';\nimport { state, config } from './config.js';\nimport { debounce } from './utils.js';\nimport { dbPromise, saveProgress, saveSetting, loadAllData, loadTabData, deleteNotesForLevel } from './database.js';\nimport { renderContent, updateProgressDashboard, updateSearchPlaceholders, moveLangPill, updatePinButtonState, updateSidebarPinIcons, closeSidebar, buildLevelSwitcher, renderContentNotAvailable } from './ui.js';\nimport { handleExternalSearch } from './jotoba.js';\n\n// --- OPTIMIZATION: Cache for searchable items and their original state ---\nconst searchCache = new Map();\n\n// --- HELPER FUNCTIONS ---\n\nfunction getUIText(key, replacements = {}) {\n    let text = state.appData.ui?.[state.currentLang]?.[key] || state.appData.ui?.['en']?.[key] || `[${key}]`;\n    for (const [placeholder, value] of Object.entries(replacements)) {\n        text = text.replace(`{${placeholder}}`, value);\n    }\n    return text;\n}\n\nfunction getActiveSearchInput() {\n    return window.innerWidth <= 768 ? els.mobileSearchInput : els.searchInput;\n}\n\n// --- OPTIMIZED DOM MANIPULATION ---\n\nfunction clearAllHighlights(activeTabId) {\n    if (!searchCache.has(activeTabId)) return;\n\n    const cachedItems = searchCache.get(activeTabId);\n    for (const item of cachedItems) {\n        if (item.originalHTML) {\n            item.element.innerHTML = item.originalHTML;\n            delete item.originalHTML; // Clean up cache\n        }\n    }\n}\n\nfunction highlightMatches(element, query) {\n    if (!query) return;\n\n    const cacheEntry = searchCache.get(state.activeTab)?.find(item => item.element === element);\n    if (cacheEntry && !cacheEntry.originalHTML) {\n        cacheEntry.originalHTML = element.innerHTML; // Store original state only once\n    }\n\n    const regex = new RegExp(`(${query.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\")})`, 'gi');\n    const walker = document.createTreeWalker(element, NodeFilter.SHOW_TEXT, null, false);\n    const nodesToModify = [];\n    let currentNode;\n\n    while (currentNode = walker.nextNode()) {\n        if (regex.test(currentNode.nodeValue)) {\n            nodesToModify.push(currentNode);\n        }\n    }\n\n    nodesToModify.forEach(node => {\n        const fragment = document.createDocumentFragment();\n        node.nodeValue.split(regex).forEach(part => {\n            if (part.toLowerCase() === query.toLowerCase()) {\n                const mark = document.createElement('mark');\n                mark.className = 'search-highlight';\n                mark.textContent = part;\n                fragment.appendChild(mark);\n            } else {\n                fragment.appendChild(document.createTextNode(part));\n            }\n        });\n        node.parentNode?.replaceChild(fragment, node);\n    });\n}\n\n\n// --- CORE HANDLERS ---\n\nexport function toggleLearned(category, id, element) {\n    if (!state.progress[category]) state.progress[category] = [];\n    const arr = state.progress[category];\n    const idx = arr.indexOf(id);\n    if (idx > -1) {\n        arr.splice(idx, 1);\n        element.classList.remove('learned');\n    } else {\n        arr.push(id);\n        element.classList.add('learned');\n    }\n    saveProgress();\n}\n\nexport function setupFuseForTab(tabId) {\n    if (state.fuseInstances[tabId] || !state.appData[tabId]) return;\n\n    const container = document.getElementById(tabId);\n    if (!container) return;\n\n    // OPTIMIZATION: Cache searchable elements to avoid re-querying the DOM\n    const searchableElements = Array.from(container.querySelectorAll('[data-search-item], [data-search]'));\n    searchCache.set(tabId, searchableElements.map(el => ({ element: el })));\n\n    const fuseCollection = searchableElements.map((el, index) => ({\n        id: el.dataset.itemId || `${tabId}-${index}`,\n        element: el,\n        searchData: el.dataset.searchItem || el.dataset.search\n    }));\n\n    if (fuseCollection.length > 0) {\n        state.fuseInstances[tabId] = new Fuse(fuseCollection, {\n            keys: ['searchData'],\n            includeScore: true,\n            threshold: 0.3,\n            ignoreLocation: true,\n        });\n    }\n}\n\n\nexport const handleSearch = debounce(() => {\n    const query = getActiveSearchInput().value.trim();\n    const activeTab = document.querySelector('.tab-content.active');\n    if (!activeTab) return;\n\n    const activeTabId = activeTab.id;\n    if (activeTabId === 'external-search') {\n        handleExternalSearch(query);\n        return;\n    }\n    \n    const allItems = searchCache.get(activeTabId)?.map(item => item.element) || [];\n    const allWrappers = activeTab.querySelectorAll('.search-wrapper');\n\n    clearAllHighlights(activeTabId);\n\n    if (!query) {\n        allItems.forEach(item => { item.style.display = ''; });\n        allWrappers.forEach(wrapper => { wrapper.style.display = ''; });\n        return;\n    }\n\n    const fuse = state.fuseInstances[activeTabId];\n    if (!fuse) return;\n    \n    allItems.forEach(item => { item.style.display = 'none'; });\n    allWrappers.forEach(wrapper => { wrapper.style.display = 'none'; });\n    \n    const results = fuse.search(query);\n    results.forEach(result => {\n        const itemElement = result.item.element;\n        itemElement.style.display = '';\n        highlightMatches(itemElement, query);\n        \n        const parentWrapper = itemElement.closest('.search-wrapper');\n        if (parentWrapper) parentWrapper.style.display = '';\n\n        const accordion = itemElement.closest('.accordion-wrapper');\n        if (accordion) {\n            const button = accordion.querySelector('.accordion-button');\n            if (button && !button.classList.contains('open')) button.classList.add('open');\n        }\n    });\n}, 300);\n\nexport function setLanguage(lang, skipRender = false) {\n    state.currentLang = lang;\n    saveSetting('language', lang);\n    \n    if (state.renderedTabs) state.renderedTabs.clear();\n    searchCache.clear();\n\n    const uiStrings = state.appData.ui;\n    const processText = (textKey) => {\n        let text = uiStrings?.[lang]?.[textKey] || uiStrings?.['en']?.[textKey] || `[${textKey}]`;\n        return text.replace('{level}', state.currentLevel.toUpperCase());\n    };\n\n    document.querySelectorAll('[data-lang-key]').forEach(el => {\n        el.textContent = processText(el.dataset.langKey);\n    });\n    document.querySelectorAll('[data-lang-placeholder-key]').forEach(el => {\n        el.placeholder = processText(el.dataset.langPlaceholderKey);\n    });\n    document.querySelectorAll('.lang-switch button').forEach(btn => btn.classList.toggle('active', btn.dataset.lang === lang));\n    document.querySelectorAll('.lang-switch').forEach(moveLangPill);\n\n    const activeNavButton = document.querySelector('.nav-item.active');\n    if (activeNavButton && els.mobileHeaderTitle) {\n        const titleSpan = activeNavButton.querySelector('span');\n        const titleKey = titleSpan?.dataset.langKey;\n        els.mobileHeaderTitle.textContent = titleKey ? processText(titleKey) : (titleSpan?.textContent || '');\n    }\n\n    if (!skipRender) {\n        const activeTab = document.querySelector('.tab-content.active');\n        if (activeTab) {\n            changeTab(activeTab.id, null, true, true, true);\n        }\n        updateProgressDashboard();\n    }\n    updateSearchPlaceholders(state.activeTab);\n}\n\nexport function toggleTheme(event) {\n    const isChecked = event.target.checked;\n    const theme = isChecked ? 'dark' : 'light';\n    document.documentElement.classList.toggle('dark-mode', isChecked);\n    saveSetting('theme', theme);\n\n    document.querySelectorAll('.theme-switch input').forEach(input => {\n        if (input !== event.target) input.checked = isChecked;\n    });\n\n    const desktopEmojiSpan = document.getElementById('theme-emoji');\n    if (desktopEmojiSpan) {\n        desktopEmojiSpan.textContent = isChecked ? '\uD83C\uDF19' : '\u2600\uFE0F';\n    }\n}\n\nfunction showLoader() {\n    if (!els.loadingOverlay) return;\n    const newOverlay = els.loadingOverlay.cloneNode(true);\n    els.loadingOverlay.parentNode.replaceChild(newOverlay, els.loadingOverlay);\n    els.loadingOverlay = newOverlay;\n    els.loadingOverlay.innerHTML = `<div class=\"loader\"></div>`;\n    els.loadingOverlay.classList.remove('hidden');\n    requestAnimationFrame(() => {\n        els.loadingOverlay.style.opacity = '1';\n    });\n}\n\nfunction hideLoader() {\n    return new Promise(resolve => {\n        if (!els.loadingOverlay || els.loadingOverlay.style.opacity === '0') {\n            resolve();\n            return;\n        }\n        const onTransitionEnd = (e) => {\n            if (e.target !== els.loadingOverlay) return;\n            els.loadingOverlay.classList.add('hidden');\n            els.loadingOverlay.removeEventListener('transitionend', onTransitionEnd);\n            resolve();\n        };\n        els.loadingOverlay.addEventListener('transitionend', onTransitionEnd);\n        els.loadingOverlay.style.opacity = '0';\n        setTimeout(() => {\n            onTransitionEnd({ target: els.loadingOverlay });\n        }, 500);\n    });\n}\n\nasync function loadLevelData(level) {\n    state.currentLevel = level;\n    await saveSetting('currentLevel', level);\n\n    const dataPromises = [\n        loadAllData(level),\n        dbPromise.then(db => db.get('progress', state.currentLevel)),\n        dbPromise.then(db => db.get('settings', 'levelSettings'))\n    ];\n    const [_, progressData, levelSettings] = await Promise.all(dataPromises);\n\n    state.progress = progressData || { kanji: [], vocab: [] };\n    state.pinnedTab = levelSettings?.[state.currentLevel]?.pinnedTab || null;\n    \n    state.fuseInstances = {};\n    state.lastDictionaryQuery = '';\n    state.notes.clear();\n    if (state.renderedTabs) state.renderedTabs.clear();\n    searchCache.clear();\n\n    const db = await dbPromise;\n    const isCustomLevel = !!(await db.get('levels', level));\n    if (!isCustomLevel) {\n        const allTabs = ['kanji', 'vocab', 'hiragana', 'katakana', 'grammar', 'keyPoints'];\n        Promise.all(allTabs.map(tabId => loadTabData(level, tabId).catch(err => {\n            console.warn(`Non-critical preload of tab '${tabId}' failed.`, err);\n        }))).then(() => console.log(`Pre-loading for level ${level} complete.`));\n    }\n}\n\nasync function renderLevelUI(level, fromHistory) {\n    document.querySelectorAll('.tab-content').forEach(c => { c.innerHTML = ''; });\n    updateProgressDashboard();\n    setLanguage(state.currentLang, true);\n    document.querySelectorAll('.level-switch-button').forEach(btn => btn.classList.toggle('active', btn.dataset.levelName === level));\n    updateSidebarPinIcons();\n    \n    // THE FIX: Show/Hide Kana tabs based on level\n    const showKana = level === config.defaultLevel;\n    document.querySelector('[data-tab-name=\"hiragana\"]').parentElement.style.display = showKana ? '' : 'none';\n    document.querySelector('[data-tab-name=\"katakana\"]').parentElement.style.display = showKana ? '' : 'none';\n\n    const isMobileView = window.innerWidth <= 768;\n    const defaultTab = isMobileView ? 'external-search' : (showKana ? 'hiragana' : 'keyPoints');\n    \n    let targetTab = state.pinnedTab || defaultTab;\n    if (!showKana && (targetTab === 'hiragana' || targetTab === 'katakana')) {\n        targetTab = 'keyPoints';\n        state.pinnedTab = null;\n        await savePinnedTab(null);\n    }\n    \n    await changeTab(targetTab, null, false, fromHistory, true);\n}\n\nexport async function setLevel(level, fromHistory = false) {\n    if (state.isSwitchingLevel || level === state.currentLevel) {\n        if (level === state.currentLevel) closeSidebar();\n        return;\n    }\n\n    state.isSwitchingLevel = true;\n    state.loadingStatus = 'loading';\n    const minimumDisplayTimePromise = new Promise(resolve => setTimeout(resolve, 500));\n    showLoader();\n\n    try {\n        await Promise.all([\n            loadLevelData(level),\n            minimumDisplayTimePromise\n        ]);\n        await renderLevelUI(level, fromHistory);\n        state.loadingStatus = 'idle';\n    } catch (error) {\n        console.error(`Failed to load level ${level}:`, error);\n        state.loadingStatus = 'error';\n        if (els.loadingOverlay) {\n            const title = getUIText('errorLoadLevelTitle');\n            const body = getUIText('errorLoadLevelBody');\n            els.loadingOverlay.innerHTML = `<div class=\"text-center p-4\"><h3 class=\"text-xl font-semibold text-white mb-2\">${title}</h3><p class=\"text-red-300\">${error.message}</p><p class=\"text-gray-300 mt-4\">${body}</p></div>`;\n        }\n        return; \n    } finally {\n        state.isSwitchingLevel = false;\n        if (state.loadingStatus !== 'error') {\n            await hideLoader();\n        }\n        closeSidebar();\n    }\n}\n\nasync function savePinnedTab(tabId) {\n    try {\n        const db = await dbPromise;\n        let levelSettings = (await db.get('settings', 'levelSettings')) || {};\n        levelSettings[state.currentLevel] = { ...levelSettings[state.currentLevel], pinnedTab: tabId || null };\n        await saveSetting('levelSettings', levelSettings);\n        updatePinButtonState(tabId);\n        updateSidebarPinIcons();\n    } catch (error) {\n        console.error(\"Error saving pinned tab setting:\", error);\n    }\n}\n\nexport function togglePin() {\n    const activeTab = document.querySelector('.tab-content.active');\n    if (!activeTab) return;\n    const tabId = activeTab.id;\n    if (state.pinnedTab === tabId) {\n        els.pinToggle.classList.add('unpinning');\n        els.pinToggle.addEventListener('animationend', () => els.pinToggle.classList.remove('unpinning'), { once: true });\n    }\n    state.pinnedTab = (state.pinnedTab === tabId) ? null : tabId;\n    savePinnedTab(state.pinnedTab);\n}\n\nexport function toggleSidebarPin(event, tabId) {\n    event.stopPropagation();\n    state.pinnedTab = (state.pinnedTab === tabId) ? null : tabId;\n    savePinnedTab(state.pinnedTab);\n}\n\nfunction updateTabUI(tabName) {\n    document.querySelectorAll('.nav-item').forEach(b => b.classList.toggle('active', b.dataset.tabName === tabName));\n    const targetButton = document.querySelector(`.nav-item[data-tab-name=\"${tabName}\"]`);\n    \n    const isMobileView = window.innerWidth <= 768;\n    if (isMobileView) {\n        if (els.mobileSearchBar) els.mobileSearchBar.classList.toggle('visible', tabName !== 'progress');\n        if (targetButton && els.mobileHeaderTitle) {\n            const titleSpan = targetButton.querySelector('span');\n            const titleKey = titleSpan?.dataset.langKey;\n            els.mobileHeaderTitle.textContent = titleKey ? getUIText(titleKey) : (titleSpan?.textContent || '');\n        }\n    }\n    \n    if (els.pinToggle) {\n        els.pinToggle.style.display = isMobileView ? 'block' : 'none';\n        updatePinButtonState(tabName);\n    }\n\n    const isNotesEligible = !['progress', 'external-search'].includes(tabName);\n    const displayStyle = isNotesEligible ? 'flex' : 'none';\n    if (els.desktopNotesBtn) els.desktopNotesBtn.style.display = displayStyle;\n    if (els.mobileNotesBtn) els.mobileNotesBtn.style.display = displayStyle;\n    \n    updateSearchPlaceholders(tabName);\n}\n\nexport async function changeTab(tabName, buttonElement, suppressScroll = false, fromHistory = false, forceRender = false) {\n    const activeTabEl = document.querySelector('.tab-content.active');\n    if (activeTabEl?.id === tabName && !forceRender) {\n        closeSidebar();\n        return;\n    }\n\n    state.activeTab = tabName;\n    updateTabUI(tabName);\n    closeSidebar();\n\n    if (activeTabEl) {\n        state.tabScrollPositions.set(activeTabEl.id, window.scrollY);\n        activeTabEl.classList.remove('active');\n    }\n    const newTabContentEl = document.getElementById(tabName);\n    if (!newTabContentEl) {\n        console.error(`Tab container not found for tab: ${tabName}`);\n        return;\n    }\n    newTabContentEl.classList.add('active');\n\n    if (!fromHistory) {\n        const url = `?level=${state.currentLevel}&tab=${tabName}`;\n        history.pushState({ type: 'tab', tabName, level: state.currentLevel }, '', url);\n    }\n\n    if (activeTabEl?.id === 'external-search') {\n        state.lastDictionaryQuery = getActiveSearchInput().value.trim();\n    }\n\n    const isDataTab = !['external-search', 'progress'].includes(tabName);\n    const hasData = state.appData[tabName];\n\n    if (isDataTab) {\n        if (hasData) {\n            if (forceRender || !state.renderedTabs.has(tabName)) {\n                renderContent(tabName);\n                state.renderedTabs.set(tabName, newTabContentEl.innerHTML);\n            } else {\n                newTabContentEl.innerHTML = state.renderedTabs.get(tabName);\n                setupFuseForTab(tabName);\n            }\n        } else {\n            const db = await dbPromise;\n            const isCustomLevel = await db.get('levels', state.currentLevel);\n            if (isCustomLevel) {\n                renderContentNotAvailable(tabName);\n                state.renderedTabs.delete(tabName);\n            } else {\n                const loaderTemplate = document.getElementById('content-loader-template');\n                newTabContentEl.innerHTML = loaderTemplate ? loaderTemplate.innerHTML : '<div class=\"loader\"></div>';\n                try {\n                    await loadTabData(state.currentLevel, tabName);\n                    renderContent(tabName);\n                    state.renderedTabs.set(tabName, newTabContentEl.innerHTML);\n                } catch (error) {\n                    console.error(`Error loading data for tab ${tabName}:`, error);\n                    const title = getUIText('errorLoadContentTitle');\n                    const body = getUIText('errorLoadContentBody');\n                    newTabContentEl.innerHTML = `<div class=\"p-6 text-center text-secondary\"><h3 class=\"font-semibold text-lg text-primary mb-2\">${title}</h3><p class=\"text-red-400\">${error.message}</p><p class=\"mt-2\">${body}</p></div>`;\n                }\n            }\n        }\n    }\n\n    if (tabName === 'external-search') {\n        getActiveSearchInput().value = state.lastDictionaryQuery;\n        handleExternalSearch(state.lastDictionaryQuery, false, true);\n    } else if (tabName === 'progress') {\n        updateProgressDashboard();\n    } else {\n        const searchInput = getActiveSearchInput();\n        if(searchInput.value) {\n            searchInput.value = '';\n            handleSearch();\n        }\n    }\n\n    if (!suppressScroll) {\n        window.scrollTo({ top: state.tabScrollPositions.get(tabName) || 0, behavior: 'instant' });\n    }\n}\n\nexport function jumpToSection(tabName, sectionTitleKey) {\n    const activeTab = document.querySelector('.tab-content.active');\n    const isAlreadyOnTab = activeTab?.id === tabName;\n    \n    const scrollToAction = () => {\n        requestAnimationFrame(() => {\n            const sectionHeader = document.querySelector(`[data-section-title-key=\"${sectionTitleKey}\"]`);\n            if (!sectionHeader) return;\n\n            const accordionWrapper = sectionHeader.closest('.accordion-wrapper');\n            if (accordionWrapper && sectionHeader.tagName === 'BUTTON' && !sectionHeader.classList.contains('open')) {\n                sectionHeader.click();\n            }\n\n            setTimeout(() => {\n                const elementRect = sectionHeader.getBoundingClientRect();\n                const absoluteElementTop = elementRect.top + window.scrollY;\n                const mobileHeader = document.querySelector('.mobile-header.sticky');\n                const headerOffset = (mobileHeader?.isConnected && getComputedStyle(mobileHeader).position === 'sticky') ? mobileHeader.offsetHeight : 0;\n                \n                window.scrollTo({\n                    top: absoluteElementTop - headerOffset - 20,\n                    behavior: 'smooth'\n                });\n\n                const itemToHighlight = sectionHeader.closest('.progress-item-wrapper, .search-wrapper, .accordion-wrapper');\n                if (itemToHighlight) {\n                    itemToHighlight.classList.add('is-highlighted');\n                    itemToHighlight.addEventListener('animationend', () => {\n                        itemToHighlight.classList.remove('is-highlighted');\n                    }, { once: true });\n                }\n            }, 100);\n        });\n    };\n\n    if (isAlreadyOnTab) {\n        scrollToAction();\n    } else {\n        changeTab(tabName, null, true).then(scrollToAction);\n    }\n}\n\nexport async function deleteLevel(level) {\n    if (level === config.defaultLevel) {\n        alert(getUIText('errorDeleteDefaultLevel'));\n        return;\n    }\n    if (!confirm(getUIText('confirmDeleteLevel', { level: level.toUpperCase() }))) {\n        return;\n    }\n    try {\n        const db = await dbPromise;\n        await Promise.all([\n            db.delete('levels', level),\n            db.delete('progress', level),\n            deleteNotesForLevel(level)\n        ]);\n        \n        state.allAvailableLevels = state.allAvailableLevels.filter(l => l !== level);\n        if (state.currentLevel === level) {\n            await setLevel(config.defaultLevel);\n        } else {\n            const remoteResponse = await fetch(`${config.dataPath}/levels.json`);\n            const remoteData = remoteResponse.ok ? await remoteResponse.json() : { levels: [] };\n            const customLevels = await db.getAllKeys('levels');\n            buildLevelSwitcher(remoteData.levels || [config.defaultLevel], customLevels);\n            document.querySelectorAll('.level-switch-button').forEach(btn => btn.classList.toggle('active', btn.dataset.levelName === state.currentLevel));\n        }\n        alert(getUIText('successDeleteLevel', { level: level.toUpperCase() }));\n    } catch (error) {\n        console.error(\"Failed to delete level:\", error);\n        alert(getUIText('errorDeleteLevel'));\n    }\n}", "/**\n * @module ui\n * @description Handles all HTML rendering and UI updates using template elements.\n */\n\nimport { els } from './dom.js';\nimport { state, config } from './config.js';\nimport { generateSearchTerms } from './utils.js';\nimport { setupFuseForTab } from './handlers.js';\n\n/**\n * REFINED: Now includes a new 'error' state for better user feedback.\n * Generates the inner HTML for the search placeholder based on its state.\n * @param {string} type - The state of the placeholder ('searching', 'no-results', 'prompt', 'error').\n * @param {string} [query=''] - The search query for 'no-results' or error states.\n * @returns {string} The inner HTML for the placeholder box.\n */\nfunction getSearchPlaceholderInnerContent(type, query = '') {\n    const getUIText = (key) => state.appData.ui?.[state.currentLang]?.[key] || `[${key}]`;\n    let innerContent = '';\n\n    switch (type) {\n        case 'searching':\n            innerContent = `<div class=\"loader\"></div>`;\n            break;\n        case 'no-results':\n            const noResultsIcon = `<svg class=\"w-16 h-16 text-secondary opacity-50 mb-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\" /></svg>`;\n            const noResultsTitle = `${getUIText('noResults')} \"<b class=\"text-accent-teal\">${query}</b>\"`;\n            const noResultsSubtitle = getUIText('noResultsSubtitle');\n            innerContent = `\n                ${noResultsIcon}\n                <h3 class=\"text-xl font-semibold text-primary\">${noResultsTitle}</h3>\n                <p class=\"text-secondary text-base mt-1 max-w-md\">${noResultsSubtitle}</p>\n            `;\n            break;\n        case 'error': // NEW: Error state for failed API calls\n            const errorIcon = `<svg class=\"w-16 h-16 text-accent-red opacity-60 mb-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 9v3.75m9-.75a9 9 0 11-18 0 9 9 0 0118 0zm-9 3.75h.008v.008H12v-.008z\" /></svg>`;\n            const errorTitle = getUIText('searchErrorTitle');\n            const errorSubtitle = getUIText('searchError');\n            innerContent = `\n                ${errorIcon}\n                <h3 class=\"text-xl font-semibold text-primary\">${errorTitle}</h3>\n                <p class=\"text-secondary text-base mt-1 max-w-md\">${errorSubtitle}</p>\n                <button data-action=\"retry-search\" data-query=\"${query}\">${getUIText('retryButton')}</button>\n            `;\n            break;\n        case 'prompt':\n        default:\n            const promptIcon = `<svg class=\"w-16 h-16 text-secondary opacity-50 mb-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z\" /></svg>`;\n            const promptSubtitle = getUIText('dictionarySubtitle');\n            const notice = `<div class=\"search-placeholder-notice\">${getUIText('dictionaryNotice')}</div>`;\n            innerContent = `\n                ${promptIcon}\n                <h3 class=\"text-xl font-semibold text-primary\">${promptSubtitle}</h3>\n                ${notice}\n            `;\n            break;\n    }\n    return innerContent;\n}\n\nexport function renderContentNotAvailable(tabName) {\n    const container = document.getElementById(tabName);\n    if (!container) return;\n\n    const getUIText = (key, replacements = {}) => {\n        let text = state.appData.ui?.[state.currentLang]?.[key] || `[${key}]`;\n        for (const [placeholder, value] of Object.entries(replacements)) {\n            text = text.replace(`{${placeholder}}`, value);\n        }\n        return text;\n    };\n\n    const title = getUIText('errorContentNotAvailableTitle');\n    const body = getUIText('errorContentNotAvailableBody', {\n        tabName: tabName,\n        levelName: state.currentLevel.toUpperCase()\n    });\n\n    container.innerHTML = `\n        <div class=\"p-6 text-center text-secondary content-anim-fade-in\">\n            <h3 class=\"font-semibold text-lg text-primary mb-2\">${title}</h3>\n            <p>${body}</p>\n        </div>\n    `;\n}\n\n\nfunction createAccordion(title, contentNode, searchData, titleKey) {\n    const template = document.getElementById('accordion-template');\n    const clone = template.content.cloneNode(true);\n\n    const wrapper = clone.querySelector('.search-wrapper');\n    const button = clone.querySelector('.accordion-button');\n    const titleSpan = clone.querySelector('.accordion-title');\n    const contentDiv = clone.querySelector('.accordion-content');\n\n    wrapper.dataset.search = searchData;\n    button.dataset.sectionTitleKey = titleKey;\n    button.dataset.action = 'toggle-accordion';\n    titleSpan.textContent = title;\n    contentDiv.appendChild(contentNode);\n\n    return clone;\n}\n\nfunction createStyledList(items) {\n    const grid = document.createElement('div');\n    grid.className = 'grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3';\n\n    items.forEach(item => {\n        const title = item.Kanji || item.Reading || Object.values(item)[0];\n        let subtitle = '';\n        if (item.Reading && title !== item.Reading) subtitle = item.Reading;\n\n        let translation = '';\n        if (state.currentLang === 'vi' && item.vi) {\n            translation = `<span style=\"color: var(--accent-yellow)\">${item.vi}</span>`;\n        } else if (state.currentLang === 'en' && (item.Number || item.en)) {\n            translation = `<span style=\"color: var(--accent-yellow)\">${item.Number || item.en}</span>`;\n        }\n\n        const searchData = generateSearchTerms([title, subtitle, item.vi, item.en, item.Number]);\n\n        const cell = document.createElement('div');\n        cell.className = 'cell-bg rounded-lg p-3 flex flex-col justify-center text-center h-24';\n        cell.dataset.searchItem = searchData;\n        cell.innerHTML = `\n            <div class=\"font-bold text-primary text-base sm:text-lg noto-sans\">${title}</div>\n            ${subtitle ? `<div class=\"text-secondary text-xs sm:text-sm leading-relaxed mt-1\">${subtitle}</div>` : ''}\n            <div class=\"text-secondary text-xs sm:text-sm leading-relaxed mt-1\">${translation}</div>\n        `;\n        grid.appendChild(cell);\n    });\n\n    return grid;\n}\n\nconst createCard = (item, category, backGradient) => {\n    const template = document.getElementById('card-template');\n    const clone = template.content.cloneNode(true);\n\n    const root = clone.querySelector('.relative');\n    const learnToggle = clone.querySelector('.learn-toggle');\n    const cardFront = clone.querySelector('.card-face-front');\n    const cardBack = clone.querySelector('.card-face-back');\n\n    if (category === 'kanji') {\n        const detailsToggle = document.createElement('div');\n        detailsToggle.className = 'details-toggle';\n        detailsToggle.dataset.action = 'show-kanji-details';\n        detailsToggle.dataset.id = item.id;\n        detailsToggle.innerHTML = `<svg class=\"h-4 w-4 pointer-events-none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 192 512\" fill=\"currentColor\"><path d=\"M48 80a48 48 0 1 1 96 0A48 48 0 1 1 48 80zM0 224c0-17.7 14.3-32 32-32l64 0c17.7 0 32 14.3 32 32l0 224 32 0c17.7 0 32 14.3 32 32s-14.3 32-32 32L32 512c-17.7 0-32-14.3-32-32s14.3-32 32-32l32 0 0-192-32 0c-17.7 0-32-14.3-32-32z\"/></svg>`;\n        root.prepend(detailsToggle);\n    }\n\n    const isLearned = state.progress[category]?.includes(item.id);\n    const meaningText = item.meaning?.[state.currentLang] || item.meaning?.en || '';\n\n    const frontContent = category === 'kanji'\n        ? `<p class=\"text-4xl sm:text-6xl font-bold noto-sans\">${item.kanji}</p>`\n        : `<div class=\"text-center p-2\"><p class=\"text-xl sm:text-2xl font-semibold noto-sans\">${item.word}</p></div>`;\n\n    let backContent = '';\n    if (category === 'kanji') {\n        backContent = `<div class=\"w-full text-center\"><p class=\"font-bold text-xl mb-2\">${meaningText}</p><div class=\"text-sm opacity-80\"><p>On: ${item.onyomi}</p><p>Kun: ${item.kunyomi || '\u2013'}</p></div></div>`;\n        cardBack.style.justifyContent = 'center';\n    } else {\n        backContent = `<p class=\"text-lg sm:text-xl font-bold\">${item.reading}</p><p class=\"text-sm\">${meaningText}</p>`;\n        cardBack.style.justifyContent = 'space-around';\n    }\n\n    const searchTerms = generateSearchTerms([item.kanji, item.word, item.onyomi, item.kunyomi, item.reading, item.meaning?.en, item.meaning?.vi]);\n    root.dataset.searchItem = searchTerms;\n    root.dataset.itemId = item.id;\n\n    learnToggle.classList.toggle('learned', isLearned);\n    learnToggle.dataset.category = category;\n    learnToggle.dataset.id = item.id;\n\n    cardFront.innerHTML = frontContent;\n    cardBack.innerHTML = backContent;\n    cardBack.style.background = backGradient;\n\n    return clone;\n};\n\nconst createCardSection = (title, data, category, backGradient, titleKey) => {\n    if (!data || data.length === 0) return document.createDocumentFragment();\n\n    const cardGrid = document.createElement('div');\n    cardGrid.className = 'grid grid-cols-2 sm:grid-cols-3 md:grid-cols-3 lg:grid-cols-4 gap-3 sm:gap-4';\n\n    const fragment = document.createDocumentFragment();\n    data.forEach(item => fragment.appendChild(createCard(item, category, backGradient)));\n    cardGrid.appendChild(fragment);\n\n    const accordionContentWrapper = document.createElement('div');\n    accordionContentWrapper.className = 'p-4 sm:p-5 sm:pt-0';\n    accordionContentWrapper.appendChild(cardGrid);\n\n    const searchTermsForSection = generateSearchTerms([title, ...data.flatMap(item => [item.kanji, item.word, item.meaning?.en, item.meaning?.vi])]);\n    return createAccordion(title, accordionContentWrapper, searchTermsForSection, titleKey);\n};\n\nconst createStaticSection = (data, icon, color) => {\n    const fragment = document.createDocumentFragment();\n    if (!data) return fragment;\n\n    Object.entries(data).forEach(([sectionKey, sectionData]) => {\n        if (!sectionData.items) return;\n        const items = sectionData.items;\n        const title = sectionData[state.currentLang] || sectionData['en'] || sectionKey;\n        const searchTerms = generateSearchTerms([title, ...items.flatMap(i => i.isPlaceholder ? [] : [i.kana, i.romaji])]);\n\n        const content = `<div class=\"kana-grid\">${items.map((item) => {\n            if (item.isPlaceholder) return `<div></div>`;\n            const isDigraph = item.kana && item.kana.length > 1;\n            const fontClass = isDigraph ? 'kana-font-digraph' : 'kana-font';\n            const itemSearchData = generateSearchTerms([item.kana, item.romaji]);\n            return `<div class=\"flex flex-col items-center justify-center p-2 rounded-xl h-20 sm:h-24 text-center cell-bg\" data-search-item=\"${itemSearchData}\"><p class=\"noto-sans ${fontClass}\" style=\"color:${color};\">${item.kana}</p><p class=\"text-xs sm:text-sm text-secondary\">${item.romaji}</p></div>`;\n        }).join('')}</div>`;\n\n        const sectionHTML = `<div class=\"search-wrapper glass-effect rounded-2xl p-4 sm:p-5 mb-6\" data-search=\"${searchTerms}\"><h3 class=\"text-lg sm:text-lg font-bold mb-4 flex items-center gap-2 text-primary\" data-section-title-key=\"${sectionKey}\"><span class=\"text-2xl\">${icon}</span> ${title}</h3>${content}</div>`;\n        fragment.appendChild(document.createRange().createContextualFragment(sectionHTML));\n    });\n\n    return fragment;\n}\n\nfunction createProgressItem(tab, title, learned, total, color, titleKey) {\n    const template = document.getElementById('progress-item-template');\n    const clone = template.content.cloneNode(true);\n\n    const wrapper = clone.querySelector('.progress-item-wrapper');\n    const fillCircle = clone.querySelector('.progress-fill');\n    const percentageText = clone.querySelector('.progress-percentage');\n    const titleP = clone.querySelector('.progress-title');\n    const statsP = clone.querySelector('.progress-stats');\n\n    const percentage = total > 0 ? (learned / total) * 100 : 0;\n    const radius = 22;\n    const circumference = 2 * Math.PI * radius;\n    const offset = circumference - (percentage / 100) * circumference;\n\n    const emojiMatch = title.match(/\\s(.*?)$/);\n    const cleanTitle = emojiMatch ? title.replace(emojiMatch[0], '') : title;\n    const emoji = emojiMatch ? emojiMatch[1] : '';\n\n    wrapper.dataset.tabName = tab;\n    wrapper.dataset.sectionKey = titleKey;\n    wrapper.dataset.action = 'jump-to-section';\n\n    fillCircle.style.strokeDasharray = circumference;\n    fillCircle.style.strokeDashoffset = offset;\n    fillCircle.style.stroke = `url(#${color}-gradient)`;\n\n    percentageText.textContent = `${Math.round(percentage)}%`;\n    titleP.textContent = `${cleanTitle} ${emoji}`;\n    statsP.textContent = `${learned} / ${total}`;\n\n    return clone;\n}\n\nexport function updateProgressDashboard() {\n    const containers = [els.progressOverview, els.progressTab];\n    if (!state.appData.ui || !containers.every(c => c)) return;\n\n    const gradientsSVG = `<svg width=\"0\" height=\"0\"><defs><linearGradient id=\"purple-gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"><stop offset=\"0%\" stop-color=\"#A78BFA\" /><stop offset=\"100%\" stop-color=\"#8B5CF6\" /></linearGradient><linearGradient id=\"green-gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"><stop offset=\"0%\" stop-color=\"#4ADE80\" /><stop offset=\"100%\" stop-color=\"#22C55E\" /></linearGradient></defs></svg>`;\n    const dataCategories = { kanji: 'purple', vocab: 'green' };\n\n    const progressItemsFragment = document.createDocumentFragment();\n\n    for (const [categoryName, color] of Object.entries(dataCategories)) {\n        if (!state.appData[categoryName]) continue;\n\n        for (const key in state.appData[categoryName]) {\n            const category = state.appData[categoryName][key];\n            if (!category.items || category.items.length === 0) continue;\n\n            const total = category.items.length;\n            const learned = state.progress[categoryName]?.filter(id => category.items.some(item => item.id === id)).length || 0;\n            const newItemFragment = createProgressItem(categoryName, category[state.currentLang] || category.en, learned, total, color, key);\n            progressItemsFragment.appendChild(newItemFragment);\n        }\n    }\n\n    containers.forEach(container => {\n        if (!container) return;\n        container.innerHTML = '';\n\n        const wrapper = document.createElement('div');\n        wrapper.className = 'space-y-4';\n        wrapper.id = `progress-wrapper-${container.id}`;\n\n        wrapper.appendChild(progressItemsFragment.cloneNode(true));\n\n        if (container.id === 'progress-overview') {\n            const overviewTitle = document.createElement('h2');\n            overviewTitle.className = 'text-xl font-bold mb-5';\n            overviewTitle.dataset.langKey = 'progressOverview';\n            overviewTitle.textContent = state.appData.ui[state.currentLang]?.progressOverview || 'Progress Overview';\n\n            container.innerHTML = gradientsSVG;\n            container.appendChild(overviewTitle);\n            container.appendChild(wrapper);\n        } else {\n            container.innerHTML = gradientsSVG;\n            container.appendChild(wrapper);\n        }\n    });\n}\n\nexport function moveLangPill(langSwitchElement) {\n    const activeBtn = langSwitchElement.querySelector('button.active');\n    const pill = langSwitchElement.querySelector('.lang-switch-pill');\n\n    if (!activeBtn || !pill) return;\n\n    const buttonWidth = activeBtn.offsetWidth;\n    const buttonOffsetLeft = activeBtn.offsetLeft;\n\n    requestAnimationFrame(() => {\n         pill.style.width = `${buttonWidth}px`;\n         pill.style.transform = `translateX(${buttonOffsetLeft}px)`;\n    });\n}\n\nexport function setupTheme() {\n    const isDark = document.documentElement.classList.contains('dark-mode');\n    document.querySelectorAll('.theme-switch input').forEach((input) => (input.checked = isDark));\n}\n\nexport function updatePinButtonState(activeTabId) {\n    const pinButton = els.pinToggle;\n    if (!pinButton) return;\n\n    const pinSVG = `<svg height=\"24\" width=\"24\" viewBox=\"0 0 519.657 1024\"><path d=\"M196.032 704l64 320 64-320c-20.125 2-41.344 3.188-62.281 3.188C239.22 707.188 217.47 706.312 196.032 704zM450.032 404.688c-16.188-15.625-40.312-44.375-62-84.688v-64c7.562-12.406 12.25-39.438 23.375-51.969 15.25-13.375 24-28.594 24-44.875 0-53.094-61.062-95.156-175.375-95.156-114.25 0-182.469 42.062-182.469 95.094 0 16 8.469 31.062 23.375 44.312 13.438 14.844 22.719 38 31.094 52.594v64c-32.375 62.656-82 96.188-82 96.188h0.656C18.749 437.876 0 464.126 0 492.344 0.063 566.625 101.063 640.062 260.032 640c159 0.062 259.625-73.375 259.625-147.656C519.657 458.875 493.407 428.219 450.032 404.688z\"/></svg>`;\n    pinButton.innerHTML = pinSVG;\n    const svg = pinButton.querySelector('svg');\n\n    const isPinned = activeTabId && activeTabId === state.pinnedTab;\n    pinButton.classList.toggle('pinned', isPinned);\n    svg.style.fill = isPinned ? 'var(--pin-color)' : 'var(--pin-unpinned)';\n\n    svg.style.width = '1.25em';\n    svg.style.height = '1.25em';\n}\n\nexport function updateSidebarPinIcons() {\n    document.querySelectorAll('.sidebar-pin-btn').forEach(button => {\n        const tabId = button.dataset.tabName;\n        const wrapper = button.closest('.nav-item-wrapper');\n        const isPinned = tabId === state.pinnedTab;\n\n        if (wrapper) wrapper.classList.toggle('is-pinned', isPinned);\n        button.classList.toggle('is-pinned', isPinned);\n\n        if (!button.querySelector('svg')) {\n            button.innerHTML = `<svg viewBox=\"0 0 519.657 1024\"><path d=\"M196.032 704l64 320 64-320c-20.125 2-41.344 3.188-62.281 3.188C239.22 707.188 217.47 706.312 196.032 704zM450.032 404.688c-16.188-15.625-40.312-44.375-62-84.688v-64c7.562-12.406 12.25-39.438 23.375-51.969 15.25-13.375 24-28.594 24-44.875 0-53.094-61.062-95.156-175.375-95.156-114.25 0-182.469 42.062-182.469 95.094 0 16 8.469 31.062 23.375 44.312 13.438 14.844 22.719 38 31.094 52.594v64c-32.375 62.656-82 96.188-82 96.188h0.656C18.749 437.876 0 464.126 0 492.344 0.063 566.625 101.063 640.062 260.032 640c159 0.062 259.625-73.375 259.625-147.656C519.657 458.875 493.407 428.219 450.032 404.688z\"/></svg>`;\n        }\n        const svg = button.querySelector('svg');\n        svg.style.fill = isPinned ? 'var(--pin-pinned-bg)' : 'var(--text-secondary)';\n    });\n}\n\nexport function closeSidebar() {\n    els.sidebar?.classList.remove('open');\n    els.overlay?.classList.remove('active');\n    document.body.classList.remove('sidebar-open');\n}\n\nfunction renderCardBasedSection(containerId, data, category, gradient) {\n    const container = document.getElementById(containerId);\n    if (!container) return; // FIX: Add guard clause\n\n    container.innerHTML = '';\n    if (!data) return; // FIX: Add guard clause\n\n    const fragment = document.createDocumentFragment();\n    for (const key in data) {\n        const section = data[key];\n        if (!section.items) continue;\n\n        const title = section[state.currentLang] || section.en;\n        fragment.appendChild(createCardSection(title, section.items, category, gradient, key));\n    }\n\n    const wrapper = document.createElement('div');\n    wrapper.className = 'space-y-4';\n    wrapper.appendChild(fragment);\n    container.appendChild(wrapper);\n\n    setupFuseForTab(category);\n}\n\nfunction findKanjiData(kanjiCharacter) {\n    if (!state.appData.kanji) return null;\n    for (const key in state.appData.kanji) {\n        const found = state.appData.kanji[key].items.find(item => item.kanji === kanjiCharacter);\n        if (found) {\n            return found;\n        }\n    }\n    return null;\n}\n\n/**\n * REFINED: Manages dictionary search tab content with consistent animations.\n * @param {string} type - The state to render: 'prompt', 'searching', 'no-results', 'results', or 'error'.\n * @param {object} data - An object containing data for the view.\n * @param {boolean} [isInitialLoad=false] - Flag to prevent animation on the first load.\n */\nexport function updateExternalSearchTab(type, data = {}, isInitialLoad = false) {\n    if (!els.externalSearchTab) return;\n\n    const { results, query } = data;\n    const getUIText = (key, fallback) => state.appData.ui?.[state.currentLang]?.[key] || fallback;\n\n    let resultsContainer = els.externalSearchTab.querySelector('.results-container');\n    if (!resultsContainer) {\n        resultsContainer = document.createElement('div');\n        resultsContainer.className = 'results-container';\n        els.externalSearchTab.appendChild(resultsContainer);\n    }\n\n    let placeholderContainer = els.externalSearchTab.querySelector('.placeholder-container');\n    if (!placeholderContainer) {\n        placeholderContainer = document.createElement('div');\n        placeholderContainer.className = 'placeholder-container search-placeholder-wrapper';\n        placeholderContainer.innerHTML = `<div class=\"search-placeholder-box\"></div>`;\n        els.externalSearchTab.appendChild(placeholderContainer);\n    }\n    \n    if (type === 'results') {\n        placeholderContainer.style.display = 'none';\n        resultsContainer.style.display = 'block';\n        resultsContainer.innerHTML = ''; // Clear old results\n\n        const contentFragment = document.createDocumentFragment();\n        // ... (The result rendering logic remains the same) ...\n        const hasWords = results?.words?.length > 0;\n        const hasKanji = results?.kanji?.length > 0;\n\n        if (hasWords) {\n            const sectionContainer = document.createElement('div');\n            sectionContainer.className = 'search-wrapper glass-effect rounded-2xl p-4 sm:p-5 mb-6';\n\n            const vocabHeader = document.createElement('h3');\n            vocabHeader.className = 'text-lg sm:text-lg font-bold mb-4 text-primary';\n            vocabHeader.textContent = getUIText('vocabResults', 'Vocabulary Results');\n            sectionContainer.appendChild(vocabHeader);\n\n            const vocabGrid = document.createElement('div');\n            vocabGrid.className = 'dict-grid';\n\n            results.words.forEach(word => {\n                if (!word?.reading || !word?.senses) return;\n                const JAPANESE_REGEX = /[\\u3040-\\u309F\\u30A0-\\u30FF\\u4E00-\\u9FAF]/;\n                const isJDictViJp = state.currentLang === 'vi' && !JAPANESE_REGEX.test(word.reading.kanji);\n\n                if (isJDictViJp) {\n                    word.senses.forEach(sense => {\n                        const japaneseTerm = sense.glosses?.[0] || '';\n                        if (!japaneseTerm) return;\n                        const card = document.createElement('div');\n                        card.className = 'dict-card';\n                        const reading = sense.reading || '';\n                        const termWithClickableKanji = japaneseTerm.split('').map(char =>\n                            /[\\u4e00-\\u9faf]/.test(char) && findKanjiData(char) ?\n                                `<span class=\"hover:text-accent-teal cursor-pointer transition-colors\" data-action=\"show-kanji-details\" data-id=\"${findKanjiData(char).id}\">${char}</span>` :\n                                `<span>${char}</span>`\n                        ).join('');\n                        card.innerHTML = `<div class=\"dict-vocab-header\"><h4 class=\"dict-vocab-term\">${termWithClickableKanji}</h4>${reading ? `<span class=\"dict-vocab-reading\">(${reading})</span>` : ''}</div><div class=\"dict-vocab-definitions\"><p>${word.reading.kanji}</p></div>`;\n                        vocabGrid.appendChild(card);\n                    });\n                } else {\n                    const card = document.createElement('div');\n                    card.className = 'dict-card';\n                    const term = word.reading.kanji || word.reading.kana || '';\n                    const reading = word.reading.kana && word.reading.kana !== term ? `(${word.reading.kana})` : '';\n                    if (!term) return;\n                    const termWithClickableKanji = term.split('').map(char =>\n                        /[\\u4e00-\\u9faf]/.test(char) && findKanjiData(char) ?\n                            `<span class=\"hover:text-accent-teal cursor-pointer transition-colors\" data-action=\"show-kanji-details\" data-id=\"${findKanjiData(char).id}\">${char}</span>` :\n                            `<span>${char}</span>`\n                    ).join('');\n                    const headerHTML = `<div class=\"dict-vocab-header\"><h4 class=\"dict-vocab-term\">${termWithClickableKanji}</h4><span class=\"dict-vocab-reading\">${reading}</span></div>`;\n                    const sensesHTML = (word.senses ?? []).map(sense => {\n                        const glosses = sense.glosses?.join('; ') ?? '';\n                        const pos = [...new Set((sense.pos ?? []).map(p => typeof p === 'object' ? Object.keys(p)[0] : p))];\n                        const posText = pos.length > 0 ? `<span class=\"dict-vocab-pos\">[${pos.join(', ')}]</span>` : '';\n                        return `<p>${glosses} ${posText}</p>`;\n                    }).join('');\n                    card.innerHTML = `${headerHTML}<div class=\"dict-vocab-definitions\">${sensesHTML}</div>`;\n                    vocabGrid.appendChild(card);\n                }\n            });\n            sectionContainer.appendChild(vocabGrid);\n            contentFragment.appendChild(sectionContainer);\n        }\n\n        if (hasKanji) {\n            const sectionContainer = document.createElement('div');\n            sectionContainer.className = 'search-wrapper glass-effect rounded-2xl p-4 sm:p-5 mb-6';\n\n            const kanjiHeader = document.createElement('h3');\n            kanjiHeader.className = 'text-lg sm:text-lg font-bold mb-4 text-primary';\n            kanjiHeader.textContent = getUIText('kanjiResults', 'Kanji Results');\n            sectionContainer.appendChild(kanjiHeader);\n\n            const kanjiGrid = document.createElement('div');\n            kanjiGrid.className = 'dict-grid';\n            results.kanji.forEach(k => {\n                if (!k?.literal) return;\n                const card = document.createElement('div');\n                card.className = 'dict-card';\n                const onyomi = k.onyomi?.join(', ') || '\u2013';\n                const kunyomi = k.kunyomi?.join(', ') || '\u2013';\n                const meanings = k.meanings?.join('; ') || getUIText('noDefinition', 'No definition found.');\n                card.innerHTML = `<div class=\"dict-kanji-header\"><h4 class=\"dict-kanji-char\">${k.literal}</h4><div class=\"dict-kanji-readings\"><p><span class=\"reading-label\">${getUIText('onyomi', \"On'yomi:\")}</span> ${onyomi}</p><p><span class=\"reading-label\">${getUIText('kunyomi', \"Kun'yomi:\")}</span> ${kunyomi}</p></div></div><div class=\"dict-kanji-meanings\">${meanings}</div>`;\n                kanjiGrid.appendChild(card);\n            });\n            sectionContainer.appendChild(kanjiGrid);\n            contentFragment.appendChild(sectionContainer);\n        }\n        \n        // **THE FIX IS HERE:** Conditionally apply the animation.\n        const animatedWrapper = document.createElement('div');\n        if (!isInitialLoad) {\n            animatedWrapper.className = 'anim-fade-in';\n        }\n        animatedWrapper.appendChild(contentFragment);\n        resultsContainer.appendChild(animatedWrapper);\n\n    } else {\n        resultsContainer.style.display = 'none';\n        placeholderContainer.style.display = 'flex';\n\n        const placeholderBox = placeholderContainer.querySelector('.search-placeholder-box');\n        if (placeholderBox) {\n            placeholderBox.innerHTML = getSearchPlaceholderInnerContent(type, query);\n            \n            // Apply animation for content changes, but not on the very first load.\n            if (!isInitialLoad) {\n                placeholderBox.classList.remove('anim-fade-in');\n                void placeholderBox.offsetWidth; // Force browser reflow to restart animation\n                placeholderBox.classList.add('anim-fade-in');\n            }\n        }\n    }\n}\n\n/**\n * Prepares kana data by organizing items into standard grid layouts.\n * This function handles gojuon, dakuten, handakuten, and youon charts,\n * ensuring they are displayed in a consistent and orderly fashion.\n * @param {object} originalData - The original kana data object for hiragana or katakana.\n * @returns {object} A new data object with items sorted and padded for grid layout.\n */\nfunction prepareKanaData(originalData) {\n    if (!originalData) return {};\n    const data = JSON.parse(JSON.stringify(originalData)); // Deep clone to avoid side effects\n\n    // Define canonical layouts for different kana charts.\n    // These ensure consistent order and can introduce placeholders (null).\n    const LAYOUTS = {\n        gojuon: ['a', 'i', 'u', 'e', 'o', 'ka', 'ki', 'ku', 'ke', 'ko', 'sa', 'shi', 'su', 'se', 'so', 'ta', 'chi', 'tsu', 'te', 'to', 'na', 'ni', 'nu', 'ne', 'no', 'ha', 'hi', 'fu', 'he', 'ho', 'ma', 'mi', 'mu', 'me', 'mo', 'ya', null, 'yu', null, 'yo', 'ra', 'ri', 'ru', 're', 'ro', 'wa', null, null, null, 'wo', 'n', null, null, null, null],\n        dakuten: ['ga', 'gi', 'gu', 'ge', 'go', 'za', 'ji', 'zu', 'ze', 'zo', 'da', 'di', 'dzu', 'de', 'do', 'ba', 'bi', 'bu', 'be', 'bo'],\n        handakuten: ['pa', 'pi', 'pu', 'pe', 'po'],\n        youon: ['kya', 'kyu', 'kyo', 'sha', 'shu', 'sho', 'cha', 'chu', 'cho', 'nya', 'nyu', 'nyo', 'hya', 'hyu', 'hyo', 'mya', 'myu', 'myo', 'rya', 'ryu', 'ryo', 'gya', 'gyu', 'gyo', 'ja', 'ju', 'jo', 'bya', 'byu', 'byo', 'pya', 'pyu', 'pyo']\n    };\n\n    for (const sectionKey in data) {\n        const section = data[sectionKey];\n        if (!section?.items?.length) continue;\n\n        const originalItems = section.items;\n        const romajiSet = new Set(originalItems.map(item => item.romaji));\n\n        const findChar = (romaji) => originalItems.find(i => i.romaji === romaji) || { isPlaceholder: true };\n\n        let layoutToApply = null;\n\n        // Detect section type based on its most unique content.\n        if (romajiSet.has('kya') || romajiSet.has('gya')) { // Youon (digraphs)\n            layoutToApply = LAYOUTS.youon;\n        } else if (romajiSet.has('ga') || romajiSet.has('za')) { // Dakuten\n            layoutToApply = LAYOUTS.dakuten;\n        } else if (romajiSet.has('pa')) { // Handakuten\n            layoutToApply = LAYOUTS.handakuten;\n        } else if (romajiSet.has('a')) { // Gojuon (checked last as it's the most basic)\n            layoutToApply = LAYOUTS.gojuon;\n        }\n\n        if (layoutToApply) {\n            // Replace the section's items with the ordered/padded grid.\n            section.items = layoutToApply.map(r => r ? findChar(r) : { isPlaceholder: true });\n        }\n    }\n    return data;\n}\n\nexport function renderContent(tabId = null) {\n    const renderSafely = (renderFn) => {\n        try { \n            // Add a check to ensure data exists before rendering\n            if (state.appData[tabId]) {\n                renderFn(); \n            }\n        } catch (e) { \n            console.error(\"Render error:\", e); \n        }\n    };\n\n    const tabsToRender = tabId ? [tabId] : Object.keys(state.appData).filter(k => !['ui', 'progress', 'external-search'].includes(k));\n\n    const renderMap = {\n        hiragana: () => renderSafely(() => {\n            if (els.hiraganaTab && state.appData.hiragana) {\n                els.hiraganaTab.innerHTML = '';\n                els.hiraganaTab.appendChild(createStaticSection(prepareKanaData(state.appData.hiragana), '\uD83C\uDF38', 'var(--accent-pink)'));\n                setupFuseForTab('hiragana');\n            }\n        }),\n        katakana: () => renderSafely(() => {\n            if (els.katakanaTab && state.appData.katakana) {\n                els.katakanaTab.innerHTML = '';\n                els.katakanaTab.appendChild(createStaticSection(prepareKanaData(state.appData.katakana), '\uD83E\uDD16', 'var(--accent-blue)'));\n                setupFuseForTab('katakana');\n            }\n        }),\n        keyPoints: () => renderSafely(() => {\n            if (!els.keyPointsTab || !state.appData.keyPoints) return;\n            els.keyPointsTab.innerHTML = '';\n            const fragment = document.createDocumentFragment();\n            for (const key in state.appData.keyPoints) {\n                const section = state.appData.keyPoints[key];\n                const title = section[state.currentLang] || section.en;\n                let contentNode;\n                if (section.type === 'table') {\n                    contentNode = createStyledList(section.content);\n                } else if (section.type === 'table-grid') {\n                    contentNode = document.createElement('div');\n                    contentNode.className = 'space-y-6';\n                    section.content.forEach(sub => {\n                        const subTitle = sub.title[state.currentLang] || sub.title.en;\n                        const subList = createStyledList(sub.data);\n                        contentNode.innerHTML += `<div><h4 class=\"font-semibold text-md mb-3 text-primary\">${subTitle}</h4></div>`;\n                        contentNode.lastChild.appendChild(subList);\n                    });\n                }\n                if (contentNode) {\n                    const contentWrapper = document.createElement('div');\n                    contentWrapper.className = 'p-4 sm:p-5 sm:pt-0';\n                    contentWrapper.appendChild(contentNode);\n                    const searchTerms = generateSearchTerms([title, JSON.stringify(section.content)]);\n                    fragment.appendChild(createAccordion(title, contentWrapper, searchTerms, key));\n                }\n            }\n            const wrapper = document.createElement('div');\n            wrapper.className = 'space-y-4';\n            wrapper.appendChild(fragment);\n            els.keyPointsTab.appendChild(wrapper);\n            setupFuseForTab('keyPoints'); // Corrected key\n        }),\n        grammar: () => renderSafely(() => {\n            if (!els.grammarTab || !state.appData.grammar) return;\n            els.grammarTab.innerHTML = '';\n            const fragment = document.createDocumentFragment();\n            for (const sectionKey in state.appData.grammar) {\n                const sectionData = state.appData.grammar[sectionKey];\n                const sectionTitle = sectionData[state.currentLang] || sectionData.en;\n                const grid = document.createElement('div');\n                grid.className = 'grammar-grid';\n                sectionData.items.forEach(item => {\n                    const langItem = item[state.currentLang] || item.en;\n                    const itemSearchData = generateSearchTerms([langItem.title, langItem.content]);\n                    const exampleMarkerRegex = /(<br>)?<b>(Example|V\u00ED d\u1EE5).*?<\\/b>/i;\n                    const match = langItem.content.match(exampleMarkerRegex);\n                    let description = langItem.content;\n                    let exampleHTML = '';\n                    if (match?.index) {\n                        description = langItem.content.substring(0, match.index);\n                        exampleHTML = langItem.content.substring(match.index).replace(/^<br>/, '');\n                    }\n                    const card = document.createElement('div');\n                    card.className = 'grammar-card cell-bg rounded-lg';\n                    card.dataset.searchItem = itemSearchData;\n                    card.innerHTML = `<h4 class=\"font-semibold text-primary noto-sans\">${langItem.title}</h4><div class=\"grammar-description mt-2 text-secondary leading-relaxed text-sm\">${description}</div>${exampleHTML ? `<div class=\"grammar-example mt-3 text-sm\">${exampleHTML}</div>` : ''}`;\n                    grid.appendChild(card);\n                });\n                const contentWrapper = document.createElement('div');\n                contentWrapper.className = 'p-4 sm:p-5 sm:pt-0';\n                contentWrapper.appendChild(grid);\n                const searchData = generateSearchTerms([sectionTitle, ...sectionData.items.flatMap(item => [item.en?.title, item.en?.content, item.vi?.title, item.vi?.content])]);\n                fragment.appendChild(createAccordion(sectionTitle, contentWrapper, searchData, sectionKey));\n            }\n            const wrapper = document.createElement('div');\n            wrapper.className = 'space-y-4';\n            wrapper.appendChild(fragment);\n            els.grammarTab.appendChild(wrapper);\n            setupFuseForTab('grammar');\n        }),\n        kanji: () => renderSafely(() => renderCardBasedSection('kanji', state.appData.kanji, 'kanji', 'linear-gradient(135deg, var(--accent-purple), #A78BFA)')),\n        vocab: () => renderSafely(() => renderCardBasedSection('vocab', state.appData.vocab, 'vocab', 'linear-gradient(135deg, var(--accent-green), #4ADE80)'))\n    };\n\n    tabsToRender.forEach(tab => {\n        if (renderMap[tab]) {\n            renderMap[tab]();\n        }\n    });\n}\n\n\nexport function buildLevelSwitcher(remoteLevels = [], customLevels = []) {\n    const sidebarSwitcher = document.getElementById('level-switcher-sidebar');\n    if (!sidebarSwitcher) return;\n\n    state.allAvailableLevels = Array.from(new Set([...remoteLevels, ...customLevels]));\n\n    const fragment = document.createDocumentFragment();\n    state.allAvailableLevels.forEach(level => {\n        const isDefault = level === config.defaultLevel;\n        const canBeDeleted = customLevels.includes(level) && !isDefault;\n\n        const deleteButtonHTML = canBeDeleted ? `<button class=\"delete-level-btn\" data-action=\"delete-level\" data-level-name=\"${level}\" title=\"Delete level ${level.toUpperCase()}\"><svg class=\"w-4 h-4 pointer-events-none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm4 0a1 1 0 012 0v6a1 1 0 11-2 0V8z\" clip-rule=\"evenodd\" /></svg></button>` : '';\n        const itemWrapper = document.createElement('div');\n        itemWrapper.className = 'level-switch-item-wrapper';\n        itemWrapper.innerHTML = `<button data-action=\"set-level\" data-level-name=\"${level}\" class=\"level-switch-button\">${level.toUpperCase()}</button>${deleteButtonHTML}`;\n        fragment.appendChild(itemWrapper);\n    });\n\n    sidebarSwitcher.innerHTML = '';\n    sidebarSwitcher.appendChild(fragment);\n}\n\nexport function scrollActiveLevelIntoView() {\n    const activeButton = document.querySelector('#level-switcher-sidebar .level-switch-button.active');\n    if (activeButton) {\n        setTimeout(() => {\n            activeButton.scrollIntoView({\n                behavior: 'smooth',\n                block: 'nearest',\n                inline: 'center'\n            });\n        }, 100);\n    }\n}\n\nexport function updateSearchPlaceholders(activeTabId) {\n    const getUIText = (key, fallback = '') => state.appData.ui?.[state.currentLang]?.[key] || fallback;\n\n    const isDictionaryTab = activeTabId === 'external-search';\n\n    const placeholderText = isDictionaryTab\n        ? getUIText('dictionaryPrompt', 'Search for words...')\n        : getUIText('searchPlaceholder', 'Search anything...');\n\n    const mobilePlaceholderText = isDictionaryTab\n        ? getUIText('dictionaryPrompt', 'Search for words...')\n        : getUIText('searchTabPlaceholder', 'Search in this tab...');\n\n    if (els.searchInput) {\n        els.searchInput.placeholder = placeholderText;\n    }\n    if (els.mobileSearchInput) {\n        els.mobileSearchInput.placeholder = mobilePlaceholderText;\n    }\n}\n\n// NEW: Custom Dialog Functions\n/**\n * Generic function to show a custom modal dialog.\n * @param {object} options - Configuration for the dialog.\n * @param {string} options.title - The title of the dialog.\n * @param {string} options.message - The main message content.\n * @param {Array<object>} options.buttons - Array of button configurations:\n * [{ text: string, className: string, action: string }]\n * `action` can be 'confirm' or 'cancel'.\n * @param {function} [options.onOpen] - Callback function when the modal opens.\n * @param {function} [options.onClose] - Callback function when the modal closes.\n * @returns {Promise<string>} A promise that resolves with the action of the clicked button ('confirm' or 'cancel').\n */\nexport function showCustomDialog({ title, message, buttons, onOpen, onClose }) {\n    return new Promise((resolve) => {\n        // Ensure the container exists and is hidden\n        if (!els.customDialogContainer) return;\n\n        // Clone the template content\n        const template = document.getElementById('custom-dialog-template');\n        const clone = template.content.cloneNode(true);\n\n        const contentContainer = els.customDialogContainer.querySelector('.modal-content-container');\n        if (!contentContainer) return;\n\n        // Clear previous content\n        contentContainer.innerHTML = '';\n        contentContainer.appendChild(clone);\n\n        const dialogTitle = contentContainer.querySelector('#custom-dialog-title');\n        const dialogMessage = contentContainer.querySelector('#custom-dialog-message');\n        const dialogActions = contentContainer.querySelector('#custom-dialog-actions');\n        const closeBtn = contentContainer.querySelector('#custom-dialog-close-btn');\n\n        dialogTitle.textContent = title;\n        dialogMessage.textContent = message;\n        dialogActions.innerHTML = ''; // Clear previous buttons\n\n        let cleanupEventListeners;\n\n        const handleButtonClick = (action) => {\n            return () => {\n                cleanupEventListeners();\n                closeCustomDialog();\n                if (action === 'confirm') {\n                    resolve('confirm');\n                } else {\n                    resolve('cancel');\n                }\n                if (onClose) onClose(action);\n            };\n        };\n\n        buttons.forEach(btnConfig => {\n            const button = document.createElement('button');\n            button.textContent = btnConfig.text;\n            button.className = `modal-button ${btnConfig.className || 'modal-button-secondary'}`;\n            button.dataset.actionType = btnConfig.action;\n            button.addEventListener('click', handleButtonClick(btnConfig.action));\n            dialogActions.appendChild(button);\n        });\n\n        // Event listener for the top-right close button\n        closeBtn.addEventListener('click', handleButtonClick('cancel'));\n\n        // Event listener for backdrop click\n        const handleBackdropClick = (e) => {\n            if (e.target === els.customDialogBackdrop || e.target === els.customDialogWrapper) {\n                handleButtonClick('cancel')();\n            }\n        };\n        els.customDialogBackdrop.addEventListener('click', handleBackdropClick);\n        els.customDialogWrapper.addEventListener('click', handleBackdropClick);\n\n\n        cleanupEventListeners = () => {\n            els.customDialogBackdrop.removeEventListener('click', handleBackdropClick);\n            els.customDialogWrapper.removeEventListener('click', handleBackdropClick);\n            closeBtn.removeEventListener('click', handleButtonClick('cancel'));\n            buttons.forEach(btnConfig => {\n                const btn = dialogActions.querySelector(`[data-action-type=\"${btnConfig.action}\"]`);\n                if (btn) btn.removeEventListener('click', handleButtonClick(btnConfig.action));\n            });\n        };\n\n        // Show the dialog\n        document.body.classList.add('body-no-scroll');\n        els.customDialogContainer.classList.remove('modal-hidden');\n        els.customDialogBackdrop.classList.add('active');\n        els.customDialogWrapper.classList.add('active');\n\n        if (onOpen) onOpen();\n    });\n}\n\n/**\n * Shows a custom alert dialog.\n * @param {string} title - The alert title.\n * @param {string} message - The alert message.\n * @returns {Promise<void>} A promise that resolves when the dialog is closed.\n */\nexport function showCustomAlert(title, message) {\n    const getUIText = (key) => state.appData.ui?.[state.currentLang]?.[key] || `[${key}]`;\n    return showCustomDialog({\n        title,\n        message,\n        buttons: [{ text: getUIText('okButton', 'OK'), className: 'modal-button-primary', action: 'confirm' }],\n    }).then(() => {}); // Convert 'confirm' resolution to void\n}\n\n/**\n * Shows a custom confirmation dialog.\n * @param {string} title - The confirm title.\n * @param {string} message - The confirm message.\n * @returns {Promise<boolean>} A promise that resolves to true if confirmed, false if cancelled.\n */\nexport function showCustomConfirm(title, message) {\n    const getUIText = (key) => state.appData.ui?.[state.currentLang]?.[key] || `[${key}]`;\n    return showCustomDialog({\n        title,\n        message,\n        buttons: [\n            { text: getUIText('cancelButton', 'Cancel'), className: 'modal-button-secondary', action: 'cancel' },\n            { text: getUIText('confirmButton', 'Confirm'), className: 'modal-button-primary', action: 'confirm' }\n        ],\n    }).then(action => action === 'confirm');\n}\n\nexport function closeCustomDialog() {\n    document.body.classList.remove('body-no-scroll');\n    els.customDialogBackdrop?.classList.remove('active');\n    els.customDialogWrapper?.classList.remove('active');\n    setTimeout(() => els.customDialogContainer?.classList.add('modal-hidden'), 300);\n    // Clear content after animation to ensure it's hidden\n    if (els.customDialogContainer) {\n        const contentContainer = els.customDialogContainer.querySelector('.modal-content-container');\n        if (contentContainer) {\n            setTimeout(() => {\n                contentContainer.innerHTML = '';\n            }, 300); // Wait for the transition to finish\n        }\n    }\n}", "/**\n * @module database\n * @description Manages all IndexedDB operations for state and data persistence.\n */\n\nimport { openDB } from 'idb';\nimport { state, config } from './config.js';\nimport { updateProgressDashboard } from './ui.js';\n\n// MODIFIED: Bumped version to 3\nexport const dbPromise = openDB('HandbookDB', 3, {\n    upgrade(db, oldVersion) {\n        if (oldVersion < 1) {\n            db.createObjectStore('levels');\n            db.createObjectStore('progress');\n            db.createObjectStore('settings');\n        }\n        if (oldVersion < 2) {\n            db.createObjectStore('dictionary_cache');\n        }\n        // ADDED: New object store for notes\n        if (oldVersion < 3) {\n            db.createObjectStore('notes');\n        }\n    },\n});\n\nexport async function loadState() {\n    try {\n        const db = await dbPromise;\n        const [lang, level, levelSettings] = await Promise.all([\n            db.get('settings', 'language'),\n            db.get('settings', 'currentLevel'),\n            db.get('settings', 'levelSettings')\n        ]);\n\n        state.currentLang = lang || 'en';\n        state.currentLevel = level || config.defaultLevel;\n\n        const currentLevelSettings = levelSettings?.[state.currentLevel];\n        state.pinnedTab = currentLevelSettings?.pinnedTab || null;\n\n        state.progress = (await db.get('progress', state.currentLevel)) || { kanji: [], vocab: [] };\n    } catch (error) {\n        console.error(\"Error loading state from IndexedDB:\", error);\n        state.currentLang = 'en';\n        state.currentLevel = config.defaultLevel;\n        state.progress = { kanji: [], vocab: [] };\n    }\n}\n\nexport async function saveProgress() {\n    try {\n        const db = await dbPromise;\n        await db.put('progress', state.progress, state.currentLevel);\n        updateProgressDashboard();\n    } catch (error) {\n        console.error(\"Error saving progress to IndexedDB:\", error);\n    }\n}\n\nexport async function saveSetting(key, value) {\n    try {\n        const db = await dbPromise;\n        await db.put('settings', value, key);\n    } catch (error) {\n        console.error(`Error saving setting '${key}' to IndexedDB:`, error);\n    }\n}\n\nexport async function loadTabData(level, tabId) {\n    if (state.appData[tabId]) {\n        return;\n    }\n\n    try {\n        const response = await fetch(`${config.dataPath}/${level}/${tabId}.json`);\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        state.appData[tabId] = data;\n    } catch (error) {\n        console.error(`Error loading data for tab ${tabId}:`, error);\n        const tabElement = document.getElementById(tabId);\n        if (tabElement) {\n            const getUIText = (key, replacements = {}) => {\n                let text = state.appData.ui?.[state.currentLang]?.[key] || state.appData.ui?.['en']?.[key] || `[${key}]`;\n                for (const [placeholder, value] of Object.entries(replacements)) {\n                    text = text.replace(`{${placeholder}}`, value);\n                }\n                return text;\n            };\n            const errorText = getUIText('errorFailedToLoadContent', { tabId: tabId });\n            tabElement.innerHTML = `<p class=\"p-4 text-center text-red-400\">${errorText}</p>`;\n        }\n        throw error;\n    }\n}\n\nexport async function loadAllData(level) {\n    const uiPromise = fetch(`./data/${config.defaultLevel}/ui.json`)\n        .then(res => {\n            if (!res.ok) throw new Error(`Failed to fetch UI data: ${res.status}`);\n            return res.json();\n        })\n        .catch(err => {\n            console.error(\"Fatal: Could not load the global ui.json file.\", err);\n            return {};\n        });\n\n    const db = await dbPromise;\n    const savedData = await db.get('levels', level);\n\n    if (savedData) {\n        state.appData = savedData;\n    } else {\n        state.appData = {};\n    }\n    \n    state.appData.ui = await uiPromise;\n}\n\n// --- ADDED FUNCTIONS FOR NOTES ---\n\n/**\n * Saves a note for a specific level and tab.\n * @param {string} level The level identifier (e.g., 'n5').\n * @param {string} tabId The tab identifier (e.g., 'grammar').\n * @param {string} content The note content.\n */\nexport async function saveNote(level, tabId, content) {\n    try {\n        const db = await dbPromise;\n        const key = `${level}-${tabId}`;\n        const noteObject = {\n            content: content,\n            lastModified: new Date().toISOString()\n        };\n        await db.put('notes', noteObject, key);\n    } catch (error) {\n        console.error(`Error saving note for ${level}-${tabId}:`, error);\n    }\n}\n\n\n\n/**\n * Loads a note for a specific level and tab.\n * @param {string} level The level identifier.\n * @param {string} tabId The tab identifier.\n * @returns {Promise<object|null>} The note object { content, lastModified }, or null if not found.\n */\nexport async function loadNote(level, tabId) {\n    try {\n        const db = await dbPromise;\n        const key = `${level}-${tabId}`;\n        // MODIFIED: Return the full object, or null if it doesn't exist.\n        const note = await db.get('notes', key);\n        return note || null;\n    } catch (error) {\n        console.error(`Error loading note for ${level}-${tabId}:`, error);\n        return null; // Ensure null is returned on error\n    }\n}\n\n/**\n * Deletes all notes associated with a given level.\n * @param {string} level The level to delete notes for.\n */\nexport async function deleteNotesForLevel(level) {\n    try {\n        const db = await dbPromise;\n        const tx = db.transaction('notes', 'readwrite');\n        const keys = await tx.store.getAllKeys();\n        const levelKeys = keys.filter(key => key.startsWith(`${level}-`));\n        await Promise.all(levelKeys.map(key => tx.store.delete(key)));\n        await tx.done;\n    } catch (error) {\n        console.error(`Error deleting notes for level ${level}:`, error);\n    }\n}", "/**\n * @module main\n * @description Main application entry point. Initializes the app and sets up event listeners.\n */\n\nimport { els, populateEls } from './dom.js';\nimport { state, config } from './config.js';\nimport { dbPromise, loadState, loadAllData, loadTabData, saveNote, loadNote, saveSetting } from './database.js';\nimport { debounce } from './utils.js';\nimport { updateProgressDashboard, setupTheme, moveLangPill, updatePinButtonState, updateSidebarPinIcons, closeSidebar, buildLevelSwitcher, scrollActiveLevelIntoView, renderContent, showCustomAlert } from './ui.js';\nimport { setLanguage, toggleTheme as toggleThemeSlider, handleSearch, changeTab as originalChangeTab, togglePin, toggleSidebarPin, jumpToSection, toggleLearned, deleteLevel, setLevel } from './handlers.js';\n\n/**\n * Ensures that data required for calculating progress is loaded.\n * This is a fix for the on-demand loading optimization, which prevented\n * the progress dashboard from having the data it needed on initial load.\n */\nasync function loadRequiredDataForProgress() {\n    const requiredDataTypes = ['kanji', 'vocab']; // Add other types if needed for progress\n    const promises = [];\n    for (const type of requiredDataTypes) {\n        if (!state.appData[type]) {\n            // Check if it's a default level before trying to load\n            const db = await dbPromise;\n            const isCustomLevel = await db.get('levels', state.currentLevel);\n            if (!isCustomLevel) {\n                promises.push(loadTabData(state.currentLevel, type));\n            }\n        }\n    }\n    if (promises.length > 0) {\n        try {\n            await Promise.all(promises);\n        } catch (error) {\n            console.error(\"Failed to load required data for progress dashboard:\", error);\n        }\n    }\n}\n\n\n// --- Wrapper function to handle notes logic and progress updates on tab change ---\nasync function changeTab(tabName, ...args) {\n    // Call the original function from handlers.js to continue with tab switching logic\n    await originalChangeTab(tabName, ...args);\n\n    // FIX: If switching to the progress tab, refresh the dashboard to show latest stats.\n    if (tabName === 'progress') {\n        updateProgressDashboard();\n    }\n\n\n    // Now, handle the notes button visibility and state\n    const isNoteableTab = !['progress', 'external-search'].includes(tabName);\n    const notesButtons = document.querySelectorAll('.notes-header-btn');\n\n    notesButtons.forEach(btn => {\n        btn.style.display = isNoteableTab ? 'flex' : 'none';\n        btn.classList.remove('has-note'); // Reset state first\n    });\n\n    if (isNoteableTab) {\n        const note = await loadNote(state.currentLevel, tabName);\n        const hasContent = (note && typeof note === 'object') ? !!note.content?.trim() : !!note?.trim();\n        notesButtons.forEach(btn => {\n            btn.classList.toggle('has-note', hasContent);\n        });\n    }\n}\n\nfunction getThemeToggleHTML() {\n    return `<label class=\"theme-switch\"><input type=\"checkbox\" aria-label=\"Theme toggle\"><span class=\"slider\"></span></label>`;\n}\n\nfunction getLangSwitcherHTML() {\n    return `<div class=\"lang-switch-pill\"></div><button data-lang=\"en\">EN</button><button data-lang=\"vi\">VI</button>`;\n}\n\nfunction handleStateChange(stateObj) {\n    if (!stateObj) return;\n\n    if (stateObj.level !== state.currentLevel) {\n        setLevel(stateObj.level, true);\n    } else {\n        changeTab(stateObj.tabName, null, false, true);\n    }\n}\n\nfunction openKanjiDetailModal(kanjiId) {\n    let kanjiItem = null;\n    for (const key in state.appData.kanji) {\n        const found = state.appData.kanji[key].items.find(item => item.id === kanjiId);\n        if (found) {\n            kanjiItem = found;\n            break;\n        }\n    }\n\n    if (!kanjiItem) {\n        console.error(\"Kanji item not found:\", kanjiId);\n        return;\n    }\n\n    const template = document.getElementById('kanji-modal-template');\n    if (!template) {\n        console.error(\"Kanji modal template not found in HTML.\");\n        return;\n    }\n    const clone = template.content.cloneNode(true);\n\n    const getUIText = (key) => state.appData.ui?.[state.currentLang]?.[key] || state.appData.ui?.['en']?.[key] || `[${key}]`;\n\n    // --- Populate Template ---\n    clone.querySelector('[data-template-id=\"kanji-char\"]').textContent = kanjiItem.kanji;\n    clone.querySelector('[data-template-id=\"kanji-meaning\"]').textContent = kanjiItem.meaning?.[state.currentLang] || kanjiItem.meaning?.en || '';\n\n    // Examples\n    const examplesSection = clone.querySelector('[data-template-id=\"examples-section\"]');\n    if (kanjiItem.examples && kanjiItem.examples.length > 0) {\n        const examplesList = clone.querySelector('[data-template-id=\"examples-list\"]');\n        examplesSection.style.display = 'block';\n        examplesSection.querySelector('[data-lang-key]').textContent = getUIText('modalExamples');\n        kanjiItem.examples.forEach(ex => {\n            const li = document.createElement('li');\n            li.className = 'flex justify-between items-baseline';\n            li.innerHTML = `\n                <span class=\"font-semibold noto-sans with-furigana\"><ruby>${ex.word}<rt>${ex.reading}</rt></ruby></span>\n                <span class=\"kanji-modal-translation\">${ex.meaning[state.currentLang] || ex.meaning.en}</span>`;\n            examplesList.appendChild(li);\n        });\n    }\n\n    // Sentence\n    const sentenceSection = clone.querySelector('[data-template-id=\"sentence-section\"]');\n    const sentenceTokens = kanjiItem.sentence?.jp_tokens;\n    const sentenceJP = kanjiItem.sentence?.jp;\n    if (sentenceTokens || sentenceJP) {\n        sentenceSection.style.display = 'block';\n        let sentenceHTML = '';\n        if (sentenceTokens) {\n            sentenceHTML = sentenceTokens.map(token => token.r ? `<ruby>${token.w}<rt>${token.r}</rt></ruby>` : token.w).join('');\n        } else {\n            sentenceHTML = sentenceJP;\n        }\n        clone.querySelector('[data-template-id=\"sentence-jp\"]').innerHTML = sentenceHTML;\n        clone.querySelector('[data-template-id=\"sentence-translation\"]').textContent = kanjiItem.sentence?.[state.currentLang] || kanjiItem.sentence?.en || '';\n    }\n\n    // Info section (Radical & Mnemonic)\n    const mnemonicText = kanjiItem.mnemonic?.[state.currentLang] || kanjiItem.mnemonic?.en || '';\n    const radicalText = kanjiItem.radical?.[state.currentLang] || kanjiItem.radical?.en || '';\n    if (mnemonicText || radicalText) {\n        const infoSection = clone.querySelector('[data-template-id=\"info-section\"]');\n        infoSection.style.display = 'block';\n        infoSection.querySelector('[data-lang-key]').textContent = getUIText('modalInfo');\n\n        if (radicalText) {\n            const radicalSection = clone.querySelector('[data-template-id=\"radical-section\"]');\n            radicalSection.style.display = 'block';\n            radicalSection.querySelector('[data-lang-key]').textContent = getUIText('modalRadical');\n            radicalSection.querySelector('[data-template-id=\"radical-text\"]').textContent = radicalText;\n        }\n        if (mnemonicText) {\n            const mnemonicSection = clone.querySelector('[data-template-id=\"mnemonic-section\"]');\n            mnemonicSection.style.display = 'block';\n            mnemonicSection.querySelector('[data-lang-key]').textContent = getUIText('modalMnemonic');\n            mnemonicSection.querySelector('[data-template-id=\"mnemonic-text\"]').textContent = mnemonicText;\n        }\n    }\n\n    // --- Render to DOM ---\n    els.kanjiModalContentContainer.innerHTML = '';\n    els.kanjiModalContentContainer.appendChild(clone);\n\n    const scrollContent = els.kanjiModalContentContainer.querySelector('.kanji-modal-scroll-content');\n    const fadeIndicator = els.kanjiModalContentContainer.querySelector('.fade-indicator');\n    if (scrollContent && fadeIndicator) {\n        const checkScroll = () => {\n            const isAtBottom = scrollContent.scrollHeight - scrollContent.scrollTop <= scrollContent.clientHeight + 5;\n            fadeIndicator.style.opacity = isAtBottom ? '0' : '1';\n        };\n        scrollContent.addEventListener('scroll', checkScroll);\n        setTimeout(checkScroll, 50);\n    }\n\n    els.kanjiDetailModal.classList.add('active');\n    document.body.classList.add('body-no-scroll');\n}\n\nfunction closeKanjiDetailModal() {\n    els.kanjiDetailModal.classList.remove('active');\n    document.body.classList.remove('body-no-scroll');\n}\n\nasync function openNotesModal() {\n    const tabId = state.activeTab;\n    if (!tabId || ['progress', 'external-search'].includes(tabId)) return;\n\n    const getUIText = (key, replacements = {}) => {\n        let text = state.appData.ui?.[state.currentLang]?.[key] || `[${key}]`;\n        if (key === 'lastSavedOn' && !state.appData.ui?.[state.currentLang]?.[key]) {\n            text = `Last saved: {date}`;\n        }\n        for (const [placeholder, value] of Object.entries(replacements)) {\n            text = text.replace(`{${placeholder}}`, value);\n        }\n        return text;\n    };\n\n    const navButton = document.querySelector(`.nav-item[data-tab-name=\"${tabId}\"] span`);\n    const tabDisplayName = navButton ? navButton.textContent.trim() : tabId;\n\n    els.notesModalTitle.textContent = getUIText('notesFor', { tabName: tabDisplayName });\n    els.notesSaveBtn.textContent = getUIText('saveNotes');\n    els.notesTextarea.placeholder = getUIText('notesPlaceholder');\n\n    const note = await loadNote(state.currentLevel, tabId);\n    const noteInfoDisplay = document.getElementById('note-info-display');\n\n    let initialContent = '';\n\n    if (note && typeof note === 'object' && note.lastModified) {\n        initialContent = note.content || '';\n        const d = new Date(note.lastModified);\n        if (!isNaN(d.getTime())) {\n            const formattedDate = d.toISOString().split('T')[0];\n            noteInfoDisplay.textContent = getUIText('lastSavedOn', { date: formattedDate });\n        } else {\n            noteInfoDisplay.textContent = '';\n        }\n    } else if (typeof note === 'string') {\n        initialContent = note;\n        noteInfoDisplay.textContent = '';\n    } else {\n        initialContent = '';\n        noteInfoDisplay.textContent = '';\n    }\n\n    els.notesTextarea.value = initialContent;\n\n    state.notes.originalContent = initialContent;\n\n    document.body.classList.add('body-no-scroll');\n    els.notesModal.classList.remove('modal-hidden');\n    els.notesModalBackdrop.classList.add('active');\n    els.notesModalWrapper.classList.add('active');\n    els.notesTextarea.focus();\n}\n\nfunction closeNotesModal() {\n    const currentContent = els.notesTextarea.value;\n    const originalContent = state.notes.originalContent;\n\n    if (currentContent !== originalContent) {\n        // Use custom confirm dialog instead of native one\n        showCustomConfirm(\n            getUIText('unsavedChangesTitle', 'Unsaved Changes'),\n            getUIText('unsavedChangesBody', 'You have unsaved changes. Are you sure you want to close without saving?')\n        ).then(confirmed => {\n            if (confirmed) {\n                // User confirmed to close without saving\n                document.body.classList.remove('body-no-scroll');\n                els.notesModalBackdrop.classList.remove('active');\n                els.notesModalWrapper.classList.remove('active');\n                setTimeout(() => els.notesModal.classList.add('modal-hidden'), 300);\n                state.notes.originalContent = '';\n            }\n            // If not confirmed, do nothing (keep modal open)\n        });\n    } else {\n        // No unsaved changes, close normally\n        document.body.classList.remove('body-no-scroll');\n        els.notesModalBackdrop.classList.remove('active');\n        els.notesModalWrapper.classList.remove('active');\n        setTimeout(() => els.notesModal.classList.add('modal-hidden'), 300);\n        state.notes.originalContent = '';\n    }\n}\n\nasync function saveAndCloseNotesModal() {\n    const content = els.notesTextarea.value;\n    await saveNote(state.currentLevel, state.activeTab, content);\n\n    state.notes.originalContent = content;\n\n    state.notes.data.set(state.activeTab, content);\n\n    const notesButtons = document.querySelectorAll('.notes-header-btn');\n    notesButtons.forEach(btn => {\n        btn.classList.toggle('has-note', !!content.trim());\n    });\n\n    els.notesStatus.style.opacity = '1';\n    setTimeout(() => {\n        closeNotesModal(); // This will now trigger the custom confirm if changes were made\n        setTimeout(() => { els.notesStatus.style.opacity = '0'; }, 500);\n    }, 1000);\n}\n\nfunction handleThemeButtonClick() {\n    const isDark = document.documentElement.classList.toggle('dark-mode');\n    const newTheme = isDark ? 'dark' : 'light';\n\n    if (els.themeEmoji) {\n        els.themeEmoji.textContent = isDark ? '\uD83C\uDF19' : '\u2600\uFE0F';\n    }\n\n    const mobileThemeInput = document.querySelector('#sidebar-controls .theme-switch input');\n    if (mobileThemeInput) {\n        mobileThemeInput.checked = isDark;\n    }\n\n    saveSetting('theme', newTheme);\n    try {\n        localStorage.setItem('theme', newTheme);\n    } catch (e) {\n        console.warn(\"Could not save theme to localStorage.\", e);\n    }\n}\n\nfunction setupEventListeners() {\n    document.body.addEventListener('click', (e) => {\n        const target = e.target;\n        const actionTarget = target.closest('[data-action]');\n        if (!actionTarget) return;\n\n        e.preventDefault(); // Prevent default link/button behavior\n        const action = actionTarget.dataset.action;\n\n        switch (action) {\n            case 'change-tab':\n                changeTab(actionTarget.dataset.tabName, actionTarget);\n                break;\n            case 'toggle-sidebar':\n                els.sidebar?.classList.add('open');\n                els.overlay?.classList.add('active');\n                document.body.classList.add('sidebar-open');\n                break;\n            case 'toggle-theme':\n                handleThemeButtonClick();\n                break;\n            case 'toggle-pin':\n                togglePin();\n                break;\n            case 'open-notes':\n                openNotesModal();\n                break;\n            case 'close-kanji-modal':\n                closeKanjiDetailModal();\n                break;\n            case 'toggle-sidebar-pin':\n                toggleSidebarPin(e, actionTarget.dataset.tabName);\n                break;\n            case 'flip-card':\n                if (!e.target.closest('[data-action=\"show-kanji-details\"]')) {\n                    actionTarget.closest('.card').classList.toggle('is-flipped');\n                }\n                break;\n            case 'toggle-learned':\n                toggleLearned(actionTarget.dataset.category, actionTarget.dataset.id, actionTarget);\n                break;\n            case 'jump-to-section':\n                jumpToSection(actionTarget.dataset.tabName, actionTarget.dataset.sectionKey);\n                break;\n            case 'delete-level':\n                deleteLevel(actionTarget.dataset.levelName);\n                break;\n            case 'set-level':\n                setLevel(actionTarget.dataset.levelName);\n                break;\n            case 'toggle-accordion':\n                actionTarget.classList.toggle('open');\n                break;\n            case 'show-kanji-details':\n                openKanjiDetailModal(actionTarget.dataset.id);\n                break;\n        }\n    });\n\n    els.overlay?.addEventListener('click', closeSidebar);\n    els.searchInput?.addEventListener('input', handleSearch);\n    els.mobileSearchInput?.addEventListener('input', handleSearch);\n    els.closeSidebarBtn?.addEventListener('click', closeSidebar);\n\n    const debouncedResize = debounce(() => {\n        document.querySelectorAll('.lang-switch').forEach(moveLangPill);\n        const isMobileView = window.innerWidth <= 768;\n        if (els.pinToggle) {\n            els.pinToggle.style.display = isMobileView ? 'block' : 'none';\n            if (isMobileView) {\n                const activeTab = document.querySelector('.tab-content.active');\n                if (activeTab) updatePinButtonState(activeTab.id);\n            }\n        }\n    }, 100);\n    window.addEventListener('resize', debouncedResize);\n\n    els.kanjiDetailModal.addEventListener('click', (e) => {\n        if (e.target === els.kanjiModalBackdrop) {\n            closeKanjiDetailModal();\n        }\n    });\n\n    document.addEventListener('keydown', (e) => {\n        if (e.key === 'Escape') {\n            if (els.kanjiDetailModal.classList.contains('active')) {\n                closeKanjiDetailModal();\n            } else if (!els.notesModal.classList.contains('modal-hidden')) {\n                closeNotesModal();\n            }\n        }\n    });\n\n    els.closeNotesModalBtn?.addEventListener('click', closeNotesModal);\n    els.notesSaveBtn?.addEventListener('click', saveAndCloseNotesModal);\n\n    els.notesModalWrapper?.addEventListener('click', (e) => {\n        if (e.target === els.notesModalWrapper) {\n            closeNotesModal();\n        }\n    });\n\n    els.notesTextarea?.addEventListener('keydown', e => {\n        if (e.key === 's' && (e.ctrlKey || e.metaKey)) {\n            e.preventDefault();\n            saveAndCloseNotesModal();\n        }\n    });\n\n    window.addEventListener('popstate', (e) => {\n        handleStateChange(e.state);\n    });\n}\n\nfunction setupImportModal() {\n    if (!els.importModal) return;\n\n    let importedData = {};\n    let levelNameIsValid = false;\n\n    const getUIText = (key, replacements = {}) => {\n        let text = state.appData.ui?.[state.currentLang]?.[key] || state.appData.ui?.['en']?.[key] || `[${key}]`;\n        for (const [placeholder, value] of Object.entries(replacements)) {\n            text = text.replace(`{${placeholder}}`, value);\n        }\n        return text;\n    };\n\n    const updateModalLocale = () => {\n        els.importModal.querySelectorAll('[data-lang-key]').forEach(el => el.textContent = getUIText(el.dataset.langKey));\n        els.importModal.querySelectorAll('[data-lang-placeholder-key]').forEach(el => el.placeholder = getUIText(el.dataset.langPlaceholderKey));\n    };\n\n    const openModal = () => {\n        document.body.classList.add('body-no-scroll');\n        closeSidebar();\n        resetModal();\n        updateModalLocale();\n        els.importModal.classList.remove('modal-hidden');\n        els.importModalBackdrop.classList.add('active');\n        els.modalWrapper.classList.add('active');\n    };\n\n    const closeModal = () => {\n        document.body.classList.remove('body-no-scroll');\n        els.importModalBackdrop.classList.remove('active');\n        els.modalWrapper.classList.remove('active');\n        setTimeout(() => els.importModal.classList.add('modal-hidden'), 300);\n    };\n\n    const updateImportButtonState = () => {\n        const levelName = els.levelNameInput.value.trim().toLowerCase().replace(/[^a-z0-9-]/g, '');\n        levelNameIsValid = false;\n        if (!levelName) {\n            els.levelNameError.textContent = getUIText('errorLevelNameRequired');\n        } else if (state.allAvailableLevels.includes(levelName)) {\n            els.levelNameError.textContent = getUIText('errorLevelNameExists');\n        } else {\n            els.levelNameError.textContent = \"\";\n            levelNameIsValid = true;\n        }\n        const hasFiles = Object.keys(importedData).length > 0;\n        els.importBtn.disabled = !levelNameIsValid || !hasFiles;\n    };\n\n    const resetModal = () => {\n        els.levelNameInput.value = '';\n        els.fileInput.value = '';\n        els.levelNameError.textContent = '';\n        importedData = {};\n        levelNameIsValid = false;\n        els.fileImportArea.classList.remove('state-preview', 'drag-active');\n        els.fileImportArea.innerHTML = `<svg class=\"upload-icon\" viewBox=\"0 0 24 24\"><path d=\"M3 15C3 17.8284 3 19.2426 3.87868 20.1213C4.75736 21 6.17157 21 9 21H15C17.8284 21 19.2426 21 20.1213 20.1213C21 19.2426 21 17.8284 21 15\" fill=\"none\" stroke=\"currentColor\"/><path class=\"arrow\" d=\"M12 16V3M12 3L16 7M12 3L8 7\" stroke=\"currentColor\"/></svg><p class=\"font-semibold text-primary\" data-lang-key=\"dropZoneTitle\"></p><p class=\"text-sm text-secondary\" data-lang-key=\"dropZoneOrClick\"></p>`;\n        els.fileImportArea.querySelectorAll('[data-lang-key]').forEach(el => el.textContent = getUIText(el.dataset.langKey));\n        updateImportButtonState();\n    };\n\n    const handleFileSelect = async (files) => {\n        const selectedFiles = files ? Array.from(files) : [];\n        importedData = {}; // Clear previous data\n        els.fileInput.value = ''; // Crucial for allowing re-selection of the same file after error\n        els.fileImportArea.classList.add('state-preview');\n\n        const supportedFileNames = ['grammar.csv', 'hiragana.csv', 'kanji.csv', 'katakana.csv', 'keyPoints.csv', 'vocab.csv'];\n        const validFiles = selectedFiles.filter(file => supportedFileNames.includes(file.name));\n\n        if (validFiles.length === 0) {\n            els.fileImportArea.innerHTML = `<p class=\"text-red-400 text-sm\">${getUIText('errorNoSupportedFiles')}</p>`;\n            updateImportButtonState();\n            // Revert to initial state after a delay for better UX\n            setTimeout(resetModal, 2000); \n            return;\n        }\n\n        const parseCSV = (content) => {\n            const lines = content.replace(/\\r/g, \"\").split('\\n').filter(line => line.trim() !== '');\n            if (lines.length < 2) return [];\n\n            const splitLine = (line) => {\n                const values = [];\n                let current = '';\n                let inQuotes = false;\n                for (const char of line) {\n                    if (char === '\"' && (current.length === 0 || !inQuotes)) {\n                        inQuotes = !inQuotes;\n                    } else if (char === ';' && !inQuotes) {\n                        values.push(current);\n                        current = '';\n                    } else {\n                        current += char;\n                    }\n                }\n                values.push(current);\n                return values.map(v => v.startsWith('\"') && v.endsWith('\"') ? v.slice(1, -1) : v);\n            };\n\n            const header = splitLine(lines[0]).map(h => h.trim());\n\n            return lines.slice(1).map(line => {\n                const values = splitLine(line);\n                if (values.length !== header.length) {\n                    console.warn(\"Skipping malformed CSV line:\", line);\n                    return null;\n                }\n                return header.reduce((obj, h, i) => {\n                    obj[h] = (values[i] || '').trim();\n                    return obj;\n                }, {});\n            }).filter(Boolean);\n        };\n        const transformToJSON = (key, data) => {\n            const groupKey = `user_created_${key}`;\n            const groupName = {\n                en: `User ${key.charAt(0).toUpperCase() + key.slice(1)}`,\n                vi: `${key.charAt(0).toUpperCase() + key.slice(1)} ng\u01B0\u1EDDi d\u00F9ng`\n            };\n\n            const items = data.map((row, index) => {\n                const transformedRow = {\n                    id: `${key}_user_${index}`\n                };\n\n                for (const colHeader in row) {\n                    if (Object.prototype.hasOwnProperty.call(row, colHeader)) {\n                        const value = row[colHeader];\n                        const langMatch = colHeader.match(/_(en|vi)$/);\n\n                        if (langMatch) {\n                            const baseKey = colHeader.replace(/_(en|vi)$/, '');\n                            const lang = langMatch[1];\n                            if (!transformedRow[baseKey]) {\n                                transformedRow[baseKey] = {};\n                            }\n                            transformedRow[baseKey][lang] = value;\n                        } else {\n                            transformedRow[colHeader] = value;\n                        }\n                    }\n                }\n\n                if (key === 'kanji') {\n                    if (!transformedRow.examples) transformedRow.examples = [];\n                    if (!transformedRow.sentence) transformedRow.sentence = {};\n                }\n\n                return transformedRow;\n            });\n\n            return {\n                [groupKey]: {\n                    ...groupName,\n                    items: items\n                }\n            };\n        };\n\n        const filePromises = validFiles.map(file => {\n            return new Promise((resolve, reject) => {\n                const reader = new FileReader();\n                reader.onload = e => {\n                    try {\n                        const content = e.target.result;\n                        const key = file.name.replace('.csv', '');\n                        const parsedData = parseCSV(content);\n                        if (parsedData.length === 0) {\n                            console.warn(`CSV file '${file.name}' is empty or invalid. Skipping.`);\n                            resolve(null);\n                            return;\n                        }\n                        const jsonData = transformToJSON(key, parsedData);\n                        resolve({ name: key, data: jsonData });\n                    } catch (err) {\n                        console.error(`Error processing ${file.name}:`, err);\n                        reject(`Error parsing ${file.name}`);\n                    }\n                };\n                reader.onerror = () => reject(`Could not read ${file.name}`);\n                reader.readAsText(file);\n            });\n        });\n\n        try {\n            const results = (await Promise.all(filePromises)).filter(Boolean);\n            if (results.length === 0) {\n                els.fileImportArea.innerHTML = `<p class=\"text-red-400 text-sm\">${getUIText('errorNoValidData')}</p>`;\n                updateImportButtonState();\n                // Revert to initial state after a delay for better UX\n                setTimeout(resetModal, 2000); \n                return;\n            }\n\n            results.forEach(result => {\n                importedData[result.name] = result.data;\n            });\n            let previewHtml = `<div class=\"w-full\"><p class=\"text-sm font-medium mb-2 text-primary\">${getUIText('filesToBeImported')}</p><div class=\"space-y-2\">`;\n            validFiles.forEach(file => {\n                previewHtml += `<div class=\"preview-item\"><p class=\"font-medium text-primary text-sm\">${file.name}</p><span class=\"text-xs font-mono bg-green-500/20 text-green-300 px-2 py-1 rounded-full\">\u2713</span></div>`;\n            });\n            previewHtml += '</div></div>';\n            els.fileImportArea.innerHTML = previewHtml;\n        } catch (err) {\n            els.fileImportArea.innerHTML = `<p class=\"text-red-400 text-sm\">${err}</p>`;\n            // Revert to initial state after a delay for better UX\n            setTimeout(resetModal, 2000);\n        }\n        updateImportButtonState();\n    };\n\n    const handleConfirm = async () => {\n        const levelName = els.levelNameInput.value.trim().toLowerCase().replace(/[^a-z0-9-]/g, '');\n        if (!levelNameIsValid || Object.keys(importedData).length === 0) return;\n        try {\n            els.importBtn.disabled = true;\n            els.importBtn.querySelector('span').textContent = getUIText('importButtonProgress');\n            const db = await dbPromise;\n\n            const uiData = {\n                \"en\": { \"userCreated\": \"User Created\" },\n                \"vi\": { \"userCreated\": \"Ng\u01B0\u1EDDi d\u00F9ng t\u1EA1o\" }\n            };\n            importedData['ui'] = uiData;\n\n            await db.put('levels', importedData, levelName);\n\n            const remoteResponse = await fetch(`${config.dataPath}/levels.json`);\n            const remoteData = remoteResponse.ok ? await remoteResponse.json() : { levels: [] };\n            const customLevels = await db.getAllKeys('levels');\n            buildLevelSwitcher(remoteData.levels, customLevels);\n\n            await setLevel(levelName);\n\n            showCustomAlert(getUIText('successTitle', 'Success'), getUIText('importSuccess', { levelName: levelName.toUpperCase() }));\n            closeModal();\n        } catch (error) {\n            console.error(\"Failed to save imported level:\", error);\n            showCustomAlert(getUIText('errorTitle', 'Error'), getUIText('errorSaveImportedLevel', 'Error: Could not save the new level.'));\n        } finally {\n            els.importBtn.disabled = false;\n            els.importBtn.querySelector('span').textContent = getUIText('importButton');\n        }\n    };\n\n    document.getElementById('sidebar-import-btn')?.addEventListener('click', openModal);\n    els.closeModalBtn?.addEventListener('click', closeModal);\n    els.modalWrapper?.addEventListener('click', (e) => { if (e.target === els.modalWrapper) closeModal(); });\n    els.levelNameInput?.addEventListener('input', updateImportButtonState);\n    els.importBtn?.addEventListener('click', handleConfirm);\n    els.fileImportArea?.addEventListener('click', () => { if (!els.fileImportArea.classList.contains('state-preview')) els.fileInput.click(); });\n    els.fileInput?.addEventListener('change', (e) => handleFileSelect(e.target.files));\n    els.fileImportArea?.addEventListener('dragover', (e) => { e.preventDefault(); els.fileImportArea.classList.add('drag-active'); });\n    els.fileImportArea?.addEventListener('dragleave', () => els.fileImportArea.classList.remove('drag-active'));\n    els.fileImportArea?.addEventListener('drop', (e) => { e.preventDefault(); els.fileImportArea.classList.remove('drag-active'); handleFileSelect(e.dataTransfer.files); });\n}\n\nfunction populateAndBindControls() {\n    if (els.sidebarControls) {\n        els.sidebarControls.innerHTML = `\n            <div class=\"sidebar-control-group\"><label class=\"sidebar-control-label\" data-lang-key=\"level\">Level</label><div id=\"level-switcher-sidebar\" class=\"level-switch\"></div></div>\n            <div class=\"sidebar-control-group md:hidden\"><label class=\"sidebar-control-label\" data-lang-key=\"language\">Language</label><div id=\"sidebar-lang-switcher\" class=\"lang-switch\">${getLangSwitcherHTML()}</div></div>\n            <div class=\"sidebar-control-group md:hidden\"><label class=\"sidebar-control-label\" data-lang-key=\"theme\">Theme</label><div class=\"theme-switch-wrapper\">${getThemeToggleHTML()}</div></div>\n            <button id=\"sidebar-import-btn\" class=\"w-full mt-4 flex items-center justify-center gap-2 text-sm font-semibold p-3 rounded-lg transition-colors import-button\"><svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 pointer-events-none\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L6.707 6.707a1 1 0 01-1.414 0z\" clip-rule=\"evenodd\" /></svg><span data-lang-key=\"importLevel\" class=\"pointer-events-none\">Import New Level</span></button>`;\n    }\n\n    const headerLangSwitcher = document.getElementById('header-lang-switcher');\n    if (headerLangSwitcher) {\n        headerLangSwitcher.innerHTML = getLangSwitcherHTML();\n    }\n\n    document.querySelectorAll('.sidebar-control-group .theme-switch input').forEach(el => el.addEventListener('change', toggleThemeSlider));\n    document.querySelectorAll('.lang-switch button').forEach(el => el.addEventListener('click', (e) => {\n        e.preventDefault();\n        setLanguage(e.currentTarget.dataset.lang);\n    }));\n}\n\nasync function init() {\n    populateEls();\n    await loadState();\n\n    populateAndBindControls();\n    setupEventListeners();\n    setupTheme();\n\n    try {\n        let remoteLevels = [config.defaultLevel];\n        try {\n            const response = await fetch(`${config.dataPath}/levels.json`);\n            if (response.ok) {\n                remoteLevels = (await response.json()).levels;\n            }\n        } catch (error) {\n            console.warn(\"Could not fetch remote levels list. Falling back to default.\", error);\n        }\n\n        const db = await dbPromise;\n        const customLevels = await db.getAllKeys('levels');\n        state.allAvailableLevels = [...new Set([...remoteLevels, ...customLevels])];\n        buildLevelSwitcher(remoteLevels, customLevels);\n\n        const params = new URLSearchParams(window.location.search);\n        const urlLevel = params.get('level');\n        if (urlLevel && state.allAvailableLevels.includes(urlLevel)) {\n            state.currentLevel = urlLevel;\n        }\n\n        await loadAllData(state.currentLevel);\n\n        // FIX: Ensure data for progress calculation is loaded before rendering the dashboard.\n        await loadRequiredDataForProgress();\n        updateProgressDashboard();\n\n        setLanguage(state.currentLang, true);\n        setupImportModal();\n\n        if (els.loadingOverlay) {\n            els.loadingOverlay.style.opacity = '0';\n            els.loadingOverlay.addEventListener('transitionend', () => els.loadingOverlay.classList.add('hidden'), { once: true });\n        }\n\n        document.querySelector(`.level-switch-button[data-level-name=\"${state.currentLevel}\"]`)?.classList.add('active');\n        scrollActiveLevelIntoView();\n        document.querySelectorAll('.lang-switch').forEach(moveLangPill);\n\n        const urlTab = params.get('tab');\n        const isMobileView = window.innerWidth <= 768;\n        const defaultTab = isMobileView ? 'external-search' : 'external-search';\n        const initialTab = urlTab || state.pinnedTab || defaultTab;\n\n        await changeTab(initialTab, null, false, true);\n\n        updateSidebarPinIcons();\n\n        const initialState = { type: 'tab', tabName: initialTab, level: state.currentLevel };\n        const initialUrl = `?level=${state.currentLevel}&tab=${initialTab}`;\n        history.replaceState(initialState, '', initialUrl);\n\n    } catch (error) {\n        console.error('Initialization failed.', error);\n        if (els.loadingOverlay) {\n            // Use custom alert for fatal errors\n            showCustomAlert(\n                getUIText('applicationErrorTitle', 'Application Error'),\n                getUIText('applicationErrorBody', 'Something went wrong during startup. Please try refreshing the page.') + `\\n\\nError: ${error.message}`\n            );\n        }\n    }\n}\n\ndocument.addEventListener('DOMContentLoaded', init);"],
  "mappings": ";AAMO,IAAM,MAAM,CAAC;AAMb,SAAS,cAAc;AAE1B,MAAI,UAAU,SAAS,eAAe,SAAS;AAC/C,MAAI,UAAU,SAAS,eAAe,SAAS;AAC/C,MAAI,cAAc,SAAS,eAAe,cAAc;AAGxD,MAAI,iBAAiB,SAAS,eAAe,iBAAiB;AAG9D,MAAI,oBAAoB,SAAS,eAAe,qBAAqB;AACrE,MAAI,mBAAmB,SAAS,eAAe,oBAAoB;AACnE,MAAI,oBAAoB,SAAS,eAAe,qBAAqB;AAGrE,MAAI,cAAc,SAAS,eAAe,cAAc;AACxD,MAAI,oBAAoB,SAAS,eAAe,qBAAqB;AACrE,MAAI,kBAAkB,SAAS,cAAc,oBAAoB;AAGjE,MAAI,aAAa,SAAS,eAAe,aAAa;AACtD,MAAI,YAAY,SAAS,eAAe,YAAY;AACpD,MAAI,aAAa,SAAS,eAAe,aAAa;AAGtD,MAAI,mBAAmB,SAAS,eAAe,mBAAmB;AAClE,MAAI,cAAc,SAAS,eAAe,UAAU;AACpD,MAAI,cAAc,SAAS,eAAe,UAAU;AACpD,MAAI,cAAc,SAAS,eAAe,UAAU;AACpD,MAAI,WAAW,SAAS,eAAe,OAAO;AAC9C,MAAI,eAAe,SAAS,eAAe,WAAW;AACtD,MAAI,WAAW,SAAS,eAAe,OAAO;AAC9C,MAAI,mBAAmB,SAAS,eAAe,mBAAmB;AAClE,MAAI,aAAa,SAAS,eAAe,SAAS;AAClD,MAAI,oBAAoB,SAAS,eAAe,iBAAiB;AAGjE,MAAI,kBAAkB,SAAS,eAAe,kBAAkB;AAChE,MAAI,kBAAkB,SAAS,eAAe,mBAAmB;AAGjE,MAAI,cAAc,SAAS,eAAe,cAAc;AACxD,MAAI,sBAAsB,SAAS,eAAe,uBAAuB;AACzE,MAAI,eAAe,SAAS,cAAc,8BAA8B;AACxE,MAAI,eAAe,SAAS,eAAe,oBAAoB;AAC/D,MAAI,gBAAgB,SAAS,eAAe,iBAAiB;AAC7D,MAAI,iBAAiB,SAAS,eAAe,kBAAkB;AAC/D,MAAI,iBAAiB,SAAS,eAAe,kBAAkB;AAC/D,MAAI,iBAAiB,SAAS,eAAe,kBAAkB;AAC/D,MAAI,YAAY,SAAS,eAAe,YAAY;AACpD,MAAI,YAAY,SAAS,eAAe,YAAY;AAGpD,MAAI,kBAAkB,SAAS,eAAe,mBAAmB;AACjE,MAAI,iBAAiB,SAAS,eAAe,kBAAkB;AAC/D,MAAI,aAAa,SAAS,eAAe,aAAa;AACtD,MAAI,qBAAqB,SAAS,eAAe,sBAAsB;AACvE,MAAI,oBAAoB,SAAS,cAAc,6BAA6B;AAC5E,MAAI,kBAAkB,SAAS,eAAe,mBAAmB;AACjE,MAAI,qBAAqB,SAAS,eAAe,uBAAuB;AACxE,MAAI,gBAAgB,SAAS,eAAe,gBAAgB;AAC5D,MAAI,eAAe,SAAS,eAAe,gBAAgB;AAC3D,MAAI,cAAc,SAAS,eAAe,cAAc;AAGxD,MAAI,mBAAmB,SAAS,eAAe,oBAAoB;AACnE,MAAI,qBAAqB,SAAS,cAAc,qCAAqC;AACrF,MAAI,6BAA6B,SAAS,cAAc,8CAA8C;AAGtG,MAAI,wBAAwB,SAAS,eAAe,yBAAyB;AAC7E,MAAI,uBAAuB,SAAS,eAAe,wBAAwB;AAC3E,MAAI,sBAAsB,SAAS,cAAc,yCAAyC;AAE9F;;;AChFO,IAAM,SAAS;AAAA,EAClB,cAAc;AAAA,EACd,UAAU;AACd;AAGO,IAAM,QAAQ;AAAA,EACjB,SAAS,CAAC;AAAA,EACV,UAAU,EAAE,OAAO,CAAC,GAAG,OAAO,CAAC,EAAE;AAAA,EACjC,aAAa;AAAA,EACb,cAAc,OAAO;AAAA,EACrB,oBAAoB,CAAC,OAAO,YAAY;AAAA,EACxC,WAAW;AAAA,EACX,kBAAkB;AAAA,EAClB,eAAe;AAAA,EACf,WAAW;AAAA,EACX,OAAO;AAAA;AAAA,IAEH,MAAM,oBAAI,IAAI;AAAA,IACd,iBAAiB;AAAA,EACrB;AAAA,EACA,eAAe,CAAC;AAAA,EAChB,eAAe;AAAA,EACf,cAAc;AAAA,EACd,qBAAqB;AAAA,EACrB,oBAAoB,oBAAI,IAAI;AAAA,EAC5B,cAAc,oBAAI,IAAI;AAAA,EACtB,YAAY;AAAA,IACR,OAAO,CAAC;AAAA,IACR,OAAO,CAAC;AAAA,IACR,WAAW;AAAA,IACX,WAAW;AAAA,EACf;AACJ;;;ACvCA,IAAM,gBAAgB,CAAC,QAAQ,iBAAiB,aAAa,KAAK,CAAC,MAAM,kBAAkB,CAAC;AAE5F,IAAI;AACJ,IAAI;AAEJ,SAAS,uBAAuB;AAC5B,SAAQ,sBACH,oBAAoB;AAAA,IACjB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AACR;AAEA,SAAS,0BAA0B;AAC/B,SAAQ,yBACH,uBAAuB;AAAA,IACpB,UAAU,UAAU;AAAA,IACpB,UAAU,UAAU;AAAA,IACpB,UAAU,UAAU;AAAA,EACxB;AACR;AACA,IAAM,qBAAqB,oBAAI,QAAQ;AACvC,IAAM,iBAAiB,oBAAI,QAAQ;AACnC,IAAM,wBAAwB,oBAAI,QAAQ;AAC1C,SAAS,iBAAiB,SAAS;AAC/B,QAAM,UAAU,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC7C,UAAM,WAAW,MAAM;AACnB,cAAQ,oBAAoB,WAAW,OAAO;AAC9C,cAAQ,oBAAoB,SAAS,KAAK;AAAA,IAC9C;AACA,UAAM,UAAU,MAAM;AAClB,cAAQ,KAAK,QAAQ,MAAM,CAAC;AAC5B,eAAS;AAAA,IACb;AACA,UAAM,QAAQ,MAAM;AAChB,aAAO,QAAQ,KAAK;AACpB,eAAS;AAAA,IACb;AACA,YAAQ,iBAAiB,WAAW,OAAO;AAC3C,YAAQ,iBAAiB,SAAS,KAAK;AAAA,EAC3C,CAAC;AAGD,wBAAsB,IAAI,SAAS,OAAO;AAC1C,SAAO;AACX;AACA,SAAS,+BAA+B,IAAI;AAExC,MAAI,mBAAmB,IAAI,EAAE;AACzB;AACJ,QAAM,OAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC1C,UAAM,WAAW,MAAM;AACnB,SAAG,oBAAoB,YAAY,QAAQ;AAC3C,SAAG,oBAAoB,SAAS,KAAK;AACrC,SAAG,oBAAoB,SAAS,KAAK;AAAA,IACzC;AACA,UAAM,WAAW,MAAM;AACnB,cAAQ;AACR,eAAS;AAAA,IACb;AACA,UAAM,QAAQ,MAAM;AAChB,aAAO,GAAG,SAAS,IAAI,aAAa,cAAc,YAAY,CAAC;AAC/D,eAAS;AAAA,IACb;AACA,OAAG,iBAAiB,YAAY,QAAQ;AACxC,OAAG,iBAAiB,SAAS,KAAK;AAClC,OAAG,iBAAiB,SAAS,KAAK;AAAA,EACtC,CAAC;AAED,qBAAmB,IAAI,IAAI,IAAI;AACnC;AACA,IAAI,gBAAgB;AAAA,EAChB,IAAI,QAAQ,MAAM,UAAU;AACxB,QAAI,kBAAkB,gBAAgB;AAElC,UAAI,SAAS;AACT,eAAO,mBAAmB,IAAI,MAAM;AAExC,UAAI,SAAS,SAAS;AAClB,eAAO,SAAS,iBAAiB,CAAC,IAC5B,SACA,SAAS,YAAY,SAAS,iBAAiB,CAAC,CAAC;AAAA,MAC3D;AAAA,IACJ;AAEA,WAAO,KAAK,OAAO,IAAI,CAAC;AAAA,EAC5B;AAAA,EACA,IAAI,QAAQ,MAAM,OAAO;AACrB,WAAO,IAAI,IAAI;AACf,WAAO;AAAA,EACX;AAAA,EACA,IAAI,QAAQ,MAAM;AACd,QAAI,kBAAkB,mBACjB,SAAS,UAAU,SAAS,UAAU;AACvC,aAAO;AAAA,IACX;AACA,WAAO,QAAQ;AAAA,EACnB;AACJ;AACA,SAAS,aAAa,UAAU;AAC5B,kBAAgB,SAAS,aAAa;AAC1C;AACA,SAAS,aAAa,MAAM;AAQxB,MAAI,wBAAwB,EAAE,SAAS,IAAI,GAAG;AAC1C,WAAO,YAAa,MAAM;AAGtB,WAAK,MAAM,OAAO,IAAI,GAAG,IAAI;AAC7B,aAAO,KAAK,KAAK,OAAO;AAAA,IAC5B;AAAA,EACJ;AACA,SAAO,YAAa,MAAM;AAGtB,WAAO,KAAK,KAAK,MAAM,OAAO,IAAI,GAAG,IAAI,CAAC;AAAA,EAC9C;AACJ;AACA,SAAS,uBAAuB,OAAO;AACnC,MAAI,OAAO,UAAU;AACjB,WAAO,aAAa,KAAK;AAG7B,MAAI,iBAAiB;AACjB,mCAA+B,KAAK;AACxC,MAAI,cAAc,OAAO,qBAAqB,CAAC;AAC3C,WAAO,IAAI,MAAM,OAAO,aAAa;AAEzC,SAAO;AACX;AACA,SAAS,KAAK,OAAO;AAGjB,MAAI,iBAAiB;AACjB,WAAO,iBAAiB,KAAK;AAGjC,MAAI,eAAe,IAAI,KAAK;AACxB,WAAO,eAAe,IAAI,KAAK;AACnC,QAAM,WAAW,uBAAuB,KAAK;AAG7C,MAAI,aAAa,OAAO;AACpB,mBAAe,IAAI,OAAO,QAAQ;AAClC,0BAAsB,IAAI,UAAU,KAAK;AAAA,EAC7C;AACA,SAAO;AACX;AACA,IAAM,SAAS,CAAC,UAAU,sBAAsB,IAAI,KAAK;AASzD,SAAS,OAAO,MAAM,SAAS,EAAE,SAAS,SAAS,UAAU,WAAW,IAAI,CAAC,GAAG;AAC5E,QAAM,UAAU,UAAU,KAAK,MAAM,OAAO;AAC5C,QAAM,cAAc,KAAK,OAAO;AAChC,MAAI,SAAS;AACT,YAAQ,iBAAiB,iBAAiB,CAAC,UAAU;AACjD,cAAQ,KAAK,QAAQ,MAAM,GAAG,MAAM,YAAY,MAAM,YAAY,KAAK,QAAQ,WAAW,GAAG,KAAK;AAAA,IACtG,CAAC;AAAA,EACL;AACA,MAAI,SAAS;AACT,YAAQ,iBAAiB,WAAW,CAAC,UAAU;AAAA;AAAA,MAE/C,MAAM;AAAA,MAAY,MAAM;AAAA,MAAY;AAAA,IAAK,CAAC;AAAA,EAC9C;AACA,cACK,KAAK,CAAC,OAAO;AACd,QAAI;AACA,SAAG,iBAAiB,SAAS,MAAM,WAAW,CAAC;AACnD,QAAI,UAAU;AACV,SAAG,iBAAiB,iBAAiB,CAAC,UAAU,SAAS,MAAM,YAAY,MAAM,YAAY,KAAK,CAAC;AAAA,IACvG;AAAA,EACJ,CAAC,EACI,MAAM,MAAM;AAAA,EAAE,CAAC;AACpB,SAAO;AACX;AAgBA,IAAM,cAAc,CAAC,OAAO,UAAU,UAAU,cAAc,OAAO;AACrE,IAAM,eAAe,CAAC,OAAO,OAAO,UAAU,OAAO;AACrD,IAAM,gBAAgB,oBAAI,IAAI;AAC9B,SAAS,UAAU,QAAQ,MAAM;AAC7B,MAAI,EAAE,kBAAkB,eACpB,EAAE,QAAQ,WACV,OAAO,SAAS,WAAW;AAC3B;AAAA,EACJ;AACA,MAAI,cAAc,IAAI,IAAI;AACtB,WAAO,cAAc,IAAI,IAAI;AACjC,QAAM,iBAAiB,KAAK,QAAQ,cAAc,EAAE;AACpD,QAAM,WAAW,SAAS;AAC1B,QAAM,UAAU,aAAa,SAAS,cAAc;AACpD;AAAA;AAAA,IAEA,EAAE,mBAAmB,WAAW,WAAW,gBAAgB,cACvD,EAAE,WAAW,YAAY,SAAS,cAAc;AAAA,IAAI;AACpD;AAAA,EACJ;AACA,QAAM,SAAS,eAAgB,cAAc,MAAM;AAE/C,UAAM,KAAK,KAAK,YAAY,WAAW,UAAU,cAAc,UAAU;AACzE,QAAIA,UAAS,GAAG;AAChB,QAAI;AACA,MAAAA,UAASA,QAAO,MAAM,KAAK,MAAM,CAAC;AAMtC,YAAQ,MAAM,QAAQ,IAAI;AAAA,MACtBA,QAAO,cAAc,EAAE,GAAG,IAAI;AAAA,MAC9B,WAAW,GAAG;AAAA,IAClB,CAAC,GAAG,CAAC;AAAA,EACT;AACA,gBAAc,IAAI,MAAM,MAAM;AAC9B,SAAO;AACX;AACA,aAAa,CAAC,cAAc;AAAA,EACxB,GAAG;AAAA,EACH,KAAK,CAAC,QAAQ,MAAM,aAAa,UAAU,QAAQ,IAAI,KAAK,SAAS,IAAI,QAAQ,MAAM,QAAQ;AAAA,EAC/F,KAAK,CAAC,QAAQ,SAAS,CAAC,CAAC,UAAU,QAAQ,IAAI,KAAK,SAAS,IAAI,QAAQ,IAAI;AACjF,EAAE;AAEF,IAAM,qBAAqB,CAAC,YAAY,sBAAsB,SAAS;AACvE,IAAM,YAAY,CAAC;AACnB,IAAM,iBAAiB,oBAAI,QAAQ;AACnC,IAAM,mCAAmC,oBAAI,QAAQ;AACrD,IAAM,sBAAsB;AAAA,EACxB,IAAI,QAAQ,MAAM;AACd,QAAI,CAAC,mBAAmB,SAAS,IAAI;AACjC,aAAO,OAAO,IAAI;AACtB,QAAI,aAAa,UAAU,IAAI;AAC/B,QAAI,CAAC,YAAY;AACb,mBAAa,UAAU,IAAI,IAAI,YAAa,MAAM;AAC9C,uBAAe,IAAI,MAAM,iCAAiC,IAAI,IAAI,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;AAAA,MACtF;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AACJ;AACA,gBAAgB,WAAW,MAAM;AAE7B,MAAI,SAAS;AACb,MAAI,EAAE,kBAAkB,YAAY;AAChC,aAAS,MAAM,OAAO,WAAW,GAAG,IAAI;AAAA,EAC5C;AACA,MAAI,CAAC;AACD;AACJ,WAAS;AACT,QAAM,gBAAgB,IAAI,MAAM,QAAQ,mBAAmB;AAC3D,mCAAiC,IAAI,eAAe,MAAM;AAE1D,wBAAsB,IAAI,eAAe,OAAO,MAAM,CAAC;AACvD,SAAO,QAAQ;AACX,UAAM;AAEN,aAAS,OAAO,eAAe,IAAI,aAAa,KAAK,OAAO,SAAS;AACrE,mBAAe,OAAO,aAAa;AAAA,EACvC;AACJ;AACA,SAAS,eAAe,QAAQ,MAAM;AAClC,SAAS,SAAS,OAAO,iBACrB,cAAc,QAAQ,CAAC,UAAU,gBAAgB,SAAS,CAAC,KAC1D,SAAS,aAAa,cAAc,QAAQ,CAAC,UAAU,cAAc,CAAC;AAC/E;AACA,aAAa,CAAC,cAAc;AAAA,EACxB,GAAG;AAAA,EACH,IAAI,QAAQ,MAAM,UAAU;AACxB,QAAI,eAAe,QAAQ,IAAI;AAC3B,aAAO;AACX,WAAO,SAAS,IAAI,QAAQ,MAAM,QAAQ;AAAA,EAC9C;AAAA,EACA,IAAI,QAAQ,MAAM;AACd,WAAO,eAAe,QAAQ,IAAI,KAAK,SAAS,IAAI,QAAQ,IAAI;AAAA,EACpE;AACJ,EAAE;;;AC3RF,SAAS,OAAO,OAAK;AACnB,MAAI,UAAU,MAAM;AAClB,WAAO;EACR;AACD,MAAI,UAAU,OAAO,KAAK,GAAG;AAC3B,WAAO,OAAO;EACf;AACD,SAAO,CAAA,EAAG,SACP,KAAK,KAAK,EACV,MAAM,GAAG,EAAE,EACX,YAAW;AAChB;ACxBA,SAAS,QAAQ,OAAK;AACpB,MAAI,OAAO,KAAK,MAAM,UAAU;AAC9B,WAAO;EACR;AACD,SAAO,CAAC,MAAM;AAChB;ACFA,SAAS,cAAc,OAAO,IAAI,OAAO,KAAG;AAC1C,MAAI,QAAQ,IAAI;AAAG,WAAO;AAC1B,QAAM,OAAO,KAAK,WAAW,CAAC;AAC9B,SAAO,SAAS,QAAQ,QAAQ;AAClC;ACXa,IAAA,kBAGT;EACF,UAAU;EACV,UAAU;;AAGC,IAAA,gBAAwC;EACnD,SAAS;;AA6CJ,IAAM,kBAAkC;EAC7C,iBAAiB;EACjB,YAAY;EACZ,sBAAsB;EACtB,gBAAgB;EAChB,SAAS;EACT,cAAc,cAAc;;AASvB,IAAM,wBAAwB;AAC9B,IAAM,sBAAsB;AAC5B,IAAM,0BAA0B;AAChC,IAAM,wBAAwB;AAC9B,IAAM,0BAA0B;AAChC,IAAM,wBAAwB;AAC9B,IAAM,iBAAiB;AACvB,IAAM,eAAe;AACrB,IAAM,iBAAiB;AACvB,IAAM,eAAe;AACrB,IAAM,cAAc;AACpB,IAAM,YAAY;AAElB,IAAM,uBAAuB;AAC7B,IAAM,uBAAuB;AAC7B,IAAM,iBAAiB;AAE9B,IAAM,kBAAkB,CAAC,OAAQ,KAAM;AACvC,IAAM,oBAAoB,CAAC,yBAAyB,qBAAqB;AACzE,IAAM,oBAAoB,CAAC,yBAAyB,qBAAqB;AACzE,IAAM,wBAAwB,CAAC,OAAQ,KAAM;AAC7C,IAAM,wBAAwB,CAAC,OAAQ,KAAM;AAC7C,IAAM,wBAAwB,CAAC,OAAQ,KAAM;AAC7C,IAAM,wBAAwB,CAAC,OAAQ,KAAM;AAC7C,IAAM,2BAA2B,CAAC,OAAQ,KAAM;AAEhD,IAAM,iBAAiB,CAAC,OAAQ,KAAM;AACtC,IAAM,iBAAiB,CAAC,OAAQ,KAAM;AACtC,IAAM,mBAAmB,CAAC,OAAQ,KAAM;AACxC,IAAM,uBAAuB,CAAC,OAAQ,KAAM;AAC5C,IAAM,mBAAmB,CAAC,OAAQ,KAAM;AACxC,IAAM,0BAA0B,CAAC,OAAQ,KAAM;AAC/C,IAAM,aAAa,CAAC,OAAQ,KAAM;AAClC,IAAM,WAAW,CAAC,OAAQ,KAAM;AAEzB,IAAM,cAAc;EACzB;EACA;EACA;EACA;;AAGK,IAAM,wBAAwB;EACnC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAKK,IAAM,kBAAkB;EAC7B,GAAG;EACH,GAAG;EACH;EACA;EACA;EACA;EACA;;AAGF,IAAM,iBAAiB,CAAC,GAAQ,GAAM;AACtC,IAAM,wBAAwB;EAC5B,CAAC,KAAQ,GAAM;EACf,CAAC,KAAQ,GAAM;EACf,CAAC,KAAQ,GAAM;EACf,CAAC,KAAQ,GAAM;EACf,CAAC,KAAQ,GAAM;;;AAEjB,IAAM,qBAAqB;EACzB,CAAC,MAAQ,IAAM;EACf,CAAC,MAAQ,IAAM;;;AAGV,IAAM,gBAAgB,CAAC,gBAAgB,GAAG,qBAAqB;AAE/D,IAAM,wBAAwB;EACnC,CAAC,IAAM,EAAI;EACX,CAAC,IAAM,EAAI;EACX,CAAC,IAAM,EAAI;EACX,CAAC,KAAM,GAAI;EACX,GAAG;;AG5JL,IAAI,YAAY,OAAO,SACnB,SAAS,SAAS,OAAK;AACnB,SAAO,OAAO,UAAU,YAAY,UAAU;AAClD;AACJ,SAAS,QAAQ,OAAO,QAAM;AAC1B,MAAI,UAAU,QAAQ;AAClB,WAAO;EACV;AACD,MAAI,UAAU,KAAK,KAAK,UAAU,MAAM,GAAG;AACvC,WAAO;EACV;AACD,SAAO;AACX;AACA,SAAS,eAAe,WAAW,YAAU;AACzC,MAAI,UAAU,WAAW,WAAW,QAAQ;AACxC,WAAO;EACV;AACD,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACvC,QAAI,CAAC,QAAQ,UAAU,CAAC,GAAG,WAAW,CAAC,CAAC,GAAG;AACvC,aAAO;IACV;EACJ;AACD,SAAO;AACX;AAEA,SAAS,WAAW,UAAUC,UAAO;AACjC,MAAIA,aAAY,QAAQ;AAAE,IAAAA,WAAU;EAAiB;AACrD,MAAI,QAAQ;AACZ,WAAS,WAAQ;AACb,QAAI,UAAU,CAAA;AACd,aAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC1C,cAAQ,EAAE,IAAI,UAAU,EAAE;IAC7B;AACD,QAAI,SAAS,MAAM,aAAa,QAAQA,SAAQ,SAAS,MAAM,QAAQ,GAAG;AACtE,aAAO,MAAM;IAChB;AACD,QAAI,aAAa,SAAS,MAAM,MAAM,OAAO;AAC7C,YAAQ;MACJ;MACA,UAAU;MACV,UAAU;;AAEd,WAAO;;AAEX,WAAS,QAAQ,SAAS,QAAK;AAC3B,YAAQ;EACZ;AACA,SAAO;AACX;AChDA,IAAI,MAAM,OAAO,UAAU;AAC3B,SAAS,KAAK,MAAM,KAAK,KAAG;AACxB,OAAK,OAAO,KAAK,KAAI,GAAI;AACrB,QAAI,OAAO,KAAK,GAAG;AACf,aAAO;EACd;AACL;AACgB,SAAA,OAAO,KAAK,KAAG;AAC3B,MAAI,MAAM,KAAK;AACf,MAAI,QAAQ;AACR,WAAO;AACX,MAAI,OAAO,QAAQ,OAAO,IAAI,iBAAiB,IAAI,aAAa;AAC5D,QAAI,SAAS;AACT,aAAO,IAAI,QAAO,MAAO,IAAI,QAAO;AACxC,QAAI,SAAS;AACT,aAAO,IAAI,SAAQ,MAAO,IAAI,SAAQ;AAC1C,QAAI,SAAS,OAAO;AAChB,WAAK,MAAM,IAAI,YAAY,IAAI,QAAQ;AACnC,eAAO,SAAS,OAAO,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC;AACrC;MACP;AACD,aAAO,QAAQ;IAClB;AACD,QAAI,SAAS,KAAK;AACd,UAAI,IAAI,SAAS,IAAI,MAAM;AACvB,eAAO;MACV;AACD,WAAK,OAAO,KAAK;AACb,cAAM;AACN,YAAI,OAAO,OAAO,QAAQ,UAAU;AAChC,gBAAM,KAAK,KAAK,GAAG;AACnB,cAAI,CAAC;AACD,mBAAO;QACd;AACD,YAAI,CAAC,IAAI,IAAI,GAAG;AACZ,iBAAO;MACd;AACD,aAAO;IACV;AACD,QAAI,SAAS,KAAK;AACd,UAAI,IAAI,SAAS,IAAI,MAAM;AACvB,eAAO;MACV;AACD,WAAK,OAAO,KAAK;AACb,cAAM,IAAI,CAAC;AACX,YAAI,OAAO,OAAO,QAAQ,UAAU;AAChC,gBAAM,KAAK,KAAK,GAAG;AACnB,cAAI,CAAC;AACD,mBAAO;QACd;AACD,YAAI,CAAC,OAAO,IAAI,CAAC,GAAG,IAAI,IAAI,GAAG,CAAC,GAAG;AAC/B,iBAAO;QACV;MACJ;AACD,aAAO;IACV;AACD,QAAI,SAAS,aAAa;AACtB,YAAM,IAAI,WAAW,GAAG;AACxB,YAAM,IAAI,WAAW,GAAG;IAC3B,WACQ,SAAS,UAAU;AACxB,WAAK,MAAM,IAAI,gBAAgB,IAAI,YAAY;AAC3C,eAAO,SAAS,IAAI,QAAQ,GAAG,MAAM,IAAI,QAAQ,GAAG;AAChD;MACP;AACD,aAAO,QAAQ;IAClB;AACD,QAAI,YAAY,OAAO,GAAG,GAAG;AACzB,WAAK,MAAM,IAAI,gBAAgB,IAAI,YAAY;AAC3C,eAAO,SAAS,IAAI,GAAG,MAAM,IAAI,GAAG;AAChC;MACP;AACD,aAAO,QAAQ;IAClB;AACD,QAAI,CAAC,QAAQ,OAAO,QAAQ,UAAU;AAClC,YAAM;AACN,WAAK,QAAQ,KAAK;AACd,YAAI,IAAI,KAAK,KAAK,IAAI,KAAK,EAAE,OAAO,CAAC,IAAI,KAAK,KAAK,IAAI;AACnD,iBAAO;AACX,YAAI,EAAE,QAAQ,QAAQ,CAAC,OAAO,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC;AAC9C,iBAAO;MACd;AACD,aAAO,OAAO,KAAK,GAAG,EAAE,WAAW;IACtC;EACJ;AACD,SAAO,QAAQ,OAAO,QAAQ;AAClC;AChFA,IAAM,0BAA0B,CAAC,OAAO,CAAA,MAAO,OAAO,OAAO,CAAA,GAAI,iBAAiB,IAAI;SCJtE,aAAa,QAAQ,SAAS,eAAa;AACzD,QAAM,OAAO;AAEb,WAAS,YAAY,MAAM,UAAQ;AACjC,UAAM,UAAU,KAAK,QAAQ;AAC7B,QAAI,YAAY,QAAW;AACzB,aAAO;IACR;AAED,WAAO,OAAO,OAAO,EAAE,IAAI,KAAK,EAAE,IAAI,SAAQ,GAAI,KAAK,QAAQ,CAAC;;AAGlE,WAAS,SAAS,WAAW,eAAa;AAExC,UAAM,YAAY,UAAU,OAAO,CAAC;AAEpC,WAAOC,OACL,OAAO,OAAO,EAAE,IAAI,UAAS,GAAI,KAAK,SAAS,CAAC,GAChD,UAAU,MAAM,CAAC,GACjB,eACA,gBAAgB,CAAC;;AAIrB,WAASA,OAAM,MAAM,WAAW,YAAY,eAAa;AACvD,QAAI,CAAC,WAAW;AACd,UAAI,iBAAiB,OAAO,KAAK,IAAI,EAAE,WAAW,GAAG;AAGnD,eAAO,KAAK,EAAE,IAAI,CAAC,CAAC,YAAY,eAAe,KAAK,EAAE,CAAC,CAAC,IAAI,CAAA;MAC7D;AAGD,aAAO,CAAC,CAAC,YAAY,eAAe,IAAI,CAAC;IAC1C;AAED,QAAI,OAAO,KAAK,IAAI,EAAE,WAAW,GAAG;AAClC,aAAO,CAAC,CAAC,YAAY,eAAe,KAAK,EAAE,CAAC,CAAC,EAAE,OAC7C,SAAS,WAAW,aAAa,CAAC;IAErC;AAED,UAAM,UAAU,YAAY,MAAM,UAAU,OAAO,CAAC,CAAC;AAErD,QAAI,YAAY,QAAW;AACzB,aAAO,CAAC,CAAC,YAAY,eAAe,KAAK,EAAE,CAAC,CAAC,EAAE,OAC7C,SAAS,WAAW,aAAa,CAAC;IAErC;AAED,WAAOA,OAAM,SAAS,UAAU,MAAM,CAAC,GAAG,YAAY,gBAAgB,CAAC;;AAGzE,SAAO,SAAS,QAAQ,CAAC;AAC3B;AAIM,SAAU,UAAU,MAAI;AAC5B,SAAO,OAAO,QAAQ,IAAI,EAAE,OAAO,CAAC,KAAK,CAAC,MAAM,OAAO,MAAK;AAC1D,UAAM,cAAc,OAAO,OAAO,MAAM;AAExC,QAAI,IAAI,IAAI,cAAc,EAAE,IAAI,QAAO,IAAK,UAAU,OAAO;AAC7D,WAAO;KACN,CAAA,CAAE;AACP;AAEgB,SAAA,aAAa,MAAM,QAAM;AACvC,SAAO,OAAO,MAAM,EAAE,EAAE,OAAO,CAAC,gBAAgB,SAAQ;AACtD,QAAI,eAAe,IAAI,MAAM,QAAW;AAEtC,qBAAe,IAAI,IAAI,CAAA;IACxB;AACD,WAAO,eAAe,IAAI;KACzB,IAAI;AACT;AAagB,SAAA,oBAAoB,YAAY,CAAA,GAAE;AAChD,QAAM,aAAa,CAAA;AAEnB,MAAI,OAAO,SAAS,MAAM,UAAU;AAClC,WAAO,QAAQ,SAAS,EAAE,QAAQ,CAAC,CAAC,MAAM,IAAI,MAAK;AACjD,UAAI,UAAU;AACd,WAAK,MAAM,EAAE,EAAE,QAAQ,CAAC,SAAQ;AAC9B,YAAI,QAAQ,IAAI,MAAM,QAAW;AAC/B,kBAAQ,IAAI,IAAI,CAAA;QACjB;AACD,kBAAU,QAAQ,IAAI;MACxB,CAAC;AACD,cAAQ,EAAE,IAAI;IAChB,CAAC;EACF;AAED,SAAO,SAAS,QAAQ,KAAG;AACzB,UAAM,UAAU,KAAK,MAAM,KAAK,UAAU,GAAG,CAAC;AAE9C,aAAS,aAAa,YAAY,eAAa;AAC7C,UAAI,eAAe,UAAa,OAAO,UAAU,MAAM,UAAU;AAC/D,eAAO;MACR;AACD,aAAO,OAAO,QAAQ,aAAa,EAAE,OACnC,CAAC,YAAY,CAAC,MAAM,OAAO,MAAK;AAE9B,mBAAW,IAAI,IAAI,aAAa,WAAW,IAAI,GAAG,OAAO;AACzD,eAAO;SAET,UAAU;;AAId,WAAO,aAAa,SAAS,UAAU;EACzC;AACF;AAGgB,SAAA,mBAAmB,KAAK,eAAa;AACnD,MAAI,CAAC,eAAe;AAClB,WAAO;EACR;AACD,SAAO,OAAO,aAAa,MAAM,aAC7B,cAAc,GAAG,IACjB,oBAAoB,aAAa,EAAE,GAAG;AAC5C;AClIA,IAAM,eAAe;EACnB,GAAG;EAAK,GAAG;EAAK,GAAG;EAAK,GAAG;EAAK,GAAG;EACnC,GAAG,EAAE,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,SAAG;EAC3C,GAAG,EAAE,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,SAAG;EAC3C,GAAG,EAAE,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,SAAG;EAC3C,GAAG,EAAE,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,SAAG;EAC3C,GAAG,EAAE,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,SAAG;EAC3C,GAAG,EAAE,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,SAAG;EAC3C,GAAG,EAAE,GAAG,UAAK,GAAG,UAAK,GAAG,SAAG;EAC3B,GAAG,EAAE,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,SAAG;EAC3C,GAAG,EAAE,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,SAAG;EACnC,GAAG,EAAE,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,SAAG;EAC3C,GAAG,EAAE,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,SAAG;EAC3C,GAAG,EAAE,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,SAAG;EAC3C,GAAG,EAAE,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,SAAG;EAC3C,GAAG,EAAE,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,SAAG;EAC3C,GAAG,EAAE,GAAG,gBAAM,GAAG,gBAAM,GAAG,UAAK,GAAG,gBAAM,GAAG,eAAI;;AAGjD,IAAMC,oBAAkB;EACtB,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,UAAK;EACL,UAAK;EACL,UAAK;EACL,UAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;;AAGP,IAAM,aAAa;EACjB,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;;AAEL,IAAMC,YAAU,EAAE,IAAI,UAAK,IAAI,UAAK,IAAI,UAAK,IAAI,UAAK,IAAI,SAAG;AAC7D,IAAM,eAAe,EAAE,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,UAAK,GAAG,SAAG;AAG7D,IAAM,UAAU;EACd,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,KAAK;EACL,KAAK;EACL,GAAG;EACH,IAAI;;EAGJ,KAAK;EACL,KAAK;EACL,KAAK;EACL,IAAI;EACJ,IAAI;;AAIN,IAAM,gBAAgB,OAAO,OAC3B;EACE,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;AACL,GACD,cACAA,SAAO;AAIT,IAAM,gBAAgB;EACpB,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,KAAK;EACL,KAAK;;;EAGL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;;AAGP,IAAM,sBAAsB;EAC1B,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,GAAG;EACH,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,GAAG;;AAIL,SAASC,0BAAqB;AAC5B,QAAM,WAAW,UAAU,YAAY;AAEvC,QAAM,YAAY,CAAC,WAAW,aAAa,UAAU,MAAM;AAG3D,SAAO,QAAQ,UAAU,EAAE,QAAQ,CAAC,CAAC,WAAW,KAAK,MAAK;AACxD,WAAO,QAAQD,SAAO,EAAE,QAAQ,CAAC,CAAC,MAAM,IAAI,MAAK;AAE/C,gBAAU,YAAY,IAAI,EAAE,EAAE,IAAI,QAAQ;IAC5C,CAAC;EACH,CAAC;AAED,SAAO,QAAQD,iBAAe,EAAE,QAAQ,CAAC,CAAC,QAAQ,OAAO,MAAK;AAC5D,cAAU,MAAM,EAAE,EAAE,IAAI;EAC1B,CAAC;AAGD,SAAO,QAAQ,mBAAmB,EAAE,QAAQ,CAAC,CAAC,WAAW,SAAS,MAAK;AACrE,WAAO,QAAQ,YAAY,EAAE,QAAQ,CAAC,CAAC,OAAO,IAAI,MAAK;AACrD,YAAM,UAAU,UAAU,YAAY,KAAK;AAC3C,cAAQ,EAAE,IAAI,YAAY;IAC5B,CAAC;EACH,CAAC;AAGD,GAAC,KAAK,MAAM,IAAI,EAAE,QAAQ,CAAC,UAAS;AAClC,cAAU,KAAK,EAAE,EAAE,IAAI;EACzB,CAAC;AAGD,WAAS,IAAI,KAAK,MAAM,KAAK,UAAU,SAAS,CAAC,CAAC;AAElD,SAAO,QAAQ,OAAO,EAAE,QAAQ,CAAC,CAAC,QAAQ,WAAW,MAAK;AACxD,UAAM,gBAAgB,OAAO,MAAM,GAAG,OAAO,SAAS,CAAC;AACvD,UAAM,OAAO,OAAO,OAAO,OAAO,SAAS,CAAC;AAC5C,UAAM,aAAa,UAAU,aAAa;AAE1C,eAAW,IAAI,IAAI,KAAK,MAAM,KAAK,UAAU,UAAU,WAAW,CAAC,CAAC;EACtE,CAAC;AAED,WAAS,gBAAgB,QAAM;AAC7B,WAAO,CAAC,GAAG,OAAO,QAAQ,OAAO,GAAG,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,OACnD,CAAC,MAAM,CAAC,KAAK,IAAI,MAAO,OAAO,WAAW,IAAI,IAAI,KAAK,OAAO,OAAO,QAAQ,MAAM,GAAG,CAAC,IAAI,MAC3F,CAAA,CAAE;;AAIN,SAAO,QAAQ,aAAa,EAAE,QAAQ,CAAC,CAAC,YAAY,IAAI,MAAK;AAC3D,UAAM,OAAO,CAAC,SAAS,KAAK,OAAO,KAAK,SAAS,CAAC;AAClD,UAAM,gBAAgB,CAAC,UAAU,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC;AAChE,UAAM,QAAQ,IAAI,UAAU;AAC5B,UAAM,WAAW,UAAU,KAAK;AAChC,aAAS,EAAE,IAAI;AAGf,UAAM,aAAa,UAAU,IAAI,cAAc,UAAU,CAAC,EAAE;AAC5D,eAAW,KAAK,UAAU,CAAC,IAAI;AAG/B,oBAAgB,UAAU,EAAE,QAAQ,CAAC,YAAW;AAC9C,OAAC,KAAK,GAAG,EAAE,QAAQ,CAAC,WAAU;AAC5B,cAAM,gBAAgB,UAAU,SAAS,cAAc,OAAO,CAAC;AAC/D,sBAAc,KAAK,OAAO,CAAC,IAAI,UAAU,SAAS,UAAU;MAC9D,CAAC;IACH,CAAC;EACH,CAAC;AAED,SAAO,QAAQ,aAAa,EAAE,QAAQ,CAAC,CAAC,QAAQ,IAAI,MAAK;AACvD,cAAU,MAAM,EAAE,EAAE,IAAI;EAC1B,CAAC;AAGD,WAAS,OAAO,MAAI;AAClB,WAAO,OAAO,QAAQ,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,KAAK,MAAK;AAC3D,UAAI,CAAC,KAAK;AAGR,gBAAQ,GAAG,IAAI,SAAI,KAAK;MACzB,OAAM;AAGL,gBAAQ,GAAG,IAAI,OAAO,KAAK;MAC5B;AACD,aAAO;OACN,CAAA,CAAE;;AAGP,GAAC,GAAG,OAAO,KAAK,UAAU,GAAG,KAAK,KAAK,KAAK,GAAG,EAAE,QAAQ,CAAC,cAAa;AACrE,UAAM,UAAU,SAAS,SAAS;AAClC,YAAQ,SAAS,IAAI,OAAO,OAAO;EACrC,CAAC;AAED,SAAO,SAAS,EAAE;AAElB,SAAO,OAAO,OAAO,KAAK,MAAM,KAAK,UAAU,QAAQ,CAAC,CAAC;AAC3D;AAEA,IAAI,kBAAkB;SAEN,sBAAmB;AACjC,MAAI,mBAAmB,MAAM;AAC3B,sBAAkBE,wBAAqB;EACxC;AACD,SAAO;AACT;AAEO,IAAM,wBAAwB,oBAAoB;EACvD,IAAI;EACJ,IAAI;AACL,CAAA;AAEK,SAAU,aAAa,KAAG;AAE9B,QAAM,UAAU,KAAK,MAAM,KAAK,UAAU,GAAG,CAAC;AAC9C,UAAQ,EAAE,IAAI,EAAE,IAAI,SAAG;AACvB,UAAQ,EAAE,GAAG,IAAI,EAAE,IAAI,SAAG;AAC1B,SAAO;AACT;AChPA,SAAS,gBAAgB,OAAO,IAAE;AAChC,MAAI,QAAQ,IAAI;AAAG,WAAO;AAC1B,SAAO,cAAc,MAAM,uBAAuB,mBAAmB;AACvE;ACJA,SAAS,eAAe,OAAO,IAAE;AAC/B,MAAI,QAAQ,IAAI;AAAG,WAAO;AAC1B,SAAO,KAAK,WAAW,CAAC,MAAM;AAChC;ACHA,SAAS,eAAe,OAAO,IAAE;AAC/B,MAAI,QAAQ,IAAI;AAAG,WAAO;AAC1B,SAAO,KAAK,WAAW,CAAC,MAAM;AAChC;ACEA,SAAS,eAAe,OAAO,IAAE;AAC/B,MAAI,QAAQ,IAAI;AAAG,WAAO;AAC1B,MAAI,eAAe,IAAI;AAAG,WAAO;AACjC,SAAO,cAAc,MAAM,gBAAgB,YAAY;AACzD;ACCA,SAAS,mBAAmB,QAAQ,IAAE;AACpC,QAAM,OAAO,CAAA;AACb,QAAM,MAAM,EAAE,EAAE,QAAQ,CAAC,SAAQ;AAE/B,QAAI,eAAe,IAAI,KAAK,eAAe,IAAI,GAAG;AAChD,WAAK,KAAK,IAAI;IACf,WAAU,eAAe,IAAI,GAAG;AAE/B,YAAM,OAAO,KAAK,WAAW,CAAC,KAAK,iBAAiB;AACpD,YAAM,WAAW,OAAO,aAAa,IAAI;AACzC,WAAK,KAAK,QAAQ;IACnB,OAAM;AAEL,WAAK,KAAK,IAAI;IACf;EACH,CAAC;AACD,SAAO,KAAK,KAAK,EAAE;AACrB;ACpBO,IAAM,wBAAwB,WACnC,CAAC,SAAS,iBAAiB,sBAAqB;AAC9C,MAAI,MAAM,oBAAmB;AAE7B,QAAM,UAAU,aAAa,GAAG,IAAI;AACpC,QAAM,kBAAkB,sBAAsB,GAAG,IAAI;AAErD,MAAI,mBAAmB;AACrB,UAAM,mBAAmB,KAAK,iBAAiB;EAChD;AAED,SAAO;AACT,GACA,MAAM;AAyBF,SAAU,OAAO,QAAQ,IAAI,UAAU,CAAA,GAAI,KAAG;AAClD,MAAIC;AACJ,MAAI,CAAC,KAAK;AACR,IAAAA,UAAS,wBAAwB,OAAO;AACxC,UAAM,sBACJA,QAAO,SACPA,QAAO,iBACPA,QAAO,iBAAiB;EAE3B,OAAM;AACL,IAAAA,UAAS;EACV;AAGD,SAAO,uBAAuB,OAAOA,SAAQ,GAAG,EAC7C,IAAI,CAAC,cAAa;AACjB,UAAM,CAAC,OAAO,KAAK,IAAI,IAAI;AAC3B,QAAI,SAAS,MAAM;AAEjB,aAAO,MAAM,MAAM,KAAK;IACzB;AACD,UAAM,kBAAkBA,QAAO,YAAY,gBAAgB;AAC3D,UAAM,kBAAkBA,QAAO,YAAY,gBAAgB,YACtD,CAAC,GAAG,MAAM,MAAM,OAAO,GAAG,CAAC,EAAE,MAAM,eAAe;AAEvD,WAAO,mBAAmB,CAAC,kBACvB,OACA,mBAAmB,IAAI;EAC7B,CAAC,EACA,KAAK,EAAE;AACZ;AAaM,SAAU,uBAAuB,QAAQ,IAAI,UAAU,CAAA,GAAI,KAAG;AAClE,QAAM,EAAE,SAAS,iBAAiB,kBAAiB,IAAK;AAExD,MAAI,CAAC,KAAK;AACR,UAAM,sBAAsB,SAAS,iBAAiB,iBAAiB;EACxE;AAED,SAAO,aAAa,MAAM,YAAW,GAAI,KAAK,CAAC,OAAO;AACxD;AK/FA,SAAS,aAAa,OAAO,IAAE;AAC7B,MAAI,QAAQ,IAAI;AAAG,WAAO;AAC1B,SAAO,cAAc,KAAK,CAAC,CAAC,OAAO,GAAG,MAAM,cAAc,MAAM,OAAO,GAAG,CAAC;AAC7E;ACWA,SAAS,SAAS,QAAQ,IAAI,SAAO;AACnC,QAAM,YAAY,OAAO,OAAO,MAAM;AACtC,SAAO,QAAQ,KAAK,IAChB,QACA,CAAC,GAAG,KAAK,EAAE,MAAM,CAAC,SAAQ;AAC1B,UAAM,SAAS,aAAa,IAAI;AAChC,WAAO,CAAC,YAAY,SAAS,UAAU,QAAQ,KAAK,IAAI;EAC1D,CAAC;AACL;ACnBA,SAAS,eAAe,OAAO,IAAE;AAC/B,SAAO,cAAc,MAAM,gBAAgB,YAAY;AACzD;ACLA,SAAS,WAAW,OAAO,IAAE;AAC3B,MAAI,QAAQ,IAAI;AAAG,WAAO;AAC1B,SAAO,eAAe,IAAI,KAAK,eAAe,IAAI;AACpD;ACOA,SAAS,OAAO,QAAQ,IAAE;AACxB,MAAI,QAAQ,KAAK;AAAG,WAAO;AAC3B,SAAO,CAAC,GAAG,KAAK,EAAE,MAAM,UAAU;AACpC;ACPA,SAAS,WAAW,QAAQ,IAAE;AAC5B,MAAI,QAAQ,KAAK;AAAG,WAAO;AAC3B,SAAO,CAAC,GAAG,KAAK,EAAE,MAAM,cAAc;AACxC;ACDA,SAAS,WAAW,QAAQ,IAAE;AAC5B,MAAI,QAAQ,KAAK;AAAG,WAAO;AAC3B,SAAO,CAAC,GAAG,KAAK,EAAE,MAAM,cAAc;AACxC;ACZA,SAAS,oBAAoB,OAAO,IAAE;AACpC,MAAI,QAAQ,IAAI;AAAG,WAAO;AAC1B,SAAO,KAAK,WAAW,CAAC,MAAM;AAChC;ACFA,SAAS,YAAY,OAAO,IAAE;AAC5B,SAAO,cAAc,MAAM,aAAa,SAAS,KAAK,oBAAoB,IAAI;AAChF;ACQA,SAAS,QAAQ,QAAQ,IAAE;AACzB,MAAI,QAAQ,KAAK;AAAG,WAAO;AAC3B,SAAO,CAAC,GAAG,KAAK,EAAE,MAAM,WAAW;AACrC;ACAA,SAAS,QAAQ,QAAQ,IAAI,UAAU,EAAE,WAAW,KAAI,GAAE;AACxD,QAAM,QAAQ,CAAC,GAAG,KAAK;AACvB,MAAI,WAAW;AACf,MAAI,CAAC,QAAQ,WAAW;AACtB,eAAW,MAAM,KAAK,OAAO;EAC9B;AACD,UAAQ,MAAM,KAAK,UAAU,KAAK,MAAM,KAAK,UAAU,MAAM,MAAM,KAAK,QAAQ,KAAK,CAAC;AACxF;ACxBA,IAAM,wBAAwB,CAAC,MAAM,UAAU,eAAe,IAAI,KAAK,QAAQ;AAC/E,IAAM,sBAAsB,CAAC,MAAM,UAAU,eAAe,IAAI,KAAK,QAAQ;AAC7E,IAAM,iBAAiB,CAAC,SAAS,CAAC,UAAK,QAAG,EAAE,SAAS,IAAI;AACzD,IAAM,cAAc;EAClB,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;;AAIL,SAAS,mBACP,QAAQ,IACRC,WACA,EAAE,qBAAqB,qBAAoB,IAAK,CAAA,GAAE;AAElD,MAAI,eAAe;AAEnB,SAAO,MACJ,MAAM,EAAE,EACR,OAAO,CAAC,MAAM,MAAM,UAAS;AAE5B,QACE,eAAe,IAAI,KAChB,sBAAsB,MAAM,KAAK,KACjC,eAAe,IAAI,GACtB;AACA,aAAO,KAAK,OAAO,IAAI;IACxB;AAGD,QACE,wBACG,gBACA,oBAAoB,MAAM,KAAK,GAClC;AAEA,YAAM,SAASA,UAAS,YAAY,EAAE,MAAM,EAAE;AAE9C,UACE,eAAe,MAAM,QAAQ,CAAC,CAAC,KAC5B,WAAW,OACX,qBACH;AACA,eAAO,KAAK,OAAO,QAAG;MACvB;AACD,aAAO,KAAK,OAAO,YAAY,MAAM,CAAC;IAEvC;AAED,QAAI,CAAC,eAAe,IAAI,KAAK,eAAe,IAAI,GAAG;AACjD,YAAM,OAAO,KAAK,WAAW,CAAC,KAAK,iBAAiB;AACpD,YAAM,WAAW,OAAO,aAAa,IAAI;AACzC,qBAAe;AACf,aAAO,KAAK,OAAO,QAAQ;IAC5B;AAGD,mBAAe;AACf,WAAO,KAAK,OAAO,IAAI;KACtB,CAAA,CAAE,EACJ,KAAK,EAAE;AACZ;ACjEA,IAAI,mBAAmB;AAIvB,IAAM,eAAe;EACnB,QAAE;EAAQ,QAAE;EAAO,QAAE;EAAO,QAAE;EAAQ,QAAE;EACxC,QAAE;EAAQ,QAAE;EAAO,QAAE;EAAO,QAAE;EAAQ,QAAE;EACxC,QAAE;EAAQ,QAAE;EAAO,QAAE;EAAO,QAAE;EAAQ,QAAE;EACxC,QAAE;EAAQ,QAAE;EAAO,QAAE;EAAO,QAAE;EAAQ,QAAE;EACxC,QAAE;EAAQ,QAAE;EAAO,QAAE;EAAO,QAAE;EAAQ,QAAE;EACxC,QAAE;EAAQ,QAAE;EAAO,QAAE;EAAO,QAAE;EAAQ,QAAE;EACxC,QAAE;EAAQ,QAAE;EAAO,QAAE;EAAO,QAAE;EAAQ,QAAE;EACxC,QAAE;EAAQ,QAAE;EAAO,QAAE;EAAO,QAAE;EAAQ,QAAE;EACxC,QAAE;EAAQ,QAAE;EAAO,QAAE;EACrB,QAAE;EAAQ,QAAE;EAAO,QAAE;EAAO,QAAE;EAC9B,QAAG;EACH,QAAE;EAAQ,QAAE;EAAO,QAAE;EAAO,QAAE;EAAQ,QAAE;EACxC,QAAE;EAAQ,QAAE;EAAO,QAAE;EAAO,QAAE;EAAQ,QAAE;EACxC,QAAE;EAAQ,QAAE;EAAO,QAAE;EAAO,QAAE;EAAQ,QAAE;EACxC,QAAE;EAAQ,QAAE;EAAO,QAAE;EAAO,QAAE;EAAQ,QAAE;EACxC,QAAE;EAAQ,QAAE;EAAO,QAAE;EAAO,QAAE;EAAQ,QAAE;EACxC,cAAG;EAAM,cAAG;EAAM,QAAE;EAAO,cAAG;EAAM,cAAG;;AAIzC,IAAM,kBAAkB;EACtB,UAAK;EACL,UAAK;EACL,UAAK;EACL,UAAK;EACL,UAAK;EACL,UAAK;EACL,UAAK;EACL,UAAK;EACL,UAAK;EACL,UAAK;EACL,UAAK;EACL,UAAK;EACL,UAAK;EACL,UAAK;EACL,UAAK;EACL,UAAK;EACL,UAAK;EACL,UAAK;EACL,UAAK;;AAIP,IAAM,mBAAmB,CAAC,UAAK,UAAK,UAAK,UAAK,UAAK,UAAK,UAAK,QAAG;AAChE,IAAM,UAAU,EAAE,QAAG,MAAM,QAAG,MAAM,QAAG,KAAI;AAC3C,IAAM,gBAAgB,EAAE,QAAG,MAAM,QAAG,KAAI;AACxC,IAAM,cAAc;EAClB,QAAG;EACH,QAAG;EACH,QAAG;EACH,QAAG;EACH,QAAG;;AAEL,IAAM,YAAY;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAEF,IAAM,kBAAkB;EACtB,QAAG;EACH,QAAG;EACH,QAAG;EACH,QAAG;;AAEL,IAAM,aAAa;EACjB,QAAG;EACH,QAAG;EACH,QAAG;EACH,QAAG;EACH,QAAG;EACH,QAAG;EACH,QAAG;EACH,QAAG;EACH,QAAG;;AAKL,IAAM,mBAAmB;EACvB,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;EACH,GAAG;;AAGL,SAAS,uBAAoB;AAC3B,MAAI,oBAAoB,MAAM;AAC5B,uBAAmB,uBAAsB;EAC1C;AACD,SAAO;AACT;AAEM,SAAU,oBAAoB,cAAY;AAC9C,UAAQ,cAAY;IAClB,KAAK,cAAc;AACjB,aAAO,qBAAoB;IAC7B;AACE,aAAO,CAAA;EACV;AACH;AAEA,SAAS,yBAAsB;AAC7B,QAAM,aAAa,UAAU,YAAY;AAEzC,QAAM,YAAY,CAAC,WAAW,aAAa,YAAY,MAAM;AAC7D,QAAM,WAAW,CAAC,QAAQ,oBAAmB;AAC3C,cAAU,MAAM,EAAE,EAAE,IAAI;EAC1B;AAEA,SAAO,QAAQ,eAAe,EAAE,QAAQ,CAAC,CAAC,SAAS,MAAM,MAAK;AAC5D,cAAU,OAAO,EAAE,EAAE,IAAI;EAC3B,CAAC;AAED,GAAC,GAAG,OAAO,QAAQ,OAAO,GAAG,GAAG,OAAO,QAAQ,WAAW,CAAC,EAAE,QAC3D,CAAC,CAAC,MAAM,IAAI,MAAK;AACf,aAAS,MAAM,IAAI;EACrB,CAAC;AAIH,YAAU,QAAQ,CAAC,SAAQ;AACzB,UAAM,kBAAkB,UAAU,IAAI,EAAE,EAAE,EAAE,CAAC;AAC7C,WAAO,QAAQ,OAAO,EAAE,QAAQ,CAAC,CAAC,OAAO,KAAK,MAAK;AACjD,eAAS,OAAO,OAAO,kBAAkB,KAAK;IAChD,CAAC;AAED,WAAO,QAAQ,aAAa,EAAE,QAAQ,CAAC,CAAC,OAAO,KAAK,MAAK;AACvD,eAAS,OAAO,OAAO,kBAAkB,KAAK;IAChD,CAAC;EACH,CAAC;AAED,SAAO,QAAQ,eAAe,EAAE,QAAQ,CAAC,CAAC,MAAM,IAAI,MAAK;AAEvD,WAAO,QAAQ,OAAO,EAAE,QAAQ,CAAC,CAAC,OAAO,KAAK,MAAK;AACjD,eAAS,OAAO,OAAO,OAAO,MAAM,CAAC,CAAC;IACxC,CAAC;AAED,aAAS,GAAG,IAAI,UAAK,GAAG,IAAI,IAAI;AAChC,aAAS,GAAG,IAAI,UAAK,GAAG,IAAI,GAAG;EACjC,CAAC;AAED,aAAW,QAAG,IAAI,WAAW,UAAU;AAEvC,SAAO,QAAQ,UAAU,EAAE,QAAQ,CAAC,CAAC,MAAM,IAAI,MAAK;AAClD,aAAS,MAAM,IAAI;EACrB,CAAC;AAED,mBAAiB,QAAQ,CAAC,SAAQ;AAChC,aAAS,SAAI,IAAI,IAAI,KAAK,UAAU,IAAI,EAAE,EAAE,CAAC,EAAE;EACjD,CAAC;AAaD,SAAO,OAAO,OAAO,KAAK,MAAM,KAAK,UAAU,UAAU,CAAC,CAAC;AAC7D;AAEA,SAAS,WAAW,MAAI;AACtB,SAAO,OAAO,QAAQ,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,KAAK,MAAK;AAC3D,QAAI,CAAC,KAAK;AAER,YAAM,YAAY,MAAM,OAAO,CAAC;AAEhC,cAAQ,GAAG,IAAI,OAAO,KAAK,gBAAgB,EAAE,SAAS,SAAS,IAC3D,iBAAiB,SAAS,IAAI,QAC9B;IACL,OAAM;AAGL,cAAQ,GAAG,IAAI,WAAW,KAAK;IAChC;AACD,WAAO;KACN,CAAA,CAAE;AACP;ACzMO,IAAM,wBAAwB,WACnC,CAAC,cAAc,wBAAuB;AACpC,MAAI,MAAM,oBAAoB,YAAY;AAE1C,MAAI,qBAAqB;AACvB,UAAM,mBAAmB,KAAK,mBAAmB;EAClD;AAED,SAAO;AACT,GACA,MAAM;AAmBF,SAAU,SAAS,QAAQ,IAAI,UAAU,CAAA,GAAI,KAAG;AACpD,QAAMC,UAAS,wBAAwB,OAAO;AAE9C,MAAI,CAAC,KAAK;AACR,UAAM,sBACJA,QAAO,cACPA,QAAO,mBAAmB;EAE7B;AAGD,SAAO,gBAAgB,OAAOA,SAAQ,GAAG,EACtC,IAAI,CAAC,gBAAe;AACnB,UAAM,CAAC,OAAO,KAAK,MAAM,IAAI;AAC7B,UAAM,gBAAgBA,QAAO,kBAAkB,WAAW,MAAM,MAAM,OAAO,GAAG,CAAC;AACjF,WAAO,gBAAgB,OAAO,YAAW,IAAK;EAChD,CAAC,EACA,KAAK,EAAE;AACZ;AAEA,SAAS,gBAAgB,OAAO,SAAS,KAAG;AAC1C,MAAI,CAAC,KAAK;AACR,UAAM,sBACJ,QAAQ,cACR,QAAQ,mBAAmB;EAE9B;AAED,QAAMA,UAAS,OAAO,OAAO,CAAA,GAAI,EAAE,qBAAqB,KAAI,GAAI,OAAO;AAEvE,SAAO,aACL,mBAAmB,OAAO,UAAUA,OAAM,GAC1C,KACA,CAAC,QAAQ,OAAO;AAEpB;ACjEA,SAAS,yBAAyB,OAAO,IAAE;AACzC,MAAI,QAAQ,IAAI;AAAG,WAAO;AAC1B,SAAO,sBAAsB,KAAK,CAAC,CAAC,OAAO,GAAG,MAAM,cAAc,MAAM,OAAO,GAAG,CAAC;AACrF;ACWA,SAAS,WAAW,QAAQ,IAAI,UAAU,CAAA,GAAE;AAC1C,QAAMA,UAAS,wBAAwB,OAAO;AAC9C,MAAIA,QAAO,YAAY;AACrB,WAAO,mBAAmB,OAAO,UAAUA,OAAM;EAClD;AAED,MAAI,QAAQ,OAAO,EAAE,WAAW,KAAI,CAAE,GAAG;AACvC,UAAM,oBAAoB,mBAAmB,OAAO,UAAUA,OAAM;AACpE,WAAO,OAAO,kBAAkB,YAAW,GAAIA,OAAM;EACtD;AAED,MAAI,SAAS,KAAK,KAAK,yBAAyB,KAAK,GAAG;AACtD,WAAO,OAAO,MAAM,YAAW,GAAIA,OAAM;EAC1C;AAED,SAAO,mBAAmB,OAAO,UAAUA,OAAM;AACnD;ACjBA,SAAS,WAAW,QAAQ,IAAI,UAAU,CAAA,GAAE;AAC1C,QAAM,gBAAgB,wBAAwB,OAAO;AACrD,MAAI,cAAc,YAAY;AAC5B,WAAO,mBAAmB,KAAK;EAChC;AAED,MAAI,QAAQ,KAAK,KAAK,SAAS,KAAK,KAAK,yBAAyB,KAAK,GAAG;AACxE,UAAM,WAAW,OAAO,MAAM,YAAW,GAAI,aAAa;AAC1D,WAAO,mBAAmB,QAAQ;EACnC;AAED,SAAO,mBAAmB,KAAK;AACjC;;;AIpBO,IAAM,WAAW,CAAC,MAAM,SAAS;AACpC,MAAI;AACJ,QAAM,YAAY,IAAI,SAAS;AAC3B,UAAM,QAAQ,MAAM;AAChB,mBAAa,OAAO;AACpB,WAAK,MAAM,QAAM,IAAI;AAAA,IACzB;AACA,iBAAa,OAAO;AACpB,cAAU,WAAW,OAAO,IAAI;AAAA,EACpC;AACA,YAAU,SAAS,MAAM,aAAa,OAAO;AAC7C,SAAO;AACX;AAOO,IAAM,sBAAsB,CAAC,QAAQ,CAAC,MAAM;AAC/C,QAAM,WAAW,oBAAI,IAAI;AACzB,QAAM,OAAO,OAAO,EAAE,QAAQ,UAAQ;AAClC,UAAM,YAAY,OAAO,IAAI,EAAE,YAAY;AAC3C,aAAS,IAAI,SAAS;AAEtB,QAAa,OAAO,SAAS,GAAG;AAC5B,eAAS,IAAa,SAAS,SAAS,CAAC;AAAA,IAC7C;AACA,QAAa,SAAS,SAAS,GAAG;AAC9B,eAAS,IAAa,WAAW,SAAS,CAAC;AAC3C,eAAS,IAAa,WAAW,SAAS,CAAC;AAAA,IAC/C;AAAA,EACJ,CAAC;AACD,SAAO,MAAM,KAAK,QAAQ,EAAE,KAAK,GAAG;AACxC;;;ACvCA,SAAS,QAAQ,OAAO;AACtB,SAAO,CAAC,MAAM,UACV,OAAO,KAAK,MAAM,mBAClB,MAAM,QAAQ,KAAK;AACzB;AAGA,IAAM,WAAW,IAAI;AACrB,SAAS,aAAa,OAAO;AAE3B,MAAI,OAAO,SAAS,UAAU;AAC5B,WAAO;AAAA,EACT;AACA,MAAI,SAAS,QAAQ;AACrB,SAAO,UAAU,OAAO,IAAI,SAAS,CAAC,WAAW,OAAO;AAC1D;AAEA,SAAS,SAAS,OAAO;AACvB,SAAO,SAAS,OAAO,KAAK,aAAa,KAAK;AAChD;AAEA,SAAS,SAAS,OAAO;AACvB,SAAO,OAAO,UAAU;AAC1B;AAEA,SAAS,SAAS,OAAO;AACvB,SAAO,OAAO,UAAU;AAC1B;AAGA,SAAS,UAAU,OAAO;AACxB,SACE,UAAU,QACV,UAAU,SACT,aAAa,KAAK,KAAK,OAAO,KAAK,KAAK;AAE7C;AAEA,SAAS,SAAS,OAAO;AACvB,SAAO,OAAO,UAAU;AAC1B;AAGA,SAAS,aAAa,OAAO;AAC3B,SAAO,SAAS,KAAK,KAAK,UAAU;AACtC;AAEA,SAAS,UAAU,OAAO;AACxB,SAAO,UAAU,UAAa,UAAU;AAC1C;AAEA,SAAS,QAAQ,OAAO;AACtB,SAAO,CAAC,MAAM,KAAK,EAAE;AACvB;AAIA,SAAS,OAAO,OAAO;AACrB,SAAO,SAAS,OACZ,UAAU,SACR,uBACA,kBACF,OAAO,UAAU,SAAS,KAAK,KAAK;AAC1C;AAIA,IAAM,uBAAuB;AAE7B,IAAM,uCAAuC,CAAC,QAC5C,yBAAyB,GAAG;AAE9B,IAAM,2BAA2B,CAAC,QAChC,iCAAiC,GAAG;AAEtC,IAAM,uBAAuB,CAAC,SAAS,WAAW,IAAI;AAEtD,IAAM,2BAA2B,CAAC,QAChC,6BAA6B,GAAG;AAElC,IAAM,SAAS,OAAO,UAAU;AAEhC,IAAM,WAAN,MAAe;AAAA,EACb,YAAY,MAAM;AAChB,SAAK,QAAQ,CAAC;AACd,SAAK,UAAU,CAAC;AAEhB,QAAI,cAAc;AAElB,SAAK,QAAQ,CAAC,QAAQ;AACpB,UAAI,MAAM,UAAU,GAAG;AAEvB,WAAK,MAAM,KAAK,GAAG;AACnB,WAAK,QAAQ,IAAI,EAAE,IAAI;AAEvB,qBAAe,IAAI;AAAA,IACrB,CAAC;AAGD,SAAK,MAAM,QAAQ,CAAC,QAAQ;AAC1B,UAAI,UAAU;AAAA,IAChB,CAAC;AAAA,EACH;AAAA,EACA,IAAI,OAAO;AACT,WAAO,KAAK,QAAQ,KAAK;AAAA,EAC3B;AAAA,EACA,OAAO;AACL,WAAO,KAAK;AAAA,EACd;AAAA,EACA,SAAS;AACP,WAAO,KAAK,UAAU,KAAK,KAAK;AAAA,EAClC;AACF;AAEA,SAAS,UAAU,KAAK;AACtB,MAAI,OAAO;AACX,MAAI,KAAK;AACT,MAAI,MAAM;AACV,MAAI,SAAS;AACb,MAAI,QAAQ;AAEZ,MAAI,SAAS,GAAG,KAAK,QAAQ,GAAG,GAAG;AACjC,UAAM;AACN,WAAO,cAAc,GAAG;AACxB,SAAK,YAAY,GAAG;AAAA,EACtB,OAAO;AACL,QAAI,CAAC,OAAO,KAAK,KAAK,MAAM,GAAG;AAC7B,YAAM,IAAI,MAAM,qBAAqB,MAAM,CAAC;AAAA,IAC9C;AAEA,UAAM,OAAO,IAAI;AACjB,UAAM;AAEN,QAAI,OAAO,KAAK,KAAK,QAAQ,GAAG;AAC9B,eAAS,IAAI;AAEb,UAAI,UAAU,GAAG;AACf,cAAM,IAAI,MAAM,yBAAyB,IAAI,CAAC;AAAA,MAChD;AAAA,IACF;AAEA,WAAO,cAAc,IAAI;AACzB,SAAK,YAAY,IAAI;AACrB,YAAQ,IAAI;AAAA,EACd;AAEA,SAAO,EAAE,MAAM,IAAI,QAAQ,KAAK,MAAM;AACxC;AAEA,SAAS,cAAc,KAAK;AAC1B,SAAO,QAAQ,GAAG,IAAI,MAAM,IAAI,MAAM,GAAG;AAC3C;AAEA,SAAS,YAAY,KAAK;AACxB,SAAO,QAAQ,GAAG,IAAI,IAAI,KAAK,GAAG,IAAI;AACxC;AAEA,SAAS,IAAI,KAAK,MAAM;AACtB,MAAI,OAAO,CAAC;AACZ,MAAI,MAAM;AAEV,QAAM,UAAU,CAACC,MAAKC,OAAM,UAAU;AACpC,QAAI,CAAC,UAAUD,IAAG,GAAG;AACnB;AAAA,IACF;AACA,QAAI,CAACC,MAAK,KAAK,GAAG;AAEhB,WAAK,KAAKD,IAAG;AAAA,IACf,OAAO;AACL,UAAI,MAAMC,MAAK,KAAK;AAEpB,YAAM,QAAQD,KAAI,GAAG;AAErB,UAAI,CAAC,UAAU,KAAK,GAAG;AACrB;AAAA,MACF;AAIA,UACE,UAAUC,MAAK,SAAS,MACvB,SAAS,KAAK,KAAK,SAAS,KAAK,KAAK,UAAU,KAAK,IACtD;AACA,aAAK,KAAK,SAAS,KAAK,CAAC;AAAA,MAC3B,WAAW,QAAQ,KAAK,GAAG;AACzB,cAAM;AAEN,iBAAS,IAAI,GAAG,MAAM,MAAM,QAAQ,IAAI,KAAK,KAAK,GAAG;AACnD,kBAAQ,MAAM,CAAC,GAAGA,OAAM,QAAQ,CAAC;AAAA,QACnC;AAAA,MACF,WAAWA,MAAK,QAAQ;AAEtB,gBAAQ,OAAOA,OAAM,QAAQ,CAAC;AAAA,MAChC;AAAA,IACF;AAAA,EACF;AAGA,UAAQ,KAAK,SAAS,IAAI,IAAI,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC;AAEvD,SAAO,MAAM,OAAO,KAAK,CAAC;AAC5B;AAEA,IAAM,eAAe;AAAA;AAAA;AAAA;AAAA,EAInB,gBAAgB;AAAA;AAAA;AAAA,EAGhB,gBAAgB;AAAA;AAAA,EAEhB,oBAAoB;AACtB;AAEA,IAAM,eAAe;AAAA;AAAA;AAAA,EAGnB,iBAAiB;AAAA;AAAA,EAEjB,kBAAkB;AAAA;AAAA,EAElB,cAAc;AAAA;AAAA,EAEd,MAAM,CAAC;AAAA;AAAA,EAEP,YAAY;AAAA;AAAA,EAEZ,QAAQ,CAAC,GAAG,MACV,EAAE,UAAU,EAAE,QAAS,EAAE,MAAM,EAAE,MAAM,KAAK,IAAK,EAAE,QAAQ,EAAE,QAAQ,KAAK;AAC9E;AAEA,IAAM,eAAe;AAAA;AAAA,EAEnB,UAAU;AAAA;AAAA;AAAA,EAGV,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMX,UAAU;AACZ;AAEA,IAAM,kBAAkB;AAAA;AAAA,EAEtB,mBAAmB;AAAA;AAAA;AAAA,EAGnB,OAAO;AAAA;AAAA;AAAA;AAAA,EAIP,gBAAgB;AAAA;AAAA;AAAA;AAAA,EAIhB,iBAAiB;AAAA;AAAA,EAEjB,iBAAiB;AACnB;AAEA,IAAI,SAAS;AAAA,EACX,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AACL;AAEA,IAAM,QAAQ;AAId,SAAS,KAAK,SAAS,GAAG,WAAW,GAAG;AACtC,QAAM,QAAQ,oBAAI,IAAI;AACtB,QAAM,IAAI,KAAK,IAAI,IAAI,QAAQ;AAE/B,SAAO;AAAA,IACL,IAAI,OAAO;AACT,YAAM,YAAY,MAAM,MAAM,KAAK,EAAE;AAErC,UAAI,MAAM,IAAI,SAAS,GAAG;AACxB,eAAO,MAAM,IAAI,SAAS;AAAA,MAC5B;AAGA,YAAMC,QAAO,IAAI,KAAK,IAAI,WAAW,MAAM,MAAM;AAGjD,YAAM,IAAI,WAAW,KAAK,MAAMA,QAAO,CAAC,IAAI,CAAC;AAE7C,YAAM,IAAI,WAAW,CAAC;AAEtB,aAAO;AAAA,IACT;AAAA,IACA,QAAQ;AACN,YAAM,MAAM;AAAA,IACd;AAAA,EACF;AACF;AAEA,IAAM,YAAN,MAAgB;AAAA,EACd,YAAY;AAAA,IACV,QAAQ,OAAO;AAAA,IACf,kBAAkB,OAAO;AAAA,EAC3B,IAAI,CAAC,GAAG;AACN,SAAK,OAAO,KAAK,iBAAiB,CAAC;AACnC,SAAK,QAAQ;AACb,SAAK,YAAY;AAEjB,SAAK,gBAAgB;AAAA,EACvB;AAAA,EACA,WAAW,OAAO,CAAC,GAAG;AACpB,SAAK,OAAO;AAAA,EACd;AAAA,EACA,gBAAgB,UAAU,CAAC,GAAG;AAC5B,SAAK,UAAU;AAAA,EACjB;AAAA,EACA,QAAQ,OAAO,CAAC,GAAG;AACjB,SAAK,OAAO;AACZ,SAAK,WAAW,CAAC;AACjB,SAAK,QAAQ,CAAC,KAAK,QAAQ;AACzB,WAAK,SAAS,IAAI,EAAE,IAAI;AAAA,IAC1B,CAAC;AAAA,EACH;AAAA,EACA,SAAS;AACP,QAAI,KAAK,aAAa,CAAC,KAAK,KAAK,QAAQ;AACvC;AAAA,IACF;AAEA,SAAK,YAAY;AAGjB,QAAI,SAAS,KAAK,KAAK,CAAC,CAAC,GAAG;AAC1B,WAAK,KAAK,QAAQ,CAAC,KAAK,aAAa;AACnC,aAAK,WAAW,KAAK,QAAQ;AAAA,MAC/B,CAAC;AAAA,IACH,OAAO;AAEL,WAAK,KAAK,QAAQ,CAAC,KAAK,aAAa;AACnC,aAAK,WAAW,KAAK,QAAQ;AAAA,MAC/B,CAAC;AAAA,IACH;AAEA,SAAK,KAAK,MAAM;AAAA,EAClB;AAAA;AAAA,EAEA,IAAI,KAAK;AACP,UAAM,MAAM,KAAK,KAAK;AAEtB,QAAI,SAAS,GAAG,GAAG;AACjB,WAAK,WAAW,KAAK,GAAG;AAAA,IAC1B,OAAO;AACL,WAAK,WAAW,KAAK,GAAG;AAAA,IAC1B;AAAA,EACF;AAAA;AAAA,EAEA,SAAS,KAAK;AACZ,SAAK,QAAQ,OAAO,KAAK,CAAC;AAG1B,aAAS,IAAI,KAAK,MAAM,KAAK,KAAK,GAAG,IAAI,KAAK,KAAK,GAAG;AACpD,WAAK,QAAQ,CAAC,EAAE,KAAK;AAAA,IACvB;AAAA,EACF;AAAA,EACA,uBAAuB,MAAM,OAAO;AAClC,WAAO,KAAK,KAAK,SAAS,KAAK,CAAC;AAAA,EAClC;AAAA,EACA,OAAO;AACL,WAAO,KAAK,QAAQ;AAAA,EACtB;AAAA,EACA,WAAW,KAAK,UAAU;AACxB,QAAI,CAAC,UAAU,GAAG,KAAK,QAAQ,GAAG,GAAG;AACnC;AAAA,IACF;AAEA,QAAI,SAAS;AAAA,MACX,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG,KAAK,KAAK,IAAI,GAAG;AAAA,IACtB;AAEA,SAAK,QAAQ,KAAK,MAAM;AAAA,EAC1B;AAAA,EACA,WAAW,KAAK,UAAU;AACxB,QAAI,SAAS,EAAE,GAAG,UAAU,GAAG,CAAC,EAAE;AAGlC,SAAK,KAAK,QAAQ,CAAC,KAAK,aAAa;AACnC,UAAI,QAAQ,IAAI,QAAQ,IAAI,MAAM,GAAG,IAAI,KAAK,MAAM,KAAK,IAAI,IAAI;AAEjE,UAAI,CAAC,UAAU,KAAK,GAAG;AACrB;AAAA,MACF;AAEA,UAAI,QAAQ,KAAK,GAAG;AAClB,YAAI,aAAa,CAAC;AAClB,cAAM,QAAQ,CAAC,EAAE,gBAAgB,IAAI,MAAM,CAAC;AAE5C,eAAO,MAAM,QAAQ;AACnB,gBAAM,EAAE,gBAAgB,OAAAC,OAAM,IAAI,MAAM,IAAI;AAE5C,cAAI,CAAC,UAAUA,MAAK,GAAG;AACrB;AAAA,UACF;AAEA,cAAI,SAASA,MAAK,KAAK,CAAC,QAAQA,MAAK,GAAG;AACtC,gBAAI,YAAY;AAAA,cACd,GAAGA;AAAA,cACH,GAAG;AAAA,cACH,GAAG,KAAK,KAAK,IAAIA,MAAK;AAAA,YACxB;AAEA,uBAAW,KAAK,SAAS;AAAA,UAC3B,WAAW,QAAQA,MAAK,GAAG;AACzB,YAAAA,OAAM,QAAQ,CAAC,MAAM,MAAM;AACzB,oBAAM,KAAK;AAAA,gBACT,gBAAgB;AAAA,gBAChB,OAAO;AAAA,cACT,CAAC;AAAA,YACH,CAAC;AAAA,UACH,MAAO;AAAA,QACT;AACA,eAAO,EAAE,QAAQ,IAAI;AAAA,MACvB,WAAW,SAAS,KAAK,KAAK,CAAC,QAAQ,KAAK,GAAG;AAC7C,YAAI,YAAY;AAAA,UACd,GAAG;AAAA,UACH,GAAG,KAAK,KAAK,IAAI,KAAK;AAAA,QACxB;AAEA,eAAO,EAAE,QAAQ,IAAI;AAAA,MACvB;AAAA,IACF,CAAC;AAED,SAAK,QAAQ,KAAK,MAAM;AAAA,EAC1B;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,MAAM,KAAK;AAAA,MACX,SAAS,KAAK;AAAA,IAChB;AAAA,EACF;AACF;AAEA,SAAS,YACP,MACA,MACA,EAAE,QAAQ,OAAO,OAAO,kBAAkB,OAAO,gBAAgB,IAAI,CAAC,GACtE;AACA,QAAM,UAAU,IAAI,UAAU,EAAE,OAAO,gBAAgB,CAAC;AACxD,UAAQ,QAAQ,KAAK,IAAI,SAAS,CAAC;AACnC,UAAQ,WAAW,IAAI;AACvB,UAAQ,OAAO;AACf,SAAO;AACT;AAEA,SAAS,WACP,MACA,EAAE,QAAQ,OAAO,OAAO,kBAAkB,OAAO,gBAAgB,IAAI,CAAC,GACtE;AACA,QAAM,EAAE,MAAM,QAAQ,IAAI;AAC1B,QAAM,UAAU,IAAI,UAAU,EAAE,OAAO,gBAAgB,CAAC;AACxD,UAAQ,QAAQ,IAAI;AACpB,UAAQ,gBAAgB,OAAO;AAC/B,SAAO;AACT;AAEA,SAAS,eACP,SACA;AAAA,EACE,SAAS;AAAA,EACT,kBAAkB;AAAA,EAClB,mBAAmB;AAAA,EACnB,WAAW,OAAO;AAAA,EAClB,iBAAiB,OAAO;AAC1B,IAAI,CAAC,GACL;AACA,QAAM,WAAW,SAAS,QAAQ;AAElC,MAAI,gBAAgB;AAClB,WAAO;AAAA,EACT;AAEA,QAAM,YAAY,KAAK,IAAI,mBAAmB,eAAe;AAE7D,MAAI,CAAC,UAAU;AAEb,WAAO,YAAY,IAAM;AAAA,EAC3B;AAEA,SAAO,WAAW,YAAY;AAChC;AAEA,SAAS,qBACP,YAAY,CAAC,GACb,qBAAqB,OAAO,oBAC5B;AACA,MAAI,UAAU,CAAC;AACf,MAAI,QAAQ;AACZ,MAAI,MAAM;AACV,MAAI,IAAI;AAER,WAAS,MAAM,UAAU,QAAQ,IAAI,KAAK,KAAK,GAAG;AAChD,QAAI,QAAQ,UAAU,CAAC;AACvB,QAAI,SAAS,UAAU,IAAI;AACzB,cAAQ;AAAA,IACV,WAAW,CAAC,SAAS,UAAU,IAAI;AACjC,YAAM,IAAI;AACV,UAAI,MAAM,QAAQ,KAAK,oBAAoB;AACzC,gBAAQ,KAAK,CAAC,OAAO,GAAG,CAAC;AAAA,MAC3B;AACA,cAAQ;AAAA,IACV;AAAA,EACF;AAGA,MAAI,UAAU,IAAI,CAAC,KAAK,IAAI,SAAS,oBAAoB;AACvD,YAAQ,KAAK,CAAC,OAAO,IAAI,CAAC,CAAC;AAAA,EAC7B;AAEA,SAAO;AACT;AAGA,IAAM,WAAW;AAEjB,SAAS,OACP,MACA,SACA,iBACA;AAAA,EACE,WAAW,OAAO;AAAA,EAClB,WAAW,OAAO;AAAA,EAClB,YAAY,OAAO;AAAA,EACnB,iBAAiB,OAAO;AAAA,EACxB,qBAAqB,OAAO;AAAA,EAC5B,iBAAiB,OAAO;AAAA,EACxB,iBAAiB,OAAO;AAC1B,IAAI,CAAC,GACL;AACA,MAAI,QAAQ,SAAS,UAAU;AAC7B,UAAM,IAAI,MAAM,yBAAyB,QAAQ,CAAC;AAAA,EACpD;AAEA,QAAM,aAAa,QAAQ;AAE3B,QAAM,UAAU,KAAK;AAErB,QAAM,mBAAmB,KAAK,IAAI,GAAG,KAAK,IAAI,UAAU,OAAO,CAAC;AAEhE,MAAI,mBAAmB;AAEvB,MAAI,eAAe;AAInB,QAAM,iBAAiB,qBAAqB,KAAK;AAEjD,QAAM,YAAY,iBAAiB,MAAM,OAAO,IAAI,CAAC;AAErD,MAAI;AAGJ,UAAQ,QAAQ,KAAK,QAAQ,SAAS,YAAY,KAAK,IAAI;AACzD,QAAI,QAAQ,eAAe,SAAS;AAAA,MAClC,iBAAiB;AAAA,MACjB;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAED,uBAAmB,KAAK,IAAI,OAAO,gBAAgB;AACnD,mBAAe,QAAQ;AAEvB,QAAI,gBAAgB;AAClB,UAAI,IAAI;AACR,aAAO,IAAI,YAAY;AACrB,kBAAU,QAAQ,CAAC,IAAI;AACvB,aAAK;AAAA,MACP;AAAA,IACF;AAAA,EACF;AAGA,iBAAe;AAEf,MAAI,aAAa,CAAC;AAClB,MAAI,aAAa;AACjB,MAAI,SAAS,aAAa;AAE1B,QAAM,OAAO,KAAM,aAAa;AAEhC,WAAS,IAAI,GAAG,IAAI,YAAY,KAAK,GAAG;AAItC,QAAI,SAAS;AACb,QAAI,SAAS;AAEb,WAAO,SAAS,QAAQ;AACtB,YAAMC,SAAQ,eAAe,SAAS;AAAA,QACpC,QAAQ;AAAA,QACR,iBAAiB,mBAAmB;AAAA,QACpC;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAED,UAAIA,UAAS,kBAAkB;AAC7B,iBAAS;AAAA,MACX,OAAO;AACL,iBAAS;AAAA,MACX;AAEA,eAAS,KAAK,OAAO,SAAS,UAAU,IAAI,MAAM;AAAA,IACpD;AAGA,aAAS;AAET,QAAI,QAAQ,KAAK,IAAI,GAAG,mBAAmB,SAAS,CAAC;AACrD,QAAI,SAAS,iBACT,UACA,KAAK,IAAI,mBAAmB,QAAQ,OAAO,IAAI;AAGnD,QAAI,SAAS,MAAM,SAAS,CAAC;AAE7B,WAAO,SAAS,CAAC,KAAK,KAAK,KAAK;AAEhC,aAAS,IAAI,QAAQ,KAAK,OAAO,KAAK,GAAG;AACvC,UAAI,kBAAkB,IAAI;AAC1B,UAAI,YAAY,gBAAgB,KAAK,OAAO,eAAe,CAAC;AAE5D,UAAI,gBAAgB;AAElB,kBAAU,eAAe,IAAI,CAAC,CAAC,CAAC;AAAA,MAClC;AAGA,aAAO,CAAC,KAAM,OAAO,IAAI,CAAC,KAAK,IAAK,KAAK;AAGzC,UAAI,GAAG;AACL,eAAO,CAAC,MACJ,WAAW,IAAI,CAAC,IAAI,WAAW,CAAC,MAAM,IAAK,IAAI,WAAW,IAAI,CAAC;AAAA,MACrE;AAEA,UAAI,OAAO,CAAC,IAAI,MAAM;AACpB,qBAAa,eAAe,SAAS;AAAA,UACnC,QAAQ;AAAA,UACR;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAID,YAAI,cAAc,kBAAkB;AAElC,6BAAmB;AACnB,yBAAe;AAGf,cAAI,gBAAgB,kBAAkB;AACpC;AAAA,UACF;AAGA,kBAAQ,KAAK,IAAI,GAAG,IAAI,mBAAmB,YAAY;AAAA,QACzD;AAAA,MACF;AAAA,IACF;AAGA,UAAM,QAAQ,eAAe,SAAS;AAAA,MACpC,QAAQ,IAAI;AAAA,MACZ,iBAAiB;AAAA,MACjB;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAED,QAAI,QAAQ,kBAAkB;AAC5B;AAAA,IACF;AAEA,iBAAa;AAAA,EACf;AAEA,QAAM,SAAS;AAAA,IACb,SAAS,gBAAgB;AAAA;AAAA,IAEzB,OAAO,KAAK,IAAI,MAAO,UAAU;AAAA,EACnC;AAEA,MAAI,gBAAgB;AAClB,UAAM,UAAU,qBAAqB,WAAW,kBAAkB;AAClE,QAAI,CAAC,QAAQ,QAAQ;AACnB,aAAO,UAAU;AAAA,IACnB,WAAW,gBAAgB;AACzB,aAAO,UAAU;AAAA,IACnB;AAAA,EACF;AAEA,SAAO;AACT;AAEA,SAAS,sBAAsB,SAAS;AACtC,MAAI,OAAO,CAAC;AAEZ,WAAS,IAAI,GAAG,MAAM,QAAQ,QAAQ,IAAI,KAAK,KAAK,GAAG;AACrD,UAAM,OAAO,QAAQ,OAAO,CAAC;AAC7B,SAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAM,KAAM,MAAM,IAAI;AAAA,EACpD;AAEA,SAAO;AACT;AAEA,IAAM,kBAAkB,OAAO,UAAU,YAClC,CAAC,QAAQ,IAAI,UAAU,KAAK,EAAE,QAAQ,0kEAA0kE,EAAE,IAClnE,CAAC,QAAQ;AAEhB,IAAM,cAAN,MAAkB;AAAA,EAChB,YACE,SACA;AAAA,IACE,WAAW,OAAO;AAAA,IAClB,YAAY,OAAO;AAAA,IACnB,WAAW,OAAO;AAAA,IAClB,iBAAiB,OAAO;AAAA,IACxB,iBAAiB,OAAO;AAAA,IACxB,qBAAqB,OAAO;AAAA,IAC5B,kBAAkB,OAAO;AAAA,IACzB,mBAAmB,OAAO;AAAA,IAC1B,iBAAiB,OAAO;AAAA,EAC1B,IAAI,CAAC,GACL;AACA,SAAK,UAAU;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,cAAU,kBAAkB,UAAU,QAAQ,YAAY;AAC1D,cAAU,mBAAmB,gBAAgB,OAAO,IAAI;AACxD,SAAK,UAAU;AAEf,SAAK,SAAS,CAAC;AAEf,QAAI,CAAC,KAAK,QAAQ,QAAQ;AACxB;AAAA,IACF;AAEA,UAAM,WAAW,CAACC,UAAS,eAAe;AACxC,WAAK,OAAO,KAAK;AAAA,QACf,SAAAA;AAAA,QACA,UAAU,sBAAsBA,QAAO;AAAA,QACvC;AAAA,MACF,CAAC;AAAA,IACH;AAEA,UAAM,MAAM,KAAK,QAAQ;AAEzB,QAAI,MAAM,UAAU;AAClB,UAAI,IAAI;AACR,YAAM,YAAY,MAAM;AACxB,YAAM,MAAM,MAAM;AAElB,aAAO,IAAI,KAAK;AACd,iBAAS,KAAK,QAAQ,OAAO,GAAG,QAAQ,GAAG,CAAC;AAC5C,aAAK;AAAA,MACP;AAEA,UAAI,WAAW;AACb,cAAM,aAAa,MAAM;AACzB,iBAAS,KAAK,QAAQ,OAAO,UAAU,GAAG,UAAU;AAAA,MACtD;AAAA,IACF,OAAO;AACL,eAAS,KAAK,SAAS,CAAC;AAAA,IAC1B;AAAA,EACF;AAAA,EAEA,SAAS,MAAM;AACb,UAAM,EAAE,iBAAiB,kBAAkB,eAAe,IAAI,KAAK;AAEnE,WAAO,kBAAkB,OAAO,KAAK,YAAY;AACjD,WAAO,mBAAmB,gBAAgB,IAAI,IAAI;AAGlD,QAAI,KAAK,YAAY,MAAM;AACzB,UAAIC,UAAS;AAAA,QACX,SAAS;AAAA,QACT,OAAO;AAAA,MACT;AAEA,UAAI,gBAAgB;AAClB,QAAAA,QAAO,UAAU,CAAC,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC;AAAA,MACxC;AAEA,aAAOA;AAAA,IACT;AAGA,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,KAAK;AAET,QAAI,aAAa,CAAC;AAClB,QAAI,aAAa;AACjB,QAAI,aAAa;AAEjB,SAAK,OAAO,QAAQ,CAAC,EAAE,SAAS,UAAU,WAAW,MAAM;AACzD,YAAM,EAAE,SAAS,OAAO,QAAQ,IAAI,OAAO,MAAM,SAAS,UAAU;AAAA,QAClE,UAAU,WAAW;AAAA,QACrB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAED,UAAI,SAAS;AACX,qBAAa;AAAA,MACf;AAEA,oBAAc;AAEd,UAAI,WAAW,SAAS;AACtB,qBAAa,CAAC,GAAG,YAAY,GAAG,OAAO;AAAA,MACzC;AAAA,IACF,CAAC;AAED,QAAI,SAAS;AAAA,MACX,SAAS;AAAA,MACT,OAAO,aAAa,aAAa,KAAK,OAAO,SAAS;AAAA,IACxD;AAEA,QAAI,cAAc,gBAAgB;AAChC,aAAO,UAAU;AAAA,IACnB;AAEA,WAAO;AAAA,EACT;AACF;AAEA,IAAM,YAAN,MAAgB;AAAA,EACd,YAAY,SAAS;AACnB,SAAK,UAAU;AAAA,EACjB;AAAA,EACA,OAAO,aAAa,SAAS;AAC3B,WAAO,SAAS,SAAS,KAAK,UAAU;AAAA,EAC1C;AAAA,EACA,OAAO,cAAc,SAAS;AAC5B,WAAO,SAAS,SAAS,KAAK,WAAW;AAAA,EAC3C;AAAA,EACA,SAAiB;AAAA,EAAC;AACpB;AAEA,SAAS,SAAS,SAAS,KAAK;AAC9B,QAAM,UAAU,QAAQ,MAAM,GAAG;AACjC,SAAO,UAAU,QAAQ,CAAC,IAAI;AAChC;AAIA,IAAM,aAAN,cAAyB,UAAU;AAAA,EACjC,YAAY,SAAS;AACnB,UAAM,OAAO;AAAA,EACf;AAAA,EACA,WAAW,OAAO;AAChB,WAAO;AAAA,EACT;AAAA,EACA,WAAW,aAAa;AACtB,WAAO;AAAA,EACT;AAAA,EACA,WAAW,cAAc;AACvB,WAAO;AAAA,EACT;AAAA,EACA,OAAO,MAAM;AACX,UAAM,UAAU,SAAS,KAAK;AAE9B,WAAO;AAAA,MACL;AAAA,MACA,OAAO,UAAU,IAAI;AAAA,MACrB,SAAS,CAAC,GAAG,KAAK,QAAQ,SAAS,CAAC;AAAA,IACtC;AAAA,EACF;AACF;AAIA,IAAM,oBAAN,cAAgC,UAAU;AAAA,EACxC,YAAY,SAAS;AACnB,UAAM,OAAO;AAAA,EACf;AAAA,EACA,WAAW,OAAO;AAChB,WAAO;AAAA,EACT;AAAA,EACA,WAAW,aAAa;AACtB,WAAO;AAAA,EACT;AAAA,EACA,WAAW,cAAc;AACvB,WAAO;AAAA,EACT;AAAA,EACA,OAAO,MAAM;AACX,UAAM,QAAQ,KAAK,QAAQ,KAAK,OAAO;AACvC,UAAM,UAAU,UAAU;AAE1B,WAAO;AAAA,MACL;AAAA,MACA,OAAO,UAAU,IAAI;AAAA,MACrB,SAAS,CAAC,GAAG,KAAK,SAAS,CAAC;AAAA,IAC9B;AAAA,EACF;AACF;AAIA,IAAM,mBAAN,cAA+B,UAAU;AAAA,EACvC,YAAY,SAAS;AACnB,UAAM,OAAO;AAAA,EACf;AAAA,EACA,WAAW,OAAO;AAChB,WAAO;AAAA,EACT;AAAA,EACA,WAAW,aAAa;AACtB,WAAO;AAAA,EACT;AAAA,EACA,WAAW,cAAc;AACvB,WAAO;AAAA,EACT;AAAA,EACA,OAAO,MAAM;AACX,UAAM,UAAU,KAAK,WAAW,KAAK,OAAO;AAE5C,WAAO;AAAA,MACL;AAAA,MACA,OAAO,UAAU,IAAI;AAAA,MACrB,SAAS,CAAC,GAAG,KAAK,QAAQ,SAAS,CAAC;AAAA,IACtC;AAAA,EACF;AACF;AAIA,IAAM,0BAAN,cAAsC,UAAU;AAAA,EAC9C,YAAY,SAAS;AACnB,UAAM,OAAO;AAAA,EACf;AAAA,EACA,WAAW,OAAO;AAChB,WAAO;AAAA,EACT;AAAA,EACA,WAAW,aAAa;AACtB,WAAO;AAAA,EACT;AAAA,EACA,WAAW,cAAc;AACvB,WAAO;AAAA,EACT;AAAA,EACA,OAAO,MAAM;AACX,UAAM,UAAU,CAAC,KAAK,WAAW,KAAK,OAAO;AAE7C,WAAO;AAAA,MACL;AAAA,MACA,OAAO,UAAU,IAAI;AAAA,MACrB,SAAS,CAAC,GAAG,KAAK,SAAS,CAAC;AAAA,IAC9B;AAAA,EACF;AACF;AAIA,IAAM,mBAAN,cAA+B,UAAU;AAAA,EACvC,YAAY,SAAS;AACnB,UAAM,OAAO;AAAA,EACf;AAAA,EACA,WAAW,OAAO;AAChB,WAAO;AAAA,EACT;AAAA,EACA,WAAW,aAAa;AACtB,WAAO;AAAA,EACT;AAAA,EACA,WAAW,cAAc;AACvB,WAAO;AAAA,EACT;AAAA,EACA,OAAO,MAAM;AACX,UAAM,UAAU,KAAK,SAAS,KAAK,OAAO;AAE1C,WAAO;AAAA,MACL;AAAA,MACA,OAAO,UAAU,IAAI;AAAA,MACrB,SAAS,CAAC,KAAK,SAAS,KAAK,QAAQ,QAAQ,KAAK,SAAS,CAAC;AAAA,IAC9D;AAAA,EACF;AACF;AAIA,IAAM,0BAAN,cAAsC,UAAU;AAAA,EAC9C,YAAY,SAAS;AACnB,UAAM,OAAO;AAAA,EACf;AAAA,EACA,WAAW,OAAO;AAChB,WAAO;AAAA,EACT;AAAA,EACA,WAAW,aAAa;AACtB,WAAO;AAAA,EACT;AAAA,EACA,WAAW,cAAc;AACvB,WAAO;AAAA,EACT;AAAA,EACA,OAAO,MAAM;AACX,UAAM,UAAU,CAAC,KAAK,SAAS,KAAK,OAAO;AAC3C,WAAO;AAAA,MACL;AAAA,MACA,OAAO,UAAU,IAAI;AAAA,MACrB,SAAS,CAAC,GAAG,KAAK,SAAS,CAAC;AAAA,IAC9B;AAAA,EACF;AACF;AAEA,IAAM,aAAN,cAAyB,UAAU;AAAA,EACjC,YACE,SACA;AAAA,IACE,WAAW,OAAO;AAAA,IAClB,YAAY,OAAO;AAAA,IACnB,WAAW,OAAO;AAAA,IAClB,iBAAiB,OAAO;AAAA,IACxB,iBAAiB,OAAO;AAAA,IACxB,qBAAqB,OAAO;AAAA,IAC5B,kBAAkB,OAAO;AAAA,IACzB,mBAAmB,OAAO;AAAA,IAC1B,iBAAiB,OAAO;AAAA,EAC1B,IAAI,CAAC,GACL;AACA,UAAM,OAAO;AACb,SAAK,eAAe,IAAI,YAAY,SAAS;AAAA,MAC3C;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,WAAW,OAAO;AAChB,WAAO;AAAA,EACT;AAAA,EACA,WAAW,aAAa;AACtB,WAAO;AAAA,EACT;AAAA,EACA,WAAW,cAAc;AACvB,WAAO;AAAA,EACT;AAAA,EACA,OAAO,MAAM;AACX,WAAO,KAAK,aAAa,SAAS,IAAI;AAAA,EACxC;AACF;AAIA,IAAM,eAAN,cAA2B,UAAU;AAAA,EACnC,YAAY,SAAS;AACnB,UAAM,OAAO;AAAA,EACf;AAAA,EACA,WAAW,OAAO;AAChB,WAAO;AAAA,EACT;AAAA,EACA,WAAW,aAAa;AACtB,WAAO;AAAA,EACT;AAAA,EACA,WAAW,cAAc;AACvB,WAAO;AAAA,EACT;AAAA,EACA,OAAO,MAAM;AACX,QAAI,WAAW;AACf,QAAI;AAEJ,UAAM,UAAU,CAAC;AACjB,UAAM,aAAa,KAAK,QAAQ;AAGhC,YAAQ,QAAQ,KAAK,QAAQ,KAAK,SAAS,QAAQ,KAAK,IAAI;AAC1D,iBAAW,QAAQ;AACnB,cAAQ,KAAK,CAAC,OAAO,WAAW,CAAC,CAAC;AAAA,IACpC;AAEA,UAAM,UAAU,CAAC,CAAC,QAAQ;AAE1B,WAAO;AAAA,MACL;AAAA,MACA,OAAO,UAAU,IAAI;AAAA,MACrB;AAAA,IACF;AAAA,EACF;AACF;AAGA,IAAM,YAAY;AAAA,EAChB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAEA,IAAM,eAAe,UAAU;AAG/B,IAAM,WAAW;AACjB,IAAM,WAAW;AAKjB,SAAS,WAAW,SAAS,UAAU,CAAC,GAAG;AACzC,SAAO,QAAQ,MAAM,QAAQ,EAAE,IAAI,CAAC,SAAS;AAC3C,QAAI,QAAQ,KACT,KAAK,EACL,MAAM,QAAQ,EACd,OAAO,CAACC,UAASA,SAAQ,CAAC,CAACA,MAAK,KAAK,CAAC;AAEzC,QAAI,UAAU,CAAC;AACf,aAAS,IAAI,GAAG,MAAM,MAAM,QAAQ,IAAI,KAAK,KAAK,GAAG;AACnD,YAAM,YAAY,MAAM,CAAC;AAGzB,UAAI,QAAQ;AACZ,UAAI,MAAM;AACV,aAAO,CAAC,SAAS,EAAE,MAAM,cAAc;AACrC,cAAM,WAAW,UAAU,GAAG;AAC9B,YAAI,QAAQ,SAAS,aAAa,SAAS;AAC3C,YAAI,OAAO;AACT,kBAAQ,KAAK,IAAI,SAAS,OAAO,OAAO,CAAC;AACzC,kBAAQ;AAAA,QACV;AAAA,MACF;AAEA,UAAI,OAAO;AACT;AAAA,MACF;AAGA,YAAM;AACN,aAAO,EAAE,MAAM,cAAc;AAC3B,cAAM,WAAW,UAAU,GAAG;AAC9B,YAAI,QAAQ,SAAS,cAAc,SAAS;AAC5C,YAAI,OAAO;AACT,kBAAQ,KAAK,IAAI,SAAS,OAAO,OAAO,CAAC;AACzC;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,WAAO;AAAA,EACT,CAAC;AACH;AAIA,IAAM,gBAAgB,oBAAI,IAAI,CAAC,WAAW,MAAM,aAAa,IAAI,CAAC;AA8BlE,IAAM,iBAAN,MAAqB;AAAA,EACnB,YACE,SACA;AAAA,IACE,kBAAkB,OAAO;AAAA,IACzB,mBAAmB,OAAO;AAAA,IAC1B,iBAAiB,OAAO;AAAA,IACxB,qBAAqB,OAAO;AAAA,IAC5B,iBAAiB,OAAO;AAAA,IACxB,iBAAiB,OAAO;AAAA,IACxB,WAAW,OAAO;AAAA,IAClB,YAAY,OAAO;AAAA,IACnB,WAAW,OAAO;AAAA,EACpB,IAAI,CAAC,GACL;AACA,SAAK,QAAQ;AACb,SAAK,UAAU;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,cAAU,kBAAkB,UAAU,QAAQ,YAAY;AAC1D,cAAU,mBAAmB,gBAAgB,OAAO,IAAI;AACxD,SAAK,UAAU;AACf,SAAK,QAAQ,WAAW,KAAK,SAAS,KAAK,OAAO;AAAA,EACpD;AAAA,EAEA,OAAO,UAAU,GAAG,SAAS;AAC3B,WAAO,QAAQ;AAAA,EACjB;AAAA,EAEA,SAAS,MAAM;AACb,UAAM,QAAQ,KAAK;AAEnB,QAAI,CAAC,OAAO;AACV,aAAO;AAAA,QACL,SAAS;AAAA,QACT,OAAO;AAAA,MACT;AAAA,IACF;AAEA,UAAM,EAAE,gBAAgB,iBAAiB,iBAAiB,IAAI,KAAK;AAEnE,WAAO,kBAAkB,OAAO,KAAK,YAAY;AACjD,WAAO,mBAAmB,gBAAgB,IAAI,IAAI;AAElD,QAAI,aAAa;AACjB,QAAI,aAAa,CAAC;AAClB,QAAI,aAAa;AAGjB,aAAS,IAAI,GAAG,OAAO,MAAM,QAAQ,IAAI,MAAM,KAAK,GAAG;AACrD,YAAMC,aAAY,MAAM,CAAC;AAGzB,iBAAW,SAAS;AACpB,mBAAa;AAGb,eAAS,IAAI,GAAG,OAAOA,WAAU,QAAQ,IAAI,MAAM,KAAK,GAAG;AACzD,cAAM,WAAWA,WAAU,CAAC;AAC5B,cAAM,EAAE,SAAS,SAAS,MAAM,IAAI,SAAS,OAAO,IAAI;AAExD,YAAI,SAAS;AACX,wBAAc;AACd,wBAAc;AACd,cAAI,gBAAgB;AAClB,kBAAM,OAAO,SAAS,YAAY;AAClC,gBAAI,cAAc,IAAI,IAAI,GAAG;AAC3B,2BAAa,CAAC,GAAG,YAAY,GAAG,OAAO;AAAA,YACzC,OAAO;AACL,yBAAW,KAAK,OAAO;AAAA,YACzB;AAAA,UACF;AAAA,QACF,OAAO;AACL,uBAAa;AACb,uBAAa;AACb,qBAAW,SAAS;AACpB;AAAA,QACF;AAAA,MACF;AAGA,UAAI,YAAY;AACd,YAAI,SAAS;AAAA,UACX,SAAS;AAAA,UACT,OAAO,aAAa;AAAA,QACtB;AAEA,YAAI,gBAAgB;AAClB,iBAAO,UAAU;AAAA,QACnB;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAGA,WAAO;AAAA,MACL,SAAS;AAAA,MACT,OAAO;AAAA,IACT;AAAA,EACF;AACF;AAEA,IAAM,sBAAsB,CAAC;AAE7B,SAAS,YAAY,MAAM;AACzB,sBAAoB,KAAK,GAAG,IAAI;AAClC;AAEA,SAAS,eAAe,SAAS,SAAS;AACxC,WAAS,IAAI,GAAG,MAAM,oBAAoB,QAAQ,IAAI,KAAK,KAAK,GAAG;AACjE,QAAI,gBAAgB,oBAAoB,CAAC;AACzC,QAAI,cAAc,UAAU,SAAS,OAAO,GAAG;AAC7C,aAAO,IAAI,cAAc,SAAS,OAAO;AAAA,IAC3C;AAAA,EACF;AAEA,SAAO,IAAI,YAAY,SAAS,OAAO;AACzC;AAEA,IAAM,kBAAkB;AAAA,EACtB,KAAK;AAAA,EACL,IAAI;AACN;AAEA,IAAM,UAAU;AAAA,EACd,MAAM;AAAA,EACN,SAAS;AACX;AAEA,IAAM,eAAe,CAAC,UACpB,CAAC,EAAE,MAAM,gBAAgB,GAAG,KAAK,MAAM,gBAAgB,EAAE;AAE3D,IAAM,SAAS,CAAC,UAAU,CAAC,CAAC,MAAM,QAAQ,IAAI;AAE9C,IAAM,SAAS,CAAC,UACd,CAAC,QAAQ,KAAK,KAAK,SAAS,KAAK,KAAK,CAAC,aAAa,KAAK;AAE3D,IAAM,oBAAoB,CAAC,WAAW;AAAA,EACpC,CAAC,gBAAgB,GAAG,GAAG,OAAO,KAAK,KAAK,EAAE,IAAI,CAAC,SAAS;AAAA,IACtD,CAAC,GAAG,GAAG,MAAM,GAAG;AAAA,EAClB,EAAE;AACJ;AAIA,SAAS,MAAM,OAAO,SAAS,EAAE,OAAO,KAAK,IAAI,CAAC,GAAG;AACnD,QAAM,OAAO,CAACC,WAAU;AACtB,QAAI,OAAO,OAAO,KAAKA,MAAK;AAE5B,UAAM,cAAc,OAAOA,MAAK;AAEhC,QAAI,CAAC,eAAe,KAAK,SAAS,KAAK,CAAC,aAAaA,MAAK,GAAG;AAC3D,aAAO,KAAK,kBAAkBA,MAAK,CAAC;AAAA,IACtC;AAEA,QAAI,OAAOA,MAAK,GAAG;AACjB,YAAM,MAAM,cAAcA,OAAM,QAAQ,IAAI,IAAI,KAAK,CAAC;AAEtD,YAAM,UAAU,cAAcA,OAAM,QAAQ,OAAO,IAAIA,OAAM,GAAG;AAEhE,UAAI,CAAC,SAAS,OAAO,GAAG;AACtB,cAAM,IAAI,MAAM,qCAAqC,GAAG,CAAC;AAAA,MAC3D;AAEA,YAAM,MAAM;AAAA,QACV,OAAO,YAAY,GAAG;AAAA,QACtB;AAAA,MACF;AAEA,UAAI,MAAM;AACR,YAAI,WAAW,eAAe,SAAS,OAAO;AAAA,MAChD;AAEA,aAAO;AAAA,IACT;AAEA,QAAI,OAAO;AAAA,MACT,UAAU,CAAC;AAAA,MACX,UAAU,KAAK,CAAC;AAAA,IAClB;AAEA,SAAK,QAAQ,CAAC,QAAQ;AACpB,YAAM,QAAQA,OAAM,GAAG;AAEvB,UAAI,QAAQ,KAAK,GAAG;AAClB,cAAM,QAAQ,CAAC,SAAS;AACtB,eAAK,SAAS,KAAK,KAAK,IAAI,CAAC;AAAA,QAC/B,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAED,WAAO;AAAA,EACT;AAEA,MAAI,CAAC,aAAa,KAAK,GAAG;AACxB,YAAQ,kBAAkB,KAAK;AAAA,EACjC;AAEA,SAAO,KAAK,KAAK;AACnB;AAGA,SAAS,aACP,SACA,EAAE,kBAAkB,OAAO,gBAAgB,GAC3C;AACA,UAAQ,QAAQ,CAAC,WAAW;AAC1B,QAAI,aAAa;AAEjB,WAAO,QAAQ,QAAQ,CAAC,EAAE,KAAK,MAAAP,OAAM,MAAM,MAAM;AAC/C,YAAM,SAAS,MAAM,IAAI,SAAS;AAElC,oBAAc,KAAK;AAAA,QACjB,UAAU,KAAK,SAAS,OAAO,UAAU;AAAA,SACxC,UAAU,MAAM,kBAAkB,IAAIA;AAAA,MACzC;AAAA,IACF,CAAC;AAED,WAAO,QAAQ;AAAA,EACjB,CAAC;AACH;AAEA,SAAS,iBAAiB,QAAQ,MAAM;AACtC,QAAM,UAAU,OAAO;AACvB,OAAK,UAAU,CAAC;AAEhB,MAAI,CAAC,UAAU,OAAO,GAAG;AACvB;AAAA,EACF;AAEA,UAAQ,QAAQ,CAAC,UAAU;AACzB,QAAI,CAAC,UAAU,MAAM,OAAO,KAAK,CAAC,MAAM,QAAQ,QAAQ;AACtD;AAAA,IACF;AAEA,UAAM,EAAE,SAAS,MAAM,IAAI;AAE3B,QAAI,MAAM;AAAA,MACR;AAAA,MACA;AAAA,IACF;AAEA,QAAI,MAAM,KAAK;AACb,UAAI,MAAM,MAAM,IAAI;AAAA,IACtB;AAEA,QAAI,MAAM,MAAM,IAAI;AAClB,UAAI,WAAW,MAAM;AAAA,IACvB;AAEA,SAAK,QAAQ,KAAK,GAAG;AAAA,EACvB,CAAC;AACH;AAEA,SAAS,eAAe,QAAQ,MAAM;AACpC,OAAK,QAAQ,OAAO;AACtB;AAEA,SAAS,OACP,SACA,MACA;AAAA,EACE,iBAAiB,OAAO;AAAA,EACxB,eAAe,OAAO;AACxB,IAAI,CAAC,GACL;AACA,QAAM,eAAe,CAAC;AAEtB,MAAI,eAAgB,cAAa,KAAK,gBAAgB;AACtD,MAAI,aAAc,cAAa,KAAK,cAAc;AAElD,SAAO,QAAQ,IAAI,CAAC,WAAW;AAC7B,UAAM,EAAE,IAAI,IAAI;AAEhB,UAAM,OAAO;AAAA,MACX,MAAM,KAAK,GAAG;AAAA,MACd,UAAU;AAAA,IACZ;AAEA,QAAI,aAAa,QAAQ;AACvB,mBAAa,QAAQ,CAAC,gBAAgB;AACpC,oBAAY,QAAQ,IAAI;AAAA,MAC1B,CAAC;AAAA,IACH;AAEA,WAAO;AAAA,EACT,CAAC;AACH;AAEA,IAAM,OAAN,MAAW;AAAA,EACT,YAAY,MAAM,UAAU,CAAC,GAAG,OAAO;AACrC,SAAK,UAAU,EAAE,GAAG,QAAQ,GAAG,QAAQ;AAEvC,QACE,KAAK,QAAQ,qBACb,OACA;AACA,YAAM,IAAI,MAAM,2BAA2B;AAAA,IAC7C;AAEA,SAAK,YAAY,IAAI,SAAS,KAAK,QAAQ,IAAI;AAE/C,SAAK,cAAc,MAAM,KAAK;AAAA,EAChC;AAAA,EAEA,cAAc,MAAM,OAAO;AACzB,SAAK,QAAQ;AAEb,QAAI,SAAS,EAAE,iBAAiB,YAAY;AAC1C,YAAM,IAAI,MAAM,oBAAoB;AAAA,IACtC;AAEA,SAAK,WACH,SACA,YAAY,KAAK,QAAQ,MAAM,KAAK,OAAO;AAAA,MACzC,OAAO,KAAK,QAAQ;AAAA,MACpB,iBAAiB,KAAK,QAAQ;AAAA,IAChC,CAAC;AAAA,EACL;AAAA,EAEA,IAAI,KAAK;AACP,QAAI,CAAC,UAAU,GAAG,GAAG;AACnB;AAAA,IACF;AAEA,SAAK,MAAM,KAAK,GAAG;AACnB,SAAK,SAAS,IAAI,GAAG;AAAA,EACvB;AAAA,EAEA,OAAO,YAAY,MAAoB,OAAO;AAC5C,UAAM,UAAU,CAAC;AAEjB,aAAS,IAAI,GAAG,MAAM,KAAK,MAAM,QAAQ,IAAI,KAAK,KAAK,GAAG;AACxD,YAAM,MAAM,KAAK,MAAM,CAAC;AACxB,UAAI,UAAU,KAAK,CAAC,GAAG;AACrB,aAAK,SAAS,CAAC;AACf,aAAK;AACL,eAAO;AAEP,gBAAQ,KAAK,GAAG;AAAA,MAClB;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,SAAS,KAAK;AACZ,SAAK,MAAM,OAAO,KAAK,CAAC;AACxB,SAAK,SAAS,SAAS,GAAG;AAAA,EAC5B;AAAA,EAEA,WAAW;AACT,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,OAAO,OAAO,EAAE,QAAQ,GAAG,IAAI,CAAC,GAAG;AACjC,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,KAAK;AAET,QAAI,UAAU,SAAS,KAAK,IACxB,SAAS,KAAK,MAAM,CAAC,CAAC,IACpB,KAAK,kBAAkB,KAAK,IAC5B,KAAK,kBAAkB,KAAK,IAC9B,KAAK,eAAe,KAAK;AAE7B,iBAAa,SAAS,EAAE,gBAAgB,CAAC;AAEzC,QAAI,YAAY;AACd,cAAQ,KAAK,MAAM;AAAA,IACrB;AAEA,QAAI,SAAS,KAAK,KAAK,QAAQ,IAAI;AACjC,gBAAU,QAAQ,MAAM,GAAG,KAAK;AAAA,IAClC;AAEA,WAAO,OAAO,SAAS,KAAK,OAAO;AAAA,MACjC;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAEA,kBAAkB,OAAO;AACvB,UAAM,WAAW,eAAe,OAAO,KAAK,OAAO;AACnD,UAAM,EAAE,QAAQ,IAAI,KAAK;AACzB,UAAM,UAAU,CAAC;AAGjB,YAAQ,QAAQ,CAAC,EAAE,GAAG,MAAM,GAAG,KAAK,GAAGA,MAAK,MAAM;AAChD,UAAI,CAAC,UAAU,IAAI,GAAG;AACpB;AAAA,MACF;AAEA,YAAM,EAAE,SAAS,OAAO,QAAQ,IAAI,SAAS,SAAS,IAAI;AAE1D,UAAI,SAAS;AACX,gBAAQ,KAAK;AAAA,UACX,MAAM;AAAA,UACN;AAAA,UACA,SAAS,CAAC,EAAE,OAAO,OAAO,MAAM,MAAAA,OAAM,QAAQ,CAAC;AAAA,QACjD,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAED,WAAO;AAAA,EACT;AAAA,EAEA,eAAe,OAAO;AAEpB,UAAM,aAAa,MAAM,OAAO,KAAK,OAAO;AAE5C,UAAM,WAAW,CAAC,MAAM,MAAM,QAAQ;AACpC,UAAI,CAAC,KAAK,UAAU;AAClB,cAAM,EAAE,OAAO,SAAS,IAAI;AAE5B,cAAM,UAAU,KAAK,aAAa;AAAA,UAChC,KAAK,KAAK,UAAU,IAAI,KAAK;AAAA,UAC7B,OAAO,KAAK,SAAS,uBAAuB,MAAM,KAAK;AAAA,UACvD;AAAA,QACF,CAAC;AAED,YAAI,WAAW,QAAQ,QAAQ;AAC7B,iBAAO;AAAA,YACL;AAAA,cACE;AAAA,cACA;AAAA,cACA;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,eAAO,CAAC;AAAA,MACV;AAEA,YAAM,MAAM,CAAC;AACb,eAAS,IAAI,GAAG,MAAM,KAAK,SAAS,QAAQ,IAAI,KAAK,KAAK,GAAG;AAC3D,cAAM,QAAQ,KAAK,SAAS,CAAC;AAC7B,cAAM,SAAS,SAAS,OAAO,MAAM,GAAG;AACxC,YAAI,OAAO,QAAQ;AACjB,cAAI,KAAK,GAAG,MAAM;AAAA,QACpB,WAAW,KAAK,aAAa,gBAAgB,KAAK;AAChD,iBAAO,CAAC;AAAA,QACV;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAEA,UAAM,UAAU,KAAK,SAAS;AAC9B,UAAM,YAAY,CAAC;AACnB,UAAM,UAAU,CAAC;AAEjB,YAAQ,QAAQ,CAAC,EAAE,GAAG,MAAM,GAAG,IAAI,MAAM;AACvC,UAAI,UAAU,IAAI,GAAG;AACnB,YAAI,aAAa,SAAS,YAAY,MAAM,GAAG;AAE/C,YAAI,WAAW,QAAQ;AAErB,cAAI,CAAC,UAAU,GAAG,GAAG;AACnB,sBAAU,GAAG,IAAI,EAAE,KAAK,MAAM,SAAS,CAAC,EAAE;AAC1C,oBAAQ,KAAK,UAAU,GAAG,CAAC;AAAA,UAC7B;AACA,qBAAW,QAAQ,CAAC,EAAE,QAAQ,MAAM;AAClC,sBAAU,GAAG,EAAE,QAAQ,KAAK,GAAG,OAAO;AAAA,UACxC,CAAC;AAAA,QACH;AAAA,MACF;AAAA,IACF,CAAC;AAED,WAAO;AAAA,EACT;AAAA,EAEA,kBAAkB,OAAO;AACvB,UAAM,WAAW,eAAe,OAAO,KAAK,OAAO;AACnD,UAAM,EAAE,MAAM,QAAQ,IAAI,KAAK;AAC/B,UAAM,UAAU,CAAC;AAGjB,YAAQ,QAAQ,CAAC,EAAE,GAAG,MAAM,GAAG,IAAI,MAAM;AACvC,UAAI,CAAC,UAAU,IAAI,GAAG;AACpB;AAAA,MACF;AAEA,UAAI,UAAU,CAAC;AAGf,WAAK,QAAQ,CAAC,KAAK,aAAa;AAC9B,gBAAQ;AAAA,UACN,GAAG,KAAK,aAAa;AAAA,YACnB;AAAA,YACA,OAAO,KAAK,QAAQ;AAAA,YACpB;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF,CAAC;AAED,UAAI,QAAQ,QAAQ;AAClB,gBAAQ,KAAK;AAAA,UACX;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAED,WAAO;AAAA,EACT;AAAA,EACA,aAAa,EAAE,KAAK,OAAO,SAAS,GAAG;AACrC,QAAI,CAAC,UAAU,KAAK,GAAG;AACrB,aAAO,CAAC;AAAA,IACV;AAEA,QAAI,UAAU,CAAC;AAEf,QAAI,QAAQ,KAAK,GAAG;AAClB,YAAM,QAAQ,CAAC,EAAE,GAAG,MAAM,GAAG,KAAK,GAAGA,MAAK,MAAM;AAC9C,YAAI,CAAC,UAAU,IAAI,GAAG;AACpB;AAAA,QACF;AAEA,cAAM,EAAE,SAAS,OAAO,QAAQ,IAAI,SAAS,SAAS,IAAI;AAE1D,YAAI,SAAS;AACX,kBAAQ,KAAK;AAAA,YACX;AAAA,YACA;AAAA,YACA,OAAO;AAAA,YACP;AAAA,YACA,MAAAA;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF,CAAC;AAAA,IACH,OAAO;AACL,YAAM,EAAE,GAAG,MAAM,GAAGA,MAAK,IAAI;AAE7B,YAAM,EAAE,SAAS,OAAO,QAAQ,IAAI,SAAS,SAAS,IAAI;AAE1D,UAAI,SAAS;AACX,gBAAQ,KAAK,EAAE,OAAO,KAAK,OAAO,MAAM,MAAAA,OAAM,QAAQ,CAAC;AAAA,MACzD;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AACF;AAEA,KAAK,UAAU;AACf,KAAK,cAAc;AACnB,KAAK,aAAa;AAClB,KAAK,SAAS;AAEd;AACE,OAAK,aAAa;AACpB;AAEA;AACE,WAAS,cAAc;AACzB;;;ACnvDA,IAAM,iBAAiB;AACvB,IAAM,iBAAiB;AACvB,IAAM,kBAAkB;AACxB,IAAM,kBAAkB;AACxB,IAAM,iBAAiB,KAAK,KAAK,KAAK;AACtC,IAAM,oBAAoB;AAC1B,IAAM,cAAc;AACpB,IAAM,cAAc;AAGpB,IAAI,kBAAkB;AACtB,IAAI,kBAAkB;AAItB,SAAS,cAAc,IAAI;AACvB,SAAO,IAAI;AAAA,IAAQ,CAAC,GAAG,WACnB,WAAW,MAAM,OAAO,IAAI,MAAM,iBAAiB,CAAC,GAAG,EAAE;AAAA,EAC7D;AACJ;AAEA,SAAS,MAAM,SAAS;AACpB,QAAM,eAAe,cAAc,KAAK,IAAI,GAAG,OAAO;AACtD,SAAO,IAAI,QAAQ,aAAW,WAAW,SAAS,YAAY,CAAC;AACnE;AAEA,SAAS,YAAY,OAAO;AACxB,QAAM,kBAAkB,CAAC,mBAAmB,uBAAuB,gBAAgB,mBAAmB,cAAc;AACpH,SAAO,gBAAgB,KAAK,eAAa,MAAM,QAAQ,SAAS,SAAS,CAAC;AAC9E;AAEA,eAAe,yBAAyB,KAAK,UAAU,CAAC,GAAG,QAAQ,UAAU,aAAa;AACtF,QAAM,MAAM,KAAK,IAAI;AACrB,MAAI,MAAM,kBAAkB,mBAAmB;AAC3C,UAAM,IAAI,QAAQ,aAAW,WAAW,SAAS,qBAAqB,MAAM,gBAAgB,CAAC;AAAA,EACjG;AACA,oBAAkB,KAAK,IAAI;AAE3B,MAAI,OAAO,SAAS;AAChB,UAAM,IAAI,aAAa,uBAAuB,YAAY;AAAA,EAC9D;AAEA,MAAI;AACA,UAAM,WAAW,MAAM,QAAQ,KAAK;AAAA,MAChC,MAAM,KAAK,EAAE,GAAG,SAAS,OAAO,CAAC;AAAA,MACjC,cAAc,eAAe;AAAA,IACjC,CAAC;AAED,QAAI,CAAC,SAAS,IAAI;AACd,UAAI,SAAS,WAAW,IAAK,OAAM,IAAI,MAAM,qBAAqB;AAClE,UAAI,SAAS,UAAU,IAAK,OAAM,IAAI,MAAM,iBAAiB,SAAS,MAAM,EAAE;AAC9E,YAAM,IAAI,MAAM,eAAe,SAAS,MAAM,EAAE;AAAA,IACpD;AAEA,WAAO;AAAA,EACX,SAAS,OAAO;AACZ,QAAI,MAAM,SAAS,aAAc,OAAM;AACvC,QAAI,UAAU,KAAK,YAAY,KAAK,GAAG;AACnC,cAAQ,KAAK,gCAAgC,OAAO,oBAAoB,MAAM,OAAO;AACrF,YAAM,MAAM,cAAc,OAAO;AACjC,aAAO,yBAAyB,KAAK,SAAS,QAAQ,UAAU,CAAC;AAAA,IACrE;AACA,UAAM;AAAA,EACV;AACJ;AAKA,SAAS,iBAAiB,aAAa;AACnC,MAAI,CAAC,eAAe,OAAO,gBAAgB,SAAU,QAAO,CAAC;AAC7D,MAAI;AACA,UAAM,eAAe;AACrB,WAAO,YAAY,MAAM,GAAG,EAAE,IAAI,OAAK,EAAE,KAAK,CAAC,EAAE,OAAO,OAAO,EAAE,IAAI,WAAS;AAC1E,YAAM,QAAQ,MAAM,MAAM,YAAY;AACtC,UAAI,OAAO;AACP,cAAM,OAAO,MAAM,CAAC;AACpB,cAAM,QAAQ,MAAM,QAAQ,cAAc,EAAE,EAAE,KAAK;AACnD,eAAO,EAAE,OAAO,SAAS,MAAM,KAAK;AAAA,MACxC;AACA,aAAO,EAAE,OAAO,OAAO,MAAM,MAAM;AAAA,IACvC,CAAC;AAAA,EACL,SAAS,OAAO;AACZ,YAAQ,KAAK,+BAA+B,KAAK;AACjD,WAAO,CAAC;AAAA,EACZ;AACJ;AAEA,SAAS,mBAAmB,WAAW,MAAM;AACzC,MAAI,CAAC,WAAW,MAAM,OAAQ,QAAO;AAErC,MAAI;AACA,UAAM,QAAQ,OACR,UAAU,KAAK,IAAI,UAAQ;AACzB,YAAM,YAAY,KAAK,gBAAgB,IAAI,MAAM,GAAG,EAAE,IAAI,OAAK,EAAE,KAAK,CAAC,EAAE,OAAO,OAAO;AACvF,YAAM,aAAa,KAAK,QAAQ,IAAI,MAAM,SAAS;AACnD,YAAM,SAAS,KAAK,QAAQ,IAAI,QAAQ,WAAW,EAAE,EAAE,KAAK;AAC5D,aAAO;AAAA,QACH,SAAS,EAAE,OAAO,UAAU,YAAY,UAAU,CAAC,IAAI,KAAK,MAAM,YAAY,UAAU,CAAC,IAAI,GAAG;AAAA,QAChG,QAAQ,CAAC,EAAE,SAAS,SAAS,CAAC;AAAA,MAClC;AAAA,IACJ,CAAC,IACC,UAAU,KAAK,IAAI,WAAS;AAAA,MAC1B,SAAS,EAAE,OAAO,KAAK,QAAQ,IAAI,MAAM,GAAG;AAAA,MAC5C,QAAQ,iBAAiB,KAAK,YAAY,EAAE,IAAI,cAAY;AAAA,QACxD,SAAS,CAAC,QAAQ,KAAK;AAAA,QACvB,SAAS,QAAQ;AAAA,MACrB,EAAE;AAAA,IACN,EAAE;AACN,WAAO,EAAE,OAAO,OAAO,CAAC,EAAE;AAAA,EAC9B,SAAS,OAAO;AACZ,YAAQ,KAAK,kCAAkC,KAAK;AACpD,WAAO;AAAA,EACX;AACJ;AAEA,eAAe,YAAY,OAAO,MAAM,QAAQ;AAC5C,QAAM,WAAW,OAAO,UAAU;AAClC,QAAM,MAAM,GAAG,cAAc,YAAY,mBAAmB,MAAM,KAAK,CAAC,CAAC,SAAS,QAAQ;AAC1F,QAAM,WAAW,MAAM,yBAAyB,KAAK,CAAC,GAAG,MAAM;AAC/D,QAAM,OAAO,MAAM,SAAS,KAAK;AACjC,SAAO,mBAAmB,MAAM,IAAI;AACxC;AAEA,eAAe,aAAa,OAAO,MAAM,QAAQ;AAC7C,QAAM,WAAW,MAAM,yBAAyB,iBAAiB;AAAA,IAC7D,QAAQ;AAAA,IACR,SAAS,EAAE,gBAAgB,oBAAoB,UAAU,mBAAmB;AAAA,IAC5E,MAAM,KAAK,UAAU,EAAE,OAAO,MAAM,KAAK,GAAG,UAAU,OAAO,aAAa,WAAW,YAAY,MAAM,CAAC;AAAA,EAC5G,GAAG,MAAM;AACT,QAAM,OAAO,MAAM,SAAS,KAAK;AAEjC,MAAI,CAAC,QAAS,CAAC,KAAK,OAAO,UAAU,CAAC,KAAK,OAAO,QAAS;AACvD,UAAM,IAAI,MAAM,kBAAkB;AAAA,EACtC;AACA,SAAO,EAAE,OAAO,KAAK,SAAS,CAAC,GAAG,OAAO,KAAK,SAAS,CAAC,EAAE;AAC9D;AAKA,eAAe,gBAAgB,IAAI,OAAO;AACtC,MAAI;AACA,UAAM,eAAe,MAAM,GAAG,IAAI,oBAAoB,KAAK;AAC3D,UAAM,oBAAoB,cAAc,aAAc,KAAK,IAAI,IAAI,aAAa,YAAY;AAC5F,QAAI,kBAAmB,QAAO;AAC9B,QAAI,aAAc,OAAM,GAAG,OAAO,oBAAoB,KAAK;AAAA,EAC/D,SAAS,OAAO;AACZ,YAAQ,KAAK,2BAA2B,KAAK;AAAA,EACjD;AACA,SAAO;AACX;AAEA,eAAe,YAAY,IAAI,OAAO,MAAM;AACxC,MAAI;AACA,UAAM,GAAG,IAAI,oBAAoB,EAAE,MAAM,MAAM,MAAM,aAAa,WAAW,KAAK,IAAI,EAAE,GAAG,KAAK;AAAA,EACpG,SAAS,OAAO;AACZ,YAAQ,KAAK,yBAAyB,KAAK;AAAA,EAC/C;AACJ;AAKA,SAASQ,WAAU,KAAK,UAAU;AAC9B,SAAO,MAAM,SAAS,KAAK,MAAM,WAAW,IAAI,GAAG,KAAK;AAC5D;AAEA,SAAS,iBAAiB,OAAO,OAAO;AACpC,MAAI;AACJ,QAAM,gBAAgB;AAAA,IAClB,WAAW;AAAA,IACX,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,cAAc;AAAA,EAClB;AACA,QAAM,WAAW,OAAO,KAAK,aAAa,EAAE,KAAK,SAAO,MAAM,QAAQ,SAAS,GAAG,CAAC,KAAK;AAExF,MAAI,aAAa,aAAa;AAC1B,4BAAwB,cAAc,EAAE,MAAM,CAAC;AAC/C;AAAA,EACJ;AAEA,iBAAeA,WAAU,cAAc,QAAQ,GAAG,4CAA4C;AAE9F,QAAM,YAAY;AAElB,QAAM,mBAAmB;AAAA;AAAA,cAEf,SAAS;AAAA,6DACsCA,WAAU,oBAAoB,cAAc,CAAC;AAAA,wEAClC,YAAY;AAAA,yJACqE,MAAM,QAAQ,MAAM,KAAK,CAAC;AAAA,kBACjKA,WAAU,eAAe,OAAO,CAAC;AAAA;AAAA;AAI/C,QAAM,uBAAuB,IAAI,kBAAkB,cAAc,wBAAwB;AACzF,QAAM,mBAAmB,IAAI,kBAAkB,cAAc,oBAAoB;AAEjF,MAAG,iBAAkB,kBAAiB,MAAM,UAAU;AAEtD,MAAI,sBAAsB;AACtB,yBAAqB,MAAM,UAAU;AACrC,yBAAqB,YAAY;AAAA,EACrC;AACJ;AAIA,eAAe,cAAc,OAAO,MAAM,QAAQ;AAC9C,MAAI,MAAM,gBAAgB,MAAM;AAC5B,QAAI;AACA,YAAM,eAAe,MAAM,YAAY,OAAO,MAAM,MAAM;AAC1D,UAAI,aAAc,QAAO;AACzB,cAAQ,IAAI,8DAA8D;AAAA,IAC9E,SAAS,OAAO;AACZ,UAAI,MAAM,SAAS,aAAc,OAAM;AACvC,cAAQ,KAAK,gDAAgD,MAAM,OAAO;AAAA,IAC9E;AAAA,EACJ;AACA,SAAO,MAAM,aAAa,OAAO,MAAM,MAAM;AACjD;AAGA,eAAe,6BAA6B,OAAO,eAAe,OAAO,cAAc,OAAO;AAC1F,QAAM,WAAW,EAAE;AACnB,QAAM,aAAa,IAAI,gBAAgB;AAEvC,MAAI,OAAO,wBAAwB;AAC/B,WAAO,uBAAuB,MAAM;AAAA,EACxC;AACA,SAAO,yBAAyB;AAChC,QAAM,EAAE,OAAO,IAAI;AACnB,QAAM,kBAAkB,MAAM,KAAK;AAEnC,MAAI,gBAAgB,WAAW,GAAG;AAC9B,4BAAwB,UAAU,CAAC,GAAG,IAAI;AAC1C;AAAA,EACJ;AAEA,QAAM,KAAK,MAAM;AAEjB,MAAI,CAAC,cAAc;AACf,UAAM,eAAe,MAAM,gBAAgB,IAAI,eAAe;AAC9D,QAAI,gBAAgB,aAAa,SAAS,MAAM,aAAa;AACzD,UAAI,aAAa,iBAAiB;AAE9B,gCAAwB,WAAW,EAAE,SAAS,aAAa,MAAM,OAAO,gBAAgB,GAAG,WAAW;AAAA,MAC1G;AACA;AAAA,IACJ;AAAA,EACJ;AAGA,MAAI,CAAC,aAAa;AACd,4BAAwB,aAAa,EAAE,OAAO,gBAAgB,GAAG,KAAK;AAAA,EAC1E;AAEA,MAAI;AACA,UAAM,OAAO,eAAe,KAAK,eAAe;AAChD,UAAM,UAAU,MAAM,cAAc,iBAAiB,MAAM,MAAM;AAEjE,QAAI,aAAa,iBAAiB;AAC9B,YAAM,YAAY,IAAI,iBAAiB,OAAO;AAE9C,8BAAwB,WAAW,EAAE,SAAkB,OAAO,gBAAgB,GAAG,WAAW;AAAA,IAChG;AAAA,EAEJ,SAAS,OAAO;AACZ,QAAI,MAAM,SAAS,gBAAgB,aAAa,iBAAiB;AAC7D,cAAQ,MAAM,0BAA0B,KAAK;AAC7C,uBAAiB,OAAO,eAAe;AAAA,IAC3C;AAAA,EACJ,UAAE;AACE,QAAI,OAAO,2BAA2B,YAAY;AAC9C,aAAO,yBAAyB;AAAA,IACpC;AAAA,EACJ;AACJ;AAEA,OAAO,uBAAuB,SAAS,8BAA8B,GAAG;AACjE,IAAM,uBAAuB,OAAO;;;ACzR3C,IAAM,cAAc,oBAAI,IAAI;AAI5B,SAASC,WAAU,KAAK,eAAe,CAAC,GAAG;AACvC,MAAI,OAAO,MAAM,QAAQ,KAAK,MAAM,WAAW,IAAI,GAAG,KAAK,MAAM,QAAQ,KAAK,IAAI,IAAI,GAAG,KAAK,IAAI,GAAG;AACrG,aAAW,CAAC,aAAa,KAAK,KAAK,OAAO,QAAQ,YAAY,GAAG;AAC7D,WAAO,KAAK,QAAQ,IAAI,WAAW,KAAK,KAAK;AAAA,EACjD;AACA,SAAO;AACX;AAEA,SAAS,uBAAuB;AAC5B,SAAO,OAAO,cAAc,MAAM,IAAI,oBAAoB,IAAI;AAClE;AAIA,SAAS,mBAAmB,aAAa;AACrC,MAAI,CAAC,YAAY,IAAI,WAAW,EAAG;AAEnC,QAAM,cAAc,YAAY,IAAI,WAAW;AAC/C,aAAW,QAAQ,aAAa;AAC5B,QAAI,KAAK,cAAc;AACnB,WAAK,QAAQ,YAAY,KAAK;AAC9B,aAAO,KAAK;AAAA,IAChB;AAAA,EACJ;AACJ;AAEA,SAAS,iBAAiB,SAAS,OAAO;AACtC,MAAI,CAAC,MAAO;AAEZ,QAAM,aAAa,YAAY,IAAI,MAAM,SAAS,GAAG,KAAK,UAAQ,KAAK,YAAY,OAAO;AAC1F,MAAI,cAAc,CAAC,WAAW,cAAc;AACxC,eAAW,eAAe,QAAQ;AAAA,EACtC;AAEA,QAAM,QAAQ,IAAI,OAAO,IAAI,MAAM,QAAQ,+BAA+B,MAAM,CAAC,KAAK,IAAI;AAC1F,QAAM,SAAS,SAAS,iBAAiB,SAAS,WAAW,WAAW,MAAM,KAAK;AACnF,QAAM,gBAAgB,CAAC;AACvB,MAAI;AAEJ,SAAO,cAAc,OAAO,SAAS,GAAG;AACpC,QAAI,MAAM,KAAK,YAAY,SAAS,GAAG;AACnC,oBAAc,KAAK,WAAW;AAAA,IAClC;AAAA,EACJ;AAEA,gBAAc,QAAQ,UAAQ;AAC1B,UAAM,WAAW,SAAS,uBAAuB;AACjD,SAAK,UAAU,MAAM,KAAK,EAAE,QAAQ,UAAQ;AACxC,UAAI,KAAK,YAAY,MAAM,MAAM,YAAY,GAAG;AAC5C,cAAM,OAAO,SAAS,cAAc,MAAM;AAC1C,aAAK,YAAY;AACjB,aAAK,cAAc;AACnB,iBAAS,YAAY,IAAI;AAAA,MAC7B,OAAO;AACH,iBAAS,YAAY,SAAS,eAAe,IAAI,CAAC;AAAA,MACtD;AAAA,IACJ,CAAC;AACD,SAAK,YAAY,aAAa,UAAU,IAAI;AAAA,EAChD,CAAC;AACL;AAKO,SAAS,cAAc,UAAU,IAAI,SAAS;AACjD,MAAI,CAAC,MAAM,SAAS,QAAQ,EAAG,OAAM,SAAS,QAAQ,IAAI,CAAC;AAC3D,QAAM,MAAM,MAAM,SAAS,QAAQ;AACnC,QAAM,MAAM,IAAI,QAAQ,EAAE;AAC1B,MAAI,MAAM,IAAI;AACV,QAAI,OAAO,KAAK,CAAC;AACjB,YAAQ,UAAU,OAAO,SAAS;AAAA,EACtC,OAAO;AACH,QAAI,KAAK,EAAE;AACX,YAAQ,UAAU,IAAI,SAAS;AAAA,EACnC;AACA,eAAa;AACjB;AAEO,SAAS,gBAAgB,OAAO;AACnC,MAAI,MAAM,cAAc,KAAK,KAAK,CAAC,MAAM,QAAQ,KAAK,EAAG;AAEzD,QAAM,YAAY,SAAS,eAAe,KAAK;AAC/C,MAAI,CAAC,UAAW;AAGhB,QAAM,qBAAqB,MAAM,KAAK,UAAU,iBAAiB,mCAAmC,CAAC;AACrG,cAAY,IAAI,OAAO,mBAAmB,IAAI,SAAO,EAAE,SAAS,GAAG,EAAE,CAAC;AAEtE,QAAM,iBAAiB,mBAAmB,IAAI,CAAC,IAAI,WAAW;AAAA,IAC1D,IAAI,GAAG,QAAQ,UAAU,GAAG,KAAK,IAAI,KAAK;AAAA,IAC1C,SAAS;AAAA,IACT,YAAY,GAAG,QAAQ,cAAc,GAAG,QAAQ;AAAA,EACpD,EAAE;AAEF,MAAI,eAAe,SAAS,GAAG;AAC3B,UAAM,cAAc,KAAK,IAAI,IAAI,KAAK,gBAAgB;AAAA,MAClD,MAAM,CAAC,YAAY;AAAA,MACnB,cAAc;AAAA,MACd,WAAW;AAAA,MACX,gBAAgB;AAAA,IACpB,CAAC;AAAA,EACL;AACJ;AAGO,IAAM,eAAe,SAAS,MAAM;AACvC,QAAM,QAAQ,qBAAqB,EAAE,MAAM,KAAK;AAChD,QAAM,YAAY,SAAS,cAAc,qBAAqB;AAC9D,MAAI,CAAC,UAAW;AAEhB,QAAM,cAAc,UAAU;AAC9B,MAAI,gBAAgB,mBAAmB;AACnC,yBAAqB,KAAK;AAC1B;AAAA,EACJ;AAEA,QAAM,WAAW,YAAY,IAAI,WAAW,GAAG,IAAI,UAAQ,KAAK,OAAO,KAAK,CAAC;AAC7E,QAAM,cAAc,UAAU,iBAAiB,iBAAiB;AAEhE,qBAAmB,WAAW;AAE9B,MAAI,CAAC,OAAO;AACR,aAAS,QAAQ,UAAQ;AAAE,WAAK,MAAM,UAAU;AAAA,IAAI,CAAC;AACrD,gBAAY,QAAQ,aAAW;AAAE,cAAQ,MAAM,UAAU;AAAA,IAAI,CAAC;AAC9D;AAAA,EACJ;AAEA,QAAM,OAAO,MAAM,cAAc,WAAW;AAC5C,MAAI,CAAC,KAAM;AAEX,WAAS,QAAQ,UAAQ;AAAE,SAAK,MAAM,UAAU;AAAA,EAAQ,CAAC;AACzD,cAAY,QAAQ,aAAW;AAAE,YAAQ,MAAM,UAAU;AAAA,EAAQ,CAAC;AAElE,QAAM,UAAU,KAAK,OAAO,KAAK;AACjC,UAAQ,QAAQ,YAAU;AACtB,UAAM,cAAc,OAAO,KAAK;AAChC,gBAAY,MAAM,UAAU;AAC5B,qBAAiB,aAAa,KAAK;AAEnC,UAAM,gBAAgB,YAAY,QAAQ,iBAAiB;AAC3D,QAAI,cAAe,eAAc,MAAM,UAAU;AAEjD,UAAM,YAAY,YAAY,QAAQ,oBAAoB;AAC1D,QAAI,WAAW;AACX,YAAM,SAAS,UAAU,cAAc,mBAAmB;AAC1D,UAAI,UAAU,CAAC,OAAO,UAAU,SAAS,MAAM,EAAG,QAAO,UAAU,IAAI,MAAM;AAAA,IACjF;AAAA,EACJ,CAAC;AACL,GAAG,GAAG;AAEC,SAAS,YAAY,MAAM,aAAa,OAAO;AAClD,QAAM,cAAc;AACpB,cAAY,YAAY,IAAI;AAE5B,MAAI,MAAM,aAAc,OAAM,aAAa,MAAM;AACjD,cAAY,MAAM;AAElB,QAAM,YAAY,MAAM,QAAQ;AAChC,QAAM,cAAc,CAAC,YAAY;AAC7B,QAAI,OAAO,YAAY,IAAI,IAAI,OAAO,KAAK,YAAY,IAAI,IAAI,OAAO,KAAK,IAAI,OAAO;AACtF,WAAO,KAAK,QAAQ,WAAW,MAAM,aAAa,YAAY,CAAC;AAAA,EACnE;AAEA,WAAS,iBAAiB,iBAAiB,EAAE,QAAQ,QAAM;AACvD,OAAG,cAAc,YAAY,GAAG,QAAQ,OAAO;AAAA,EACnD,CAAC;AACD,WAAS,iBAAiB,6BAA6B,EAAE,QAAQ,QAAM;AACnE,OAAG,cAAc,YAAY,GAAG,QAAQ,kBAAkB;AAAA,EAC9D,CAAC;AACD,WAAS,iBAAiB,qBAAqB,EAAE,QAAQ,SAAO,IAAI,UAAU,OAAO,UAAU,IAAI,QAAQ,SAAS,IAAI,CAAC;AACzH,WAAS,iBAAiB,cAAc,EAAE,QAAQ,YAAY;AAE9D,QAAM,kBAAkB,SAAS,cAAc,kBAAkB;AACjE,MAAI,mBAAmB,IAAI,mBAAmB;AAC1C,UAAM,YAAY,gBAAgB,cAAc,MAAM;AACtD,UAAM,WAAW,WAAW,QAAQ;AACpC,QAAI,kBAAkB,cAAc,WAAW,YAAY,QAAQ,IAAK,WAAW,eAAe;AAAA,EACtG;AAEA,MAAI,CAAC,YAAY;AACb,UAAM,YAAY,SAAS,cAAc,qBAAqB;AAC9D,QAAI,WAAW;AACX,gBAAU,UAAU,IAAI,MAAM,MAAM,MAAM,IAAI;AAAA,IAClD;AACA,4BAAwB;AAAA,EAC5B;AACA,2BAAyB,MAAM,SAAS;AAC5C;AAEO,SAAS,YAAY,OAAO;AAC/B,QAAM,YAAY,MAAM,OAAO;AAC/B,QAAM,QAAQ,YAAY,SAAS;AACnC,WAAS,gBAAgB,UAAU,OAAO,aAAa,SAAS;AAChE,cAAY,SAAS,KAAK;AAE1B,WAAS,iBAAiB,qBAAqB,EAAE,QAAQ,WAAS;AAC9D,QAAI,UAAU,MAAM,OAAQ,OAAM,UAAU;AAAA,EAChD,CAAC;AAED,QAAM,mBAAmB,SAAS,eAAe,aAAa;AAC9D,MAAI,kBAAkB;AAClB,qBAAiB,cAAc,YAAY,cAAO;AAAA,EACtD;AACJ;AAEA,SAAS,aAAa;AAClB,MAAI,CAAC,IAAI,eAAgB;AACzB,QAAM,aAAa,IAAI,eAAe,UAAU,IAAI;AACpD,MAAI,eAAe,WAAW,aAAa,YAAY,IAAI,cAAc;AACzE,MAAI,iBAAiB;AACrB,MAAI,eAAe,YAAY;AAC/B,MAAI,eAAe,UAAU,OAAO,QAAQ;AAC5C,wBAAsB,MAAM;AACxB,QAAI,eAAe,MAAM,UAAU;AAAA,EACvC,CAAC;AACL;AAEA,SAAS,aAAa;AAClB,SAAO,IAAI,QAAQ,aAAW;AAC1B,QAAI,CAAC,IAAI,kBAAkB,IAAI,eAAe,MAAM,YAAY,KAAK;AACjE,cAAQ;AACR;AAAA,IACJ;AACA,UAAM,kBAAkB,CAAC,MAAM;AAC3B,UAAI,EAAE,WAAW,IAAI,eAAgB;AACrC,UAAI,eAAe,UAAU,IAAI,QAAQ;AACzC,UAAI,eAAe,oBAAoB,iBAAiB,eAAe;AACvE,cAAQ;AAAA,IACZ;AACA,QAAI,eAAe,iBAAiB,iBAAiB,eAAe;AACpE,QAAI,eAAe,MAAM,UAAU;AACnC,eAAW,MAAM;AACb,sBAAgB,EAAE,QAAQ,IAAI,eAAe,CAAC;AAAA,IAClD,GAAG,GAAG;AAAA,EACV,CAAC;AACL;AAEA,eAAe,cAAc,OAAO;AAChC,QAAM,eAAe;AACrB,QAAM,YAAY,gBAAgB,KAAK;AAEvC,QAAM,eAAe;AAAA,IACjB,YAAY,KAAK;AAAA,IACjB,UAAU,KAAK,CAAAC,QAAMA,IAAG,IAAI,YAAY,MAAM,YAAY,CAAC;AAAA,IAC3D,UAAU,KAAK,CAAAA,QAAMA,IAAG,IAAI,YAAY,eAAe,CAAC;AAAA,EAC5D;AACA,QAAM,CAAC,GAAG,cAAc,aAAa,IAAI,MAAM,QAAQ,IAAI,YAAY;AAEvE,QAAM,WAAW,gBAAgB,EAAE,OAAO,CAAC,GAAG,OAAO,CAAC,EAAE;AACxD,QAAM,YAAY,gBAAgB,MAAM,YAAY,GAAG,aAAa;AAEpE,QAAM,gBAAgB,CAAC;AACvB,QAAM,sBAAsB;AAC5B,QAAM,MAAM,MAAM;AAClB,MAAI,MAAM,aAAc,OAAM,aAAa,MAAM;AACjD,cAAY,MAAM;AAElB,QAAM,KAAK,MAAM;AACjB,QAAM,gBAAgB,CAAC,CAAE,MAAM,GAAG,IAAI,UAAU,KAAK;AACrD,MAAI,CAAC,eAAe;AAChB,UAAM,UAAU,CAAC,SAAS,SAAS,YAAY,YAAY,WAAW,WAAW;AACjF,YAAQ,IAAI,QAAQ,IAAI,WAAS,YAAY,OAAO,KAAK,EAAE,MAAM,SAAO;AACpE,cAAQ,KAAK,gCAAgC,KAAK,aAAa,GAAG;AAAA,IACtE,CAAC,CAAC,CAAC,EAAE,KAAK,MAAM,QAAQ,IAAI,yBAAyB,KAAK,YAAY,CAAC;AAAA,EAC3E;AACJ;AAEA,eAAe,cAAc,OAAO,aAAa;AAC7C,WAAS,iBAAiB,cAAc,EAAE,QAAQ,OAAK;AAAE,MAAE,YAAY;AAAA,EAAI,CAAC;AAC5E,0BAAwB;AACxB,cAAY,MAAM,aAAa,IAAI;AACnC,WAAS,iBAAiB,sBAAsB,EAAE,QAAQ,SAAO,IAAI,UAAU,OAAO,UAAU,IAAI,QAAQ,cAAc,KAAK,CAAC;AAChI,wBAAsB;AAGtB,QAAM,WAAW,UAAU,OAAO;AAClC,WAAS,cAAc,4BAA4B,EAAE,cAAc,MAAM,UAAU,WAAW,KAAK;AACnG,WAAS,cAAc,4BAA4B,EAAE,cAAc,MAAM,UAAU,WAAW,KAAK;AAEnG,QAAM,eAAe,OAAO,cAAc;AAC1C,QAAM,aAAa,eAAe,oBAAqB,WAAW,aAAa;AAE/E,MAAI,YAAY,MAAM,aAAa;AACnC,MAAI,CAAC,aAAa,cAAc,cAAc,cAAc,aAAa;AACrE,gBAAY;AACZ,UAAM,YAAY;AAClB,UAAM,cAAc,IAAI;AAAA,EAC5B;AAEA,QAAM,UAAU,WAAW,MAAM,OAAO,aAAa,IAAI;AAC7D;AAEA,eAAsB,SAAS,OAAO,cAAc,OAAO;AACvD,MAAI,MAAM,oBAAoB,UAAU,MAAM,cAAc;AACxD,QAAI,UAAU,MAAM,aAAc,cAAa;AAC/C;AAAA,EACJ;AAEA,QAAM,mBAAmB;AACzB,QAAM,gBAAgB;AACtB,QAAM,4BAA4B,IAAI,QAAQ,aAAW,WAAW,SAAS,GAAG,CAAC;AACjF,aAAW;AAEX,MAAI;AACA,UAAM,QAAQ,IAAI;AAAA,MACd,cAAc,KAAK;AAAA,MACnB;AAAA,IACJ,CAAC;AACD,UAAM,cAAc,OAAO,WAAW;AACtC,UAAM,gBAAgB;AAAA,EAC1B,SAAS,OAAO;AACZ,YAAQ,MAAM,wBAAwB,KAAK,KAAK,KAAK;AACrD,UAAM,gBAAgB;AACtB,QAAI,IAAI,gBAAgB;AACpB,YAAM,QAAQD,WAAU,qBAAqB;AAC7C,YAAM,OAAOA,WAAU,oBAAoB;AAC3C,UAAI,eAAe,YAAY,kFAAkF,KAAK,gCAAgC,MAAM,OAAO,qCAAqC,IAAI;AAAA,IAChN;AACA;AAAA,EACJ,UAAE;AACE,UAAM,mBAAmB;AACzB,QAAI,MAAM,kBAAkB,SAAS;AACjC,YAAM,WAAW;AAAA,IACrB;AACA,iBAAa;AAAA,EACjB;AACJ;AAEA,eAAe,cAAc,OAAO;AAChC,MAAI;AACA,UAAM,KAAK,MAAM;AACjB,QAAI,gBAAiB,MAAM,GAAG,IAAI,YAAY,eAAe,KAAM,CAAC;AACpE,kBAAc,MAAM,YAAY,IAAI,EAAE,GAAG,cAAc,MAAM,YAAY,GAAG,WAAW,SAAS,KAAK;AACrG,UAAM,YAAY,iBAAiB,aAAa;AAChD,yBAAqB,KAAK;AAC1B,0BAAsB;AAAA,EAC1B,SAAS,OAAO;AACZ,YAAQ,MAAM,oCAAoC,KAAK;AAAA,EAC3D;AACJ;AAEO,SAAS,YAAY;AACxB,QAAM,YAAY,SAAS,cAAc,qBAAqB;AAC9D,MAAI,CAAC,UAAW;AAChB,QAAM,QAAQ,UAAU;AACxB,MAAI,MAAM,cAAc,OAAO;AAC3B,QAAI,UAAU,UAAU,IAAI,WAAW;AACvC,QAAI,UAAU,iBAAiB,gBAAgB,MAAM,IAAI,UAAU,UAAU,OAAO,WAAW,GAAG,EAAE,MAAM,KAAK,CAAC;AAAA,EACpH;AACA,QAAM,YAAa,MAAM,cAAc,QAAS,OAAO;AACvD,gBAAc,MAAM,SAAS;AACjC;AAEO,SAAS,iBAAiB,OAAO,OAAO;AAC3C,QAAM,gBAAgB;AACtB,QAAM,YAAa,MAAM,cAAc,QAAS,OAAO;AACvD,gBAAc,MAAM,SAAS;AACjC;AAEA,SAAS,YAAY,SAAS;AAC1B,WAAS,iBAAiB,WAAW,EAAE,QAAQ,OAAK,EAAE,UAAU,OAAO,UAAU,EAAE,QAAQ,YAAY,OAAO,CAAC;AAC/G,QAAM,eAAe,SAAS,cAAc,4BAA4B,OAAO,IAAI;AAEnF,QAAM,eAAe,OAAO,cAAc;AAC1C,MAAI,cAAc;AACd,QAAI,IAAI,gBAAiB,KAAI,gBAAgB,UAAU,OAAO,WAAW,YAAY,UAAU;AAC/F,QAAI,gBAAgB,IAAI,mBAAmB;AACvC,YAAM,YAAY,aAAa,cAAc,MAAM;AACnD,YAAM,WAAW,WAAW,QAAQ;AACpC,UAAI,kBAAkB,cAAc,WAAWA,WAAU,QAAQ,IAAK,WAAW,eAAe;AAAA,IACpG;AAAA,EACJ;AAEA,MAAI,IAAI,WAAW;AACf,QAAI,UAAU,MAAM,UAAU,eAAe,UAAU;AACvD,yBAAqB,OAAO;AAAA,EAChC;AAEA,QAAM,kBAAkB,CAAC,CAAC,YAAY,iBAAiB,EAAE,SAAS,OAAO;AACzE,QAAM,eAAe,kBAAkB,SAAS;AAChD,MAAI,IAAI,gBAAiB,KAAI,gBAAgB,MAAM,UAAU;AAC7D,MAAI,IAAI,eAAgB,KAAI,eAAe,MAAM,UAAU;AAE3D,2BAAyB,OAAO;AACpC;AAEA,eAAsB,UAAU,SAAS,eAAe,iBAAiB,OAAO,cAAc,OAAO,cAAc,OAAO;AACtH,QAAM,cAAc,SAAS,cAAc,qBAAqB;AAChE,MAAI,aAAa,OAAO,WAAW,CAAC,aAAa;AAC7C,iBAAa;AACb;AAAA,EACJ;AAEA,QAAM,YAAY;AAClB,cAAY,OAAO;AACnB,eAAa;AAEb,MAAI,aAAa;AACb,UAAM,mBAAmB,IAAI,YAAY,IAAI,OAAO,OAAO;AAC3D,gBAAY,UAAU,OAAO,QAAQ;AAAA,EACzC;AACA,QAAM,kBAAkB,SAAS,eAAe,OAAO;AACvD,MAAI,CAAC,iBAAiB;AAClB,YAAQ,MAAM,oCAAoC,OAAO,EAAE;AAC3D;AAAA,EACJ;AACA,kBAAgB,UAAU,IAAI,QAAQ;AAEtC,MAAI,CAAC,aAAa;AACd,UAAM,MAAM,UAAU,MAAM,YAAY,QAAQ,OAAO;AACvD,YAAQ,UAAU,EAAE,MAAM,OAAO,SAAS,OAAO,MAAM,aAAa,GAAG,IAAI,GAAG;AAAA,EAClF;AAEA,MAAI,aAAa,OAAO,mBAAmB;AACvC,UAAM,sBAAsB,qBAAqB,EAAE,MAAM,KAAK;AAAA,EAClE;AAEA,QAAM,YAAY,CAAC,CAAC,mBAAmB,UAAU,EAAE,SAAS,OAAO;AACnE,QAAM,UAAU,MAAM,QAAQ,OAAO;AAErC,MAAI,WAAW;AACX,QAAI,SAAS;AACT,UAAI,eAAe,CAAC,MAAM,aAAa,IAAI,OAAO,GAAG;AACjD,sBAAc,OAAO;AACrB,cAAM,aAAa,IAAI,SAAS,gBAAgB,SAAS;AAAA,MAC7D,OAAO;AACH,wBAAgB,YAAY,MAAM,aAAa,IAAI,OAAO;AAC1D,wBAAgB,OAAO;AAAA,MAC3B;AAAA,IACJ,OAAO;AACH,YAAM,KAAK,MAAM;AACjB,YAAM,gBAAgB,MAAM,GAAG,IAAI,UAAU,MAAM,YAAY;AAC/D,UAAI,eAAe;AACf,kCAA0B,OAAO;AACjC,cAAM,aAAa,OAAO,OAAO;AAAA,MACrC,OAAO;AACH,cAAM,iBAAiB,SAAS,eAAe,yBAAyB;AACxE,wBAAgB,YAAY,iBAAiB,eAAe,YAAY;AACxE,YAAI;AACA,gBAAM,YAAY,MAAM,cAAc,OAAO;AAC7C,wBAAc,OAAO;AACrB,gBAAM,aAAa,IAAI,SAAS,gBAAgB,SAAS;AAAA,QAC7D,SAAS,OAAO;AACZ,kBAAQ,MAAM,8BAA8B,OAAO,KAAK,KAAK;AAC7D,gBAAM,QAAQA,WAAU,uBAAuB;AAC/C,gBAAM,OAAOA,WAAU,sBAAsB;AAC7C,0BAAgB,YAAY,mGAAmG,KAAK,gCAAgC,MAAM,OAAO,uBAAuB,IAAI;AAAA,QAChN;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAEA,MAAI,YAAY,mBAAmB;AAC/B,yBAAqB,EAAE,QAAQ,MAAM;AACrC,yBAAqB,MAAM,qBAAqB,OAAO,IAAI;AAAA,EAC/D,WAAW,YAAY,YAAY;AAC/B,4BAAwB;AAAA,EAC5B,OAAO;AACH,UAAM,cAAc,qBAAqB;AACzC,QAAG,YAAY,OAAO;AAClB,kBAAY,QAAQ;AACpB,mBAAa;AAAA,IACjB;AAAA,EACJ;AAEA,MAAI,CAAC,gBAAgB;AACjB,WAAO,SAAS,EAAE,KAAK,MAAM,mBAAmB,IAAI,OAAO,KAAK,GAAG,UAAU,UAAU,CAAC;AAAA,EAC5F;AACJ;AAEO,SAAS,cAAc,SAAS,iBAAiB;AACpD,QAAM,YAAY,SAAS,cAAc,qBAAqB;AAC9D,QAAM,iBAAiB,WAAW,OAAO;AAEzC,QAAM,iBAAiB,MAAM;AACzB,0BAAsB,MAAM;AACxB,YAAM,gBAAgB,SAAS,cAAc,4BAA4B,eAAe,IAAI;AAC5F,UAAI,CAAC,cAAe;AAEpB,YAAM,mBAAmB,cAAc,QAAQ,oBAAoB;AACnE,UAAI,oBAAoB,cAAc,YAAY,YAAY,CAAC,cAAc,UAAU,SAAS,MAAM,GAAG;AACrG,sBAAc,MAAM;AAAA,MACxB;AAEA,iBAAW,MAAM;AACb,cAAM,cAAc,cAAc,sBAAsB;AACxD,cAAM,qBAAqB,YAAY,MAAM,OAAO;AACpD,cAAM,eAAe,SAAS,cAAc,uBAAuB;AACnE,cAAM,eAAgB,cAAc,eAAe,iBAAiB,YAAY,EAAE,aAAa,WAAY,aAAa,eAAe;AAEvI,eAAO,SAAS;AAAA,UACZ,KAAK,qBAAqB,eAAe;AAAA,UACzC,UAAU;AAAA,QACd,CAAC;AAED,cAAM,kBAAkB,cAAc,QAAQ,6DAA6D;AAC3G,YAAI,iBAAiB;AACjB,0BAAgB,UAAU,IAAI,gBAAgB;AAC9C,0BAAgB,iBAAiB,gBAAgB,MAAM;AACnD,4BAAgB,UAAU,OAAO,gBAAgB;AAAA,UACrD,GAAG,EAAE,MAAM,KAAK,CAAC;AAAA,QACrB;AAAA,MACJ,GAAG,GAAG;AAAA,IACV,CAAC;AAAA,EACL;AAEA,MAAI,gBAAgB;AAChB,mBAAe;AAAA,EACnB,OAAO;AACH,cAAU,SAAS,MAAM,IAAI,EAAE,KAAK,cAAc;AAAA,EACtD;AACJ;AAEA,eAAsB,YAAY,OAAO;AACrC,MAAI,UAAU,OAAO,cAAc;AAC/B,UAAMA,WAAU,yBAAyB,CAAC;AAC1C;AAAA,EACJ;AACA,MAAI,CAAC,QAAQA,WAAU,sBAAsB,EAAE,OAAO,MAAM,YAAY,EAAE,CAAC,CAAC,GAAG;AAC3E;AAAA,EACJ;AACA,MAAI;AACA,UAAM,KAAK,MAAM;AACjB,UAAM,QAAQ,IAAI;AAAA,MACd,GAAG,OAAO,UAAU,KAAK;AAAA,MACzB,GAAG,OAAO,YAAY,KAAK;AAAA,MAC3B,oBAAoB,KAAK;AAAA,IAC7B,CAAC;AAED,UAAM,qBAAqB,MAAM,mBAAmB,OAAO,OAAK,MAAM,KAAK;AAC3E,QAAI,MAAM,iBAAiB,OAAO;AAC9B,YAAM,SAAS,OAAO,YAAY;AAAA,IACtC,OAAO;AACH,YAAM,iBAAiB,MAAM,MAAM,GAAG,OAAO,QAAQ,cAAc;AACnE,YAAM,aAAa,eAAe,KAAK,MAAM,eAAe,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE;AAClF,YAAM,eAAe,MAAM,GAAG,WAAW,QAAQ;AACjD,yBAAmB,WAAW,UAAU,CAAC,OAAO,YAAY,GAAG,YAAY;AAC3E,eAAS,iBAAiB,sBAAsB,EAAE,QAAQ,SAAO,IAAI,UAAU,OAAO,UAAU,IAAI,QAAQ,cAAc,MAAM,YAAY,CAAC;AAAA,IACjJ;AACA,UAAMA,WAAU,sBAAsB,EAAE,OAAO,MAAM,YAAY,EAAE,CAAC,CAAC;AAAA,EACzE,SAAS,OAAO;AACZ,YAAQ,MAAM,2BAA2B,KAAK;AAC9C,UAAMA,WAAU,kBAAkB,CAAC;AAAA,EACvC;AACJ;;;ACjiBA,SAAS,iCAAiC,MAAM,QAAQ,IAAI;AACxD,QAAME,aAAY,CAAC,QAAQ,MAAM,QAAQ,KAAK,MAAM,WAAW,IAAI,GAAG,KAAK,IAAI,GAAG;AAClF,MAAI,eAAe;AAEnB,UAAQ,MAAM;AAAA,IACV,KAAK;AACD,qBAAe;AACf;AAAA,IACJ,KAAK;AACD,YAAM,gBAAgB;AACtB,YAAM,iBAAiB,GAAGA,WAAU,WAAW,CAAC,iCAAiC,KAAK;AACtF,YAAM,oBAAoBA,WAAU,mBAAmB;AACvD,qBAAe;AAAA,kBACT,aAAa;AAAA,iEACkC,cAAc;AAAA,oEACX,iBAAiB;AAAA;AAEzE;AAAA,IACJ,KAAK;AACD,YAAM,YAAY;AAClB,YAAM,aAAaA,WAAU,kBAAkB;AAC/C,YAAM,gBAAgBA,WAAU,aAAa;AAC7C,qBAAe;AAAA,kBACT,SAAS;AAAA,iEACsC,UAAU;AAAA,oEACP,aAAa;AAAA,iEAChB,KAAK,KAAKA,WAAU,aAAa,CAAC;AAAA;AAEvF;AAAA,IACJ,KAAK;AAAA,IACL;AACI,YAAM,aAAa;AACnB,YAAM,iBAAiBA,WAAU,oBAAoB;AACrD,YAAM,SAAS,0CAA0CA,WAAU,kBAAkB,CAAC;AACtF,qBAAe;AAAA,kBACT,UAAU;AAAA,iEACqC,cAAc;AAAA,kBAC7D,MAAM;AAAA;AAEZ;AAAA,EACR;AACA,SAAO;AACX;AAEO,SAAS,0BAA0B,SAAS;AAC/C,QAAM,YAAY,SAAS,eAAe,OAAO;AACjD,MAAI,CAAC,UAAW;AAEhB,QAAMA,aAAY,CAAC,KAAK,eAAe,CAAC,MAAM;AAC1C,QAAI,OAAO,MAAM,QAAQ,KAAK,MAAM,WAAW,IAAI,GAAG,KAAK,IAAI,GAAG;AAClE,eAAW,CAAC,aAAa,KAAK,KAAK,OAAO,QAAQ,YAAY,GAAG;AAC7D,aAAO,KAAK,QAAQ,IAAI,WAAW,KAAK,KAAK;AAAA,IACjD;AACA,WAAO;AAAA,EACX;AAEA,QAAM,QAAQA,WAAU,+BAA+B;AACvD,QAAM,OAAOA,WAAU,gCAAgC;AAAA,IACnD;AAAA,IACA,WAAW,MAAM,aAAa,YAAY;AAAA,EAC9C,CAAC;AAED,YAAU,YAAY;AAAA;AAAA,kEAEwC,KAAK;AAAA,iBACtD,IAAI;AAAA;AAAA;AAGrB;AAGA,SAAS,gBAAgB,OAAO,aAAa,YAAY,UAAU;AAC/D,QAAM,WAAW,SAAS,eAAe,oBAAoB;AAC7D,QAAM,QAAQ,SAAS,QAAQ,UAAU,IAAI;AAE7C,QAAM,UAAU,MAAM,cAAc,iBAAiB;AACrD,QAAM,SAAS,MAAM,cAAc,mBAAmB;AACtD,QAAM,YAAY,MAAM,cAAc,kBAAkB;AACxD,QAAM,aAAa,MAAM,cAAc,oBAAoB;AAE3D,UAAQ,QAAQ,SAAS;AACzB,SAAO,QAAQ,kBAAkB;AACjC,SAAO,QAAQ,SAAS;AACxB,YAAU,cAAc;AACxB,aAAW,YAAY,WAAW;AAElC,SAAO;AACX;AAEA,SAAS,iBAAiB,OAAO;AAC7B,QAAM,OAAO,SAAS,cAAc,KAAK;AACzC,OAAK,YAAY;AAEjB,QAAM,QAAQ,UAAQ;AAClB,UAAM,QAAQ,KAAK,SAAS,KAAK,WAAW,OAAO,OAAO,IAAI,EAAE,CAAC;AACjE,QAAI,WAAW;AACf,QAAI,KAAK,WAAW,UAAU,KAAK,QAAS,YAAW,KAAK;AAE5D,QAAI,cAAc;AAClB,QAAI,MAAM,gBAAgB,QAAQ,KAAK,IAAI;AACvC,oBAAc,6CAA6C,KAAK,EAAE;AAAA,IACtE,WAAW,MAAM,gBAAgB,SAAS,KAAK,UAAU,KAAK,KAAK;AAC/D,oBAAc,6CAA6C,KAAK,UAAU,KAAK,EAAE;AAAA,IACrF;AAEA,UAAM,aAAa,oBAAoB,CAAC,OAAO,UAAU,KAAK,IAAI,KAAK,IAAI,KAAK,MAAM,CAAC;AAEvF,UAAM,OAAO,SAAS,cAAc,KAAK;AACzC,SAAK,YAAY;AACjB,SAAK,QAAQ,aAAa;AAC1B,SAAK,YAAY;AAAA,iFACwD,KAAK;AAAA,cACxE,WAAW,uEAAuE,QAAQ,WAAW,EAAE;AAAA,kFACnC,WAAW;AAAA;AAErF,SAAK,YAAY,IAAI;AAAA,EACzB,CAAC;AAED,SAAO;AACX;AAEA,IAAM,aAAa,CAAC,MAAM,UAAU,iBAAiB;AACjD,QAAM,WAAW,SAAS,eAAe,eAAe;AACxD,QAAM,QAAQ,SAAS,QAAQ,UAAU,IAAI;AAE7C,QAAM,OAAO,MAAM,cAAc,WAAW;AAC5C,QAAM,cAAc,MAAM,cAAc,eAAe;AACvD,QAAM,YAAY,MAAM,cAAc,kBAAkB;AACxD,QAAM,WAAW,MAAM,cAAc,iBAAiB;AAEtD,MAAI,aAAa,SAAS;AACtB,UAAM,gBAAgB,SAAS,cAAc,KAAK;AAClD,kBAAc,YAAY;AAC1B,kBAAc,QAAQ,SAAS;AAC/B,kBAAc,QAAQ,KAAK,KAAK;AAChC,kBAAc,YAAY;AAC1B,SAAK,QAAQ,aAAa;AAAA,EAC9B;AAEA,QAAM,YAAY,MAAM,SAAS,QAAQ,GAAG,SAAS,KAAK,EAAE;AAC5D,QAAM,cAAc,KAAK,UAAU,MAAM,WAAW,KAAK,KAAK,SAAS,MAAM;AAE7E,QAAM,eAAe,aAAa,UAC5B,uDAAuD,KAAK,KAAK,SACjE,uFAAuF,KAAK,IAAI;AAEtG,MAAI,cAAc;AAClB,MAAI,aAAa,SAAS;AACtB,kBAAc,qEAAqE,WAAW,8CAA8C,KAAK,MAAM,eAAe,KAAK,WAAW,QAAG;AACzL,aAAS,MAAM,iBAAiB;AAAA,EACpC,OAAO;AACH,kBAAc,2CAA2C,KAAK,OAAO,0BAA0B,WAAW;AAC1G,aAAS,MAAM,iBAAiB;AAAA,EACpC;AAEA,QAAM,cAAc,oBAAoB,CAAC,KAAK,OAAO,KAAK,MAAM,KAAK,QAAQ,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,IAAI,KAAK,SAAS,EAAE,CAAC;AAC5I,OAAK,QAAQ,aAAa;AAC1B,OAAK,QAAQ,SAAS,KAAK;AAE3B,cAAY,UAAU,OAAO,WAAW,SAAS;AACjD,cAAY,QAAQ,WAAW;AAC/B,cAAY,QAAQ,KAAK,KAAK;AAE9B,YAAU,YAAY;AACtB,WAAS,YAAY;AACrB,WAAS,MAAM,aAAa;AAE5B,SAAO;AACX;AAEA,IAAM,oBAAoB,CAAC,OAAO,MAAM,UAAU,cAAc,aAAa;AACzE,MAAI,CAAC,QAAQ,KAAK,WAAW,EAAG,QAAO,SAAS,uBAAuB;AAEvE,QAAM,WAAW,SAAS,cAAc,KAAK;AAC7C,WAAS,YAAY;AAErB,QAAM,WAAW,SAAS,uBAAuB;AACjD,OAAK,QAAQ,UAAQ,SAAS,YAAY,WAAW,MAAM,UAAU,YAAY,CAAC,CAAC;AACnF,WAAS,YAAY,QAAQ;AAE7B,QAAM,0BAA0B,SAAS,cAAc,KAAK;AAC5D,0BAAwB,YAAY;AACpC,0BAAwB,YAAY,QAAQ;AAE5C,QAAM,wBAAwB,oBAAoB,CAAC,OAAO,GAAG,KAAK,QAAQ,UAAQ,CAAC,KAAK,OAAO,KAAK,MAAM,KAAK,SAAS,IAAI,KAAK,SAAS,EAAE,CAAC,CAAC,CAAC;AAC/I,SAAO,gBAAgB,OAAO,yBAAyB,uBAAuB,QAAQ;AAC1F;AAEA,IAAM,sBAAsB,CAAC,MAAM,MAAM,UAAU;AAC/C,QAAM,WAAW,SAAS,uBAAuB;AACjD,MAAI,CAAC,KAAM,QAAO;AAElB,SAAO,QAAQ,IAAI,EAAE,QAAQ,CAAC,CAAC,YAAY,WAAW,MAAM;AACxD,QAAI,CAAC,YAAY,MAAO;AACxB,UAAM,QAAQ,YAAY;AAC1B,UAAM,QAAQ,YAAY,MAAM,WAAW,KAAK,YAAY,IAAI,KAAK;AACrE,UAAM,cAAc,oBAAoB,CAAC,OAAO,GAAG,MAAM,QAAQ,OAAK,EAAE,gBAAgB,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;AAEjH,UAAM,UAAU,0BAA0B,MAAM,IAAI,CAAC,SAAS;AAC1D,UAAI,KAAK,cAAe,QAAO;AAC/B,YAAM,YAAY,KAAK,QAAQ,KAAK,KAAK,SAAS;AAClD,YAAM,YAAY,YAAY,sBAAsB;AACpD,YAAM,iBAAiB,oBAAoB,CAAC,KAAK,MAAM,KAAK,MAAM,CAAC;AACnE,aAAO,4HAA4H,cAAc,yBAAyB,SAAS,kBAAkB,KAAK,MAAM,KAAK,IAAI,oDAAoD,KAAK,MAAM;AAAA,IAC5R,CAAC,EAAE,KAAK,EAAE,CAAC;AAEX,UAAM,cAAc,qFAAqF,WAAW,gHAAgH,UAAU,4BAA4B,IAAI,WAAW,KAAK,QAAQ,OAAO;AAC7S,aAAS,YAAY,SAAS,YAAY,EAAE,yBAAyB,WAAW,CAAC;AAAA,EACrF,CAAC;AAED,SAAO;AACX;AAEA,SAAS,mBAAmB,KAAK,OAAO,SAAS,OAAO,OAAO,UAAU;AACrE,QAAM,WAAW,SAAS,eAAe,wBAAwB;AACjE,QAAM,QAAQ,SAAS,QAAQ,UAAU,IAAI;AAE7C,QAAM,UAAU,MAAM,cAAc,wBAAwB;AAC5D,QAAM,aAAa,MAAM,cAAc,gBAAgB;AACvD,QAAM,iBAAiB,MAAM,cAAc,sBAAsB;AACjE,QAAM,SAAS,MAAM,cAAc,iBAAiB;AACpD,QAAM,SAAS,MAAM,cAAc,iBAAiB;AAEpD,QAAM,aAAa,QAAQ,IAAK,UAAU,QAAS,MAAM;AACzD,QAAM,SAAS;AACf,QAAM,gBAAgB,IAAI,KAAK,KAAK;AACpC,QAAM,SAAS,gBAAiB,aAAa,MAAO;AAEpD,QAAM,aAAa,MAAM,MAAM,UAAU;AACzC,QAAM,aAAa,aAAa,MAAM,QAAQ,WAAW,CAAC,GAAG,EAAE,IAAI;AACnE,QAAM,QAAQ,aAAa,WAAW,CAAC,IAAI;AAE3C,UAAQ,QAAQ,UAAU;AAC1B,UAAQ,QAAQ,aAAa;AAC7B,UAAQ,QAAQ,SAAS;AAEzB,aAAW,MAAM,kBAAkB;AACnC,aAAW,MAAM,mBAAmB;AACpC,aAAW,MAAM,SAAS,QAAQ,KAAK;AAEvC,iBAAe,cAAc,GAAG,KAAK,MAAM,UAAU,CAAC;AACtD,SAAO,cAAc,GAAG,UAAU,IAAI,KAAK;AAC3C,SAAO,cAAc,GAAG,OAAO,MAAM,KAAK;AAE1C,SAAO;AACX;AAEO,SAAS,0BAA0B;AACtC,QAAM,aAAa,CAAC,IAAI,kBAAkB,IAAI,WAAW;AACzD,MAAI,CAAC,MAAM,QAAQ,MAAM,CAAC,WAAW,MAAM,OAAK,CAAC,EAAG;AAEpD,QAAM,eAAe;AACrB,QAAM,iBAAiB,EAAE,OAAO,UAAU,OAAO,QAAQ;AAEzD,QAAM,wBAAwB,SAAS,uBAAuB;AAE9D,aAAW,CAAC,cAAc,KAAK,KAAK,OAAO,QAAQ,cAAc,GAAG;AAChE,QAAI,CAAC,MAAM,QAAQ,YAAY,EAAG;AAElC,eAAW,OAAO,MAAM,QAAQ,YAAY,GAAG;AAC3C,YAAM,WAAW,MAAM,QAAQ,YAAY,EAAE,GAAG;AAChD,UAAI,CAAC,SAAS,SAAS,SAAS,MAAM,WAAW,EAAG;AAEpD,YAAM,QAAQ,SAAS,MAAM;AAC7B,YAAM,UAAU,MAAM,SAAS,YAAY,GAAG,OAAO,QAAM,SAAS,MAAM,KAAK,UAAQ,KAAK,OAAO,EAAE,CAAC,EAAE,UAAU;AAClH,YAAM,kBAAkB,mBAAmB,cAAc,SAAS,MAAM,WAAW,KAAK,SAAS,IAAI,SAAS,OAAO,OAAO,GAAG;AAC/H,4BAAsB,YAAY,eAAe;AAAA,IACrD;AAAA,EACJ;AAEA,aAAW,QAAQ,eAAa;AAC5B,QAAI,CAAC,UAAW;AAChB,cAAU,YAAY;AAEtB,UAAM,UAAU,SAAS,cAAc,KAAK;AAC5C,YAAQ,YAAY;AACpB,YAAQ,KAAK,oBAAoB,UAAU,EAAE;AAE7C,YAAQ,YAAY,sBAAsB,UAAU,IAAI,CAAC;AAEzD,QAAI,UAAU,OAAO,qBAAqB;AACtC,YAAM,gBAAgB,SAAS,cAAc,IAAI;AACjD,oBAAc,YAAY;AAC1B,oBAAc,QAAQ,UAAU;AAChC,oBAAc,cAAc,MAAM,QAAQ,GAAG,MAAM,WAAW,GAAG,oBAAoB;AAErF,gBAAU,YAAY;AACtB,gBAAU,YAAY,aAAa;AACnC,gBAAU,YAAY,OAAO;AAAA,IACjC,OAAO;AACH,gBAAU,YAAY;AACtB,gBAAU,YAAY,OAAO;AAAA,IACjC;AAAA,EACJ,CAAC;AACL;AAEO,SAAS,aAAa,mBAAmB;AAC5C,QAAM,YAAY,kBAAkB,cAAc,eAAe;AACjE,QAAM,OAAO,kBAAkB,cAAc,mBAAmB;AAEhE,MAAI,CAAC,aAAa,CAAC,KAAM;AAEzB,QAAM,cAAc,UAAU;AAC9B,QAAM,mBAAmB,UAAU;AAEnC,wBAAsB,MAAM;AACvB,SAAK,MAAM,QAAQ,GAAG,WAAW;AACjC,SAAK,MAAM,YAAY,cAAc,gBAAgB;AAAA,EAC1D,CAAC;AACL;AAEO,SAAS,aAAa;AACzB,QAAM,SAAS,SAAS,gBAAgB,UAAU,SAAS,WAAW;AACtE,WAAS,iBAAiB,qBAAqB,EAAE,QAAQ,CAAC,UAAW,MAAM,UAAU,MAAO;AAChG;AAEO,SAAS,qBAAqB,aAAa;AAC9C,QAAM,YAAY,IAAI;AACtB,MAAI,CAAC,UAAW;AAEhB,QAAM,SAAS;AACf,YAAU,YAAY;AACtB,QAAM,MAAM,UAAU,cAAc,KAAK;AAEzC,QAAM,WAAW,eAAe,gBAAgB,MAAM;AACtD,YAAU,UAAU,OAAO,UAAU,QAAQ;AAC7C,MAAI,MAAM,OAAO,WAAW,qBAAqB;AAEjD,MAAI,MAAM,QAAQ;AAClB,MAAI,MAAM,SAAS;AACvB;AAEO,SAAS,wBAAwB;AACpC,WAAS,iBAAiB,kBAAkB,EAAE,QAAQ,YAAU;AAC5D,UAAM,QAAQ,OAAO,QAAQ;AAC7B,UAAM,UAAU,OAAO,QAAQ,mBAAmB;AAClD,UAAM,WAAW,UAAU,MAAM;AAEjC,QAAI,QAAS,SAAQ,UAAU,OAAO,aAAa,QAAQ;AAC3D,WAAO,UAAU,OAAO,aAAa,QAAQ;AAE7C,QAAI,CAAC,OAAO,cAAc,KAAK,GAAG;AAC9B,aAAO,YAAY;AAAA,IACvB;AACA,UAAM,MAAM,OAAO,cAAc,KAAK;AACtC,QAAI,MAAM,OAAO,WAAW,yBAAyB;AAAA,EACzD,CAAC;AACL;AAEO,SAAS,eAAe;AAC3B,MAAI,SAAS,UAAU,OAAO,MAAM;AACpC,MAAI,SAAS,UAAU,OAAO,QAAQ;AACtC,WAAS,KAAK,UAAU,OAAO,cAAc;AACjD;AAEA,SAAS,uBAAuB,aAAa,MAAM,UAAU,UAAU;AACnE,QAAM,YAAY,SAAS,eAAe,WAAW;AACrD,MAAI,CAAC,UAAW;AAEhB,YAAU,YAAY;AACtB,MAAI,CAAC,KAAM;AAEX,QAAM,WAAW,SAAS,uBAAuB;AACjD,aAAW,OAAO,MAAM;AACpB,UAAM,UAAU,KAAK,GAAG;AACxB,QAAI,CAAC,QAAQ,MAAO;AAEpB,UAAM,QAAQ,QAAQ,MAAM,WAAW,KAAK,QAAQ;AACpD,aAAS,YAAY,kBAAkB,OAAO,QAAQ,OAAO,UAAU,UAAU,GAAG,CAAC;AAAA,EACzF;AAEA,QAAM,UAAU,SAAS,cAAc,KAAK;AAC5C,UAAQ,YAAY;AACpB,UAAQ,YAAY,QAAQ;AAC5B,YAAU,YAAY,OAAO;AAE7B,kBAAgB,QAAQ;AAC5B;AAEA,SAAS,cAAc,gBAAgB;AACnC,MAAI,CAAC,MAAM,QAAQ,MAAO,QAAO;AACjC,aAAW,OAAO,MAAM,QAAQ,OAAO;AACnC,UAAM,QAAQ,MAAM,QAAQ,MAAM,GAAG,EAAE,MAAM,KAAK,UAAQ,KAAK,UAAU,cAAc;AACvF,QAAI,OAAO;AACP,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO;AACX;AAQO,SAAS,wBAAwB,MAAM,OAAO,CAAC,GAAG,gBAAgB,OAAO;AAC5E,MAAI,CAAC,IAAI,kBAAmB;AAE5B,QAAM,EAAE,SAAS,MAAM,IAAI;AAC3B,QAAMA,aAAY,CAAC,KAAK,aAAa,MAAM,QAAQ,KAAK,MAAM,WAAW,IAAI,GAAG,KAAK;AAErF,MAAI,mBAAmB,IAAI,kBAAkB,cAAc,oBAAoB;AAC/E,MAAI,CAAC,kBAAkB;AACnB,uBAAmB,SAAS,cAAc,KAAK;AAC/C,qBAAiB,YAAY;AAC7B,QAAI,kBAAkB,YAAY,gBAAgB;AAAA,EACtD;AAEA,MAAI,uBAAuB,IAAI,kBAAkB,cAAc,wBAAwB;AACvF,MAAI,CAAC,sBAAsB;AACvB,2BAAuB,SAAS,cAAc,KAAK;AACnD,yBAAqB,YAAY;AACjC,yBAAqB,YAAY;AACjC,QAAI,kBAAkB,YAAY,oBAAoB;AAAA,EAC1D;AAEA,MAAI,SAAS,WAAW;AACpB,yBAAqB,MAAM,UAAU;AACrC,qBAAiB,MAAM,UAAU;AACjC,qBAAiB,YAAY;AAE7B,UAAM,kBAAkB,SAAS,uBAAuB;AAExD,UAAM,WAAW,SAAS,OAAO,SAAS;AAC1C,UAAM,WAAW,SAAS,OAAO,SAAS;AAE1C,QAAI,UAAU;AACV,YAAM,mBAAmB,SAAS,cAAc,KAAK;AACrD,uBAAiB,YAAY;AAE7B,YAAM,cAAc,SAAS,cAAc,IAAI;AAC/C,kBAAY,YAAY;AACxB,kBAAY,cAAcA,WAAU,gBAAgB,oBAAoB;AACxE,uBAAiB,YAAY,WAAW;AAExC,YAAM,YAAY,SAAS,cAAc,KAAK;AAC9C,gBAAU,YAAY;AAEtB,cAAQ,MAAM,QAAQ,UAAQ;AAC1B,YAAI,CAAC,MAAM,WAAW,CAAC,MAAM,OAAQ;AACrC,cAAMC,kBAAiB;AACvB,cAAM,cAAc,MAAM,gBAAgB,QAAQ,CAACA,gBAAe,KAAK,KAAK,QAAQ,KAAK;AAEzF,YAAI,aAAa;AACb,eAAK,OAAO,QAAQ,WAAS;AACzB,kBAAM,eAAe,MAAM,UAAU,CAAC,KAAK;AAC3C,gBAAI,CAAC,aAAc;AACnB,kBAAM,OAAO,SAAS,cAAc,KAAK;AACzC,iBAAK,YAAY;AACjB,kBAAM,UAAU,MAAM,WAAW;AACjC,kBAAM,yBAAyB,aAAa,MAAM,EAAE,EAAE;AAAA,cAAI,UACtD,kBAAkB,KAAK,IAAI,KAAK,cAAc,IAAI,IAC9C,mHAAmH,cAAc,IAAI,EAAE,EAAE,KAAK,IAAI,YAClJ,SAAS,IAAI;AAAA,YACrB,EAAE,KAAK,EAAE;AACT,iBAAK,YAAY,8DAA8D,sBAAsB,QAAQ,UAAU,qCAAqC,OAAO,aAAa,EAAE,gDAAgD,KAAK,QAAQ,KAAK;AACpP,sBAAU,YAAY,IAAI;AAAA,UAC9B,CAAC;AAAA,QACL,OAAO;AACH,gBAAM,OAAO,SAAS,cAAc,KAAK;AACzC,eAAK,YAAY;AACjB,gBAAM,OAAO,KAAK,QAAQ,SAAS,KAAK,QAAQ,QAAQ;AACxD,gBAAM,UAAU,KAAK,QAAQ,QAAQ,KAAK,QAAQ,SAAS,OAAO,IAAI,KAAK,QAAQ,IAAI,MAAM;AAC7F,cAAI,CAAC,KAAM;AACX,gBAAM,yBAAyB,KAAK,MAAM,EAAE,EAAE;AAAA,YAAI,UAC9C,kBAAkB,KAAK,IAAI,KAAK,cAAc,IAAI,IAC9C,mHAAmH,cAAc,IAAI,EAAE,EAAE,KAAK,IAAI,YAClJ,SAAS,IAAI;AAAA,UACrB,EAAE,KAAK,EAAE;AACT,gBAAM,aAAa,8DAA8D,sBAAsB,yCAAyC,OAAO;AACvJ,gBAAM,cAAc,KAAK,UAAU,CAAC,GAAG,IAAI,WAAS;AAChD,kBAAM,UAAU,MAAM,SAAS,KAAK,IAAI,KAAK;AAC7C,kBAAM,MAAM,CAAC,GAAG,IAAI,KAAK,MAAM,OAAO,CAAC,GAAG,IAAI,OAAK,OAAO,MAAM,WAAW,OAAO,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;AAClG,kBAAM,UAAU,IAAI,SAAS,IAAI,iCAAiC,IAAI,KAAK,IAAI,CAAC,aAAa;AAC7F,mBAAO,MAAM,OAAO,IAAI,OAAO;AAAA,UACnC,CAAC,EAAE,KAAK,EAAE;AACV,eAAK,YAAY,GAAG,UAAU,uCAAuC,UAAU;AAC/E,oBAAU,YAAY,IAAI;AAAA,QAC9B;AAAA,MACJ,CAAC;AACD,uBAAiB,YAAY,SAAS;AACtC,sBAAgB,YAAY,gBAAgB;AAAA,IAChD;AAEA,QAAI,UAAU;AACV,YAAM,mBAAmB,SAAS,cAAc,KAAK;AACrD,uBAAiB,YAAY;AAE7B,YAAM,cAAc,SAAS,cAAc,IAAI;AAC/C,kBAAY,YAAY;AACxB,kBAAY,cAAcD,WAAU,gBAAgB,eAAe;AACnE,uBAAiB,YAAY,WAAW;AAExC,YAAM,YAAY,SAAS,cAAc,KAAK;AAC9C,gBAAU,YAAY;AACtB,cAAQ,MAAM,QAAQ,OAAK;AACvB,YAAI,CAAC,GAAG,QAAS;AACjB,cAAM,OAAO,SAAS,cAAc,KAAK;AACzC,aAAK,YAAY;AACjB,cAAM,SAAS,EAAE,QAAQ,KAAK,IAAI,KAAK;AACvC,cAAM,UAAU,EAAE,SAAS,KAAK,IAAI,KAAK;AACzC,cAAM,WAAW,EAAE,UAAU,KAAK,IAAI,KAAKA,WAAU,gBAAgB,sBAAsB;AAC3F,aAAK,YAAY,8DAA8D,EAAE,OAAO,wEAAwEA,WAAU,UAAU,UAAU,CAAC,WAAW,MAAM,sCAAsCA,WAAU,WAAW,WAAW,CAAC,WAAW,OAAO,oDAAoD,QAAQ;AACrW,kBAAU,YAAY,IAAI;AAAA,MAC9B,CAAC;AACD,uBAAiB,YAAY,SAAS;AACtC,sBAAgB,YAAY,gBAAgB;AAAA,IAChD;AAGA,UAAM,kBAAkB,SAAS,cAAc,KAAK;AACpD,QAAI,CAAC,eAAe;AAChB,sBAAgB,YAAY;AAAA,IAChC;AACA,oBAAgB,YAAY,eAAe;AAC3C,qBAAiB,YAAY,eAAe;AAAA,EAEhD,OAAO;AACH,qBAAiB,MAAM,UAAU;AACjC,yBAAqB,MAAM,UAAU;AAErC,UAAM,iBAAiB,qBAAqB,cAAc,yBAAyB;AACnF,QAAI,gBAAgB;AAChB,qBAAe,YAAY,iCAAiC,MAAM,KAAK;AAGvE,UAAI,CAAC,eAAe;AAChB,uBAAe,UAAU,OAAO,cAAc;AAC9C,aAAK,eAAe;AACpB,uBAAe,UAAU,IAAI,cAAc;AAAA,MAC/C;AAAA,IACJ;AAAA,EACJ;AACJ;AASA,SAAS,gBAAgB,cAAc;AACnC,MAAI,CAAC,aAAc,QAAO,CAAC;AAC3B,QAAM,OAAO,KAAK,MAAM,KAAK,UAAU,YAAY,CAAC;AAIpD,QAAM,UAAU;AAAA,IACZ,QAAQ,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,IAAI;AAAA,IAC9U,SAAS,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;AAAA,IACjI,YAAY,CAAC,MAAM,MAAM,MAAM,MAAM,IAAI;AAAA,IACzC,OAAO,CAAC,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,KAAK;AAAA,EAC9O;AAEA,aAAW,cAAc,MAAM;AAC3B,UAAM,UAAU,KAAK,UAAU;AAC/B,QAAI,CAAC,SAAS,OAAO,OAAQ;AAE7B,UAAM,gBAAgB,QAAQ;AAC9B,UAAM,YAAY,IAAI,IAAI,cAAc,IAAI,UAAQ,KAAK,MAAM,CAAC;AAEhE,UAAM,WAAW,CAAC,WAAW,cAAc,KAAK,OAAK,EAAE,WAAW,MAAM,KAAK,EAAE,eAAe,KAAK;AAEnG,QAAI,gBAAgB;AAGpB,QAAI,UAAU,IAAI,KAAK,KAAK,UAAU,IAAI,KAAK,GAAG;AAC9C,sBAAgB,QAAQ;AAAA,IAC5B,WAAW,UAAU,IAAI,IAAI,KAAK,UAAU,IAAI,IAAI,GAAG;AACnD,sBAAgB,QAAQ;AAAA,IAC5B,WAAW,UAAU,IAAI,IAAI,GAAG;AAC5B,sBAAgB,QAAQ;AAAA,IAC5B,WAAW,UAAU,IAAI,GAAG,GAAG;AAC3B,sBAAgB,QAAQ;AAAA,IAC5B;AAEA,QAAI,eAAe;AAEf,cAAQ,QAAQ,cAAc,IAAI,OAAK,IAAI,SAAS,CAAC,IAAI,EAAE,eAAe,KAAK,CAAC;AAAA,IACpF;AAAA,EACJ;AACA,SAAO;AACX;AAEO,SAAS,cAAc,QAAQ,MAAM;AACxC,QAAM,eAAe,CAAC,aAAa;AAC/B,QAAI;AAEA,UAAI,MAAM,QAAQ,KAAK,GAAG;AACtB,iBAAS;AAAA,MACb;AAAA,IACJ,SAAS,GAAG;AACR,cAAQ,MAAM,iBAAiB,CAAC;AAAA,IACpC;AAAA,EACJ;AAEA,QAAM,eAAe,QAAQ,CAAC,KAAK,IAAI,OAAO,KAAK,MAAM,OAAO,EAAE,OAAO,OAAK,CAAC,CAAC,MAAM,YAAY,iBAAiB,EAAE,SAAS,CAAC,CAAC;AAEhI,QAAM,YAAY;AAAA,IACd,UAAU,MAAM,aAAa,MAAM;AAC/B,UAAI,IAAI,eAAe,MAAM,QAAQ,UAAU;AAC3C,YAAI,YAAY,YAAY;AAC5B,YAAI,YAAY,YAAY,oBAAoB,gBAAgB,MAAM,QAAQ,QAAQ,GAAG,aAAM,oBAAoB,CAAC;AACpH,wBAAgB,UAAU;AAAA,MAC9B;AAAA,IACJ,CAAC;AAAA,IACD,UAAU,MAAM,aAAa,MAAM;AAC/B,UAAI,IAAI,eAAe,MAAM,QAAQ,UAAU;AAC3C,YAAI,YAAY,YAAY;AAC5B,YAAI,YAAY,YAAY,oBAAoB,gBAAgB,MAAM,QAAQ,QAAQ,GAAG,aAAM,oBAAoB,CAAC;AACpH,wBAAgB,UAAU;AAAA,MAC9B;AAAA,IACJ,CAAC;AAAA,IACD,WAAW,MAAM,aAAa,MAAM;AAChC,UAAI,CAAC,IAAI,gBAAgB,CAAC,MAAM,QAAQ,UAAW;AACnD,UAAI,aAAa,YAAY;AAC7B,YAAM,WAAW,SAAS,uBAAuB;AACjD,iBAAW,OAAO,MAAM,QAAQ,WAAW;AACvC,cAAM,UAAU,MAAM,QAAQ,UAAU,GAAG;AAC3C,cAAM,QAAQ,QAAQ,MAAM,WAAW,KAAK,QAAQ;AACpD,YAAI;AACJ,YAAI,QAAQ,SAAS,SAAS;AAC1B,wBAAc,iBAAiB,QAAQ,OAAO;AAAA,QAClD,WAAW,QAAQ,SAAS,cAAc;AACtC,wBAAc,SAAS,cAAc,KAAK;AAC1C,sBAAY,YAAY;AACxB,kBAAQ,QAAQ,QAAQ,SAAO;AAC3B,kBAAM,WAAW,IAAI,MAAM,MAAM,WAAW,KAAK,IAAI,MAAM;AAC3D,kBAAM,UAAU,iBAAiB,IAAI,IAAI;AACzC,wBAAY,aAAa,4DAA4D,QAAQ;AAC7F,wBAAY,UAAU,YAAY,OAAO;AAAA,UAC7C,CAAC;AAAA,QACL;AACA,YAAI,aAAa;AACb,gBAAM,iBAAiB,SAAS,cAAc,KAAK;AACnD,yBAAe,YAAY;AAC3B,yBAAe,YAAY,WAAW;AACtC,gBAAM,cAAc,oBAAoB,CAAC,OAAO,KAAK,UAAU,QAAQ,OAAO,CAAC,CAAC;AAChF,mBAAS,YAAY,gBAAgB,OAAO,gBAAgB,aAAa,GAAG,CAAC;AAAA,QACjF;AAAA,MACJ;AACA,YAAM,UAAU,SAAS,cAAc,KAAK;AAC5C,cAAQ,YAAY;AACpB,cAAQ,YAAY,QAAQ;AAC5B,UAAI,aAAa,YAAY,OAAO;AACpC,sBAAgB,WAAW;AAAA,IAC/B,CAAC;AAAA,IACD,SAAS,MAAM,aAAa,MAAM;AAC9B,UAAI,CAAC,IAAI,cAAc,CAAC,MAAM,QAAQ,QAAS;AAC/C,UAAI,WAAW,YAAY;AAC3B,YAAM,WAAW,SAAS,uBAAuB;AACjD,iBAAW,cAAc,MAAM,QAAQ,SAAS;AAC5C,cAAM,cAAc,MAAM,QAAQ,QAAQ,UAAU;AACpD,cAAM,eAAe,YAAY,MAAM,WAAW,KAAK,YAAY;AACnE,cAAM,OAAO,SAAS,cAAc,KAAK;AACzC,aAAK,YAAY;AACjB,oBAAY,MAAM,QAAQ,UAAQ;AAC9B,gBAAM,WAAW,KAAK,MAAM,WAAW,KAAK,KAAK;AACjD,gBAAM,iBAAiB,oBAAoB,CAAC,SAAS,OAAO,SAAS,OAAO,CAAC;AAC7E,gBAAM,qBAAqB;AAC3B,gBAAM,QAAQ,SAAS,QAAQ,MAAM,kBAAkB;AACvD,cAAI,cAAc,SAAS;AAC3B,cAAI,cAAc;AAClB,cAAI,OAAO,OAAO;AACd,0BAAc,SAAS,QAAQ,UAAU,GAAG,MAAM,KAAK;AACvD,0BAAc,SAAS,QAAQ,UAAU,MAAM,KAAK,EAAE,QAAQ,SAAS,EAAE;AAAA,UAC7E;AACA,gBAAM,OAAO,SAAS,cAAc,KAAK;AACzC,eAAK,YAAY;AACjB,eAAK,QAAQ,aAAa;AAC1B,eAAK,YAAY,oDAAoD,SAAS,KAAK,qFAAqF,WAAW,SAAS,cAAc,6CAA6C,WAAW,WAAW,EAAE;AAC/Q,eAAK,YAAY,IAAI;AAAA,QACzB,CAAC;AACD,cAAM,iBAAiB,SAAS,cAAc,KAAK;AACnD,uBAAe,YAAY;AAC3B,uBAAe,YAAY,IAAI;AAC/B,cAAM,aAAa,oBAAoB,CAAC,cAAc,GAAG,YAAY,MAAM,QAAQ,UAAQ,CAAC,KAAK,IAAI,OAAO,KAAK,IAAI,SAAS,KAAK,IAAI,OAAO,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC;AACjK,iBAAS,YAAY,gBAAgB,cAAc,gBAAgB,YAAY,UAAU,CAAC;AAAA,MAC9F;AACA,YAAM,UAAU,SAAS,cAAc,KAAK;AAC5C,cAAQ,YAAY;AACpB,cAAQ,YAAY,QAAQ;AAC5B,UAAI,WAAW,YAAY,OAAO;AAClC,sBAAgB,SAAS;AAAA,IAC7B,CAAC;AAAA,IACD,OAAO,MAAM,aAAa,MAAM,uBAAuB,SAAS,MAAM,QAAQ,OAAO,SAAS,wDAAwD,CAAC;AAAA,IACvJ,OAAO,MAAM,aAAa,MAAM,uBAAuB,SAAS,MAAM,QAAQ,OAAO,SAAS,uDAAuD,CAAC;AAAA,EAC1J;AAEA,eAAa,QAAQ,SAAO;AACxB,QAAI,UAAU,GAAG,GAAG;AAChB,gBAAU,GAAG,EAAE;AAAA,IACnB;AAAA,EACJ,CAAC;AACL;AAGO,SAAS,mBAAmB,eAAe,CAAC,GAAG,eAAe,CAAC,GAAG;AACrE,QAAM,kBAAkB,SAAS,eAAe,wBAAwB;AACxE,MAAI,CAAC,gBAAiB;AAEtB,QAAM,qBAAqB,MAAM,KAAK,oBAAI,IAAI,CAAC,GAAG,cAAc,GAAG,YAAY,CAAC,CAAC;AAEjF,QAAM,WAAW,SAAS,uBAAuB;AACjD,QAAM,mBAAmB,QAAQ,WAAS;AACtC,UAAM,YAAY,UAAU,OAAO;AACnC,UAAM,eAAe,aAAa,SAAS,KAAK,KAAK,CAAC;AAEtD,UAAM,mBAAmB,eAAe,gFAAgF,KAAK,yBAAyB,MAAM,YAAY,CAAC,6XAA6X;AACtiB,UAAM,cAAc,SAAS,cAAc,KAAK;AAChD,gBAAY,YAAY;AACxB,gBAAY,YAAY,oDAAoD,KAAK,iCAAiC,MAAM,YAAY,CAAC,YAAY,gBAAgB;AACjK,aAAS,YAAY,WAAW;AAAA,EACpC,CAAC;AAED,kBAAgB,YAAY;AAC5B,kBAAgB,YAAY,QAAQ;AACxC;AAEO,SAAS,4BAA4B;AACxC,QAAM,eAAe,SAAS,cAAc,qDAAqD;AACjG,MAAI,cAAc;AACd,eAAW,MAAM;AACb,mBAAa,eAAe;AAAA,QACxB,UAAU;AAAA,QACV,OAAO;AAAA,QACP,QAAQ;AAAA,MACZ,CAAC;AAAA,IACL,GAAG,GAAG;AAAA,EACV;AACJ;AAEO,SAAS,yBAAyB,aAAa;AAClD,QAAMA,aAAY,CAAC,KAAK,WAAW,OAAO,MAAM,QAAQ,KAAK,MAAM,WAAW,IAAI,GAAG,KAAK;AAE1F,QAAM,kBAAkB,gBAAgB;AAExC,QAAM,kBAAkB,kBAClBA,WAAU,oBAAoB,qBAAqB,IACnDA,WAAU,qBAAqB,oBAAoB;AAEzD,QAAM,wBAAwB,kBACxBA,WAAU,oBAAoB,qBAAqB,IACnDA,WAAU,wBAAwB,uBAAuB;AAE/D,MAAI,IAAI,aAAa;AACjB,QAAI,YAAY,cAAc;AAAA,EAClC;AACA,MAAI,IAAI,mBAAmB;AACvB,QAAI,kBAAkB,cAAc;AAAA,EACxC;AACJ;AAeO,SAAS,iBAAiB,EAAE,OAAO,SAAS,SAAS,QAAQ,QAAQ,GAAG;AAC3E,SAAO,IAAI,QAAQ,CAAC,YAAY;AAE5B,QAAI,CAAC,IAAI,sBAAuB;AAGhC,UAAM,WAAW,SAAS,eAAe,wBAAwB;AACjE,UAAM,QAAQ,SAAS,QAAQ,UAAU,IAAI;AAE7C,UAAM,mBAAmB,IAAI,sBAAsB,cAAc,0BAA0B;AAC3F,QAAI,CAAC,iBAAkB;AAGvB,qBAAiB,YAAY;AAC7B,qBAAiB,YAAY,KAAK;AAElC,UAAM,cAAc,iBAAiB,cAAc,sBAAsB;AACzE,UAAM,gBAAgB,iBAAiB,cAAc,wBAAwB;AAC7E,UAAM,gBAAgB,iBAAiB,cAAc,wBAAwB;AAC7E,UAAM,WAAW,iBAAiB,cAAc,0BAA0B;AAE1E,gBAAY,cAAc;AAC1B,kBAAc,cAAc;AAC5B,kBAAc,YAAY;AAE1B,QAAI;AAEJ,UAAM,oBAAoB,CAAC,WAAW;AAClC,aAAO,MAAM;AACT,8BAAsB;AACtB,0BAAkB;AAClB,YAAI,WAAW,WAAW;AACtB,kBAAQ,SAAS;AAAA,QACrB,OAAO;AACH,kBAAQ,QAAQ;AAAA,QACpB;AACA,YAAI,QAAS,SAAQ,MAAM;AAAA,MAC/B;AAAA,IACJ;AAEA,YAAQ,QAAQ,eAAa;AACzB,YAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,aAAO,cAAc,UAAU;AAC/B,aAAO,YAAY,gBAAgB,UAAU,aAAa,wBAAwB;AAClF,aAAO,QAAQ,aAAa,UAAU;AACtC,aAAO,iBAAiB,SAAS,kBAAkB,UAAU,MAAM,CAAC;AACpE,oBAAc,YAAY,MAAM;AAAA,IACpC,CAAC;AAGD,aAAS,iBAAiB,SAAS,kBAAkB,QAAQ,CAAC;AAG9D,UAAM,sBAAsB,CAAC,MAAM;AAC/B,UAAI,EAAE,WAAW,IAAI,wBAAwB,EAAE,WAAW,IAAI,qBAAqB;AAC/E,0BAAkB,QAAQ,EAAE;AAAA,MAChC;AAAA,IACJ;AACA,QAAI,qBAAqB,iBAAiB,SAAS,mBAAmB;AACtE,QAAI,oBAAoB,iBAAiB,SAAS,mBAAmB;AAGrE,4BAAwB,MAAM;AAC1B,UAAI,qBAAqB,oBAAoB,SAAS,mBAAmB;AACzE,UAAI,oBAAoB,oBAAoB,SAAS,mBAAmB;AACxE,eAAS,oBAAoB,SAAS,kBAAkB,QAAQ,CAAC;AACjE,cAAQ,QAAQ,eAAa;AACzB,cAAM,MAAM,cAAc,cAAc,sBAAsB,UAAU,MAAM,IAAI;AAClF,YAAI,IAAK,KAAI,oBAAoB,SAAS,kBAAkB,UAAU,MAAM,CAAC;AAAA,MACjF,CAAC;AAAA,IACL;AAGA,aAAS,KAAK,UAAU,IAAI,gBAAgB;AAC5C,QAAI,sBAAsB,UAAU,OAAO,cAAc;AACzD,QAAI,qBAAqB,UAAU,IAAI,QAAQ;AAC/C,QAAI,oBAAoB,UAAU,IAAI,QAAQ;AAE9C,QAAI,OAAQ,QAAO;AAAA,EACvB,CAAC;AACL;AAQO,SAAS,gBAAgB,OAAO,SAAS;AAC5C,QAAMA,aAAY,CAAC,QAAQ,MAAM,QAAQ,KAAK,MAAM,WAAW,IAAI,GAAG,KAAK,IAAI,GAAG;AAClF,SAAO,iBAAiB;AAAA,IACpB;AAAA,IACA;AAAA,IACA,SAAS,CAAC,EAAE,MAAMA,WAAU,YAAY,IAAI,GAAG,WAAW,wBAAwB,QAAQ,UAAU,CAAC;AAAA,EACzG,CAAC,EAAE,KAAK,MAAM;AAAA,EAAC,CAAC;AACpB;AAoBO,SAAS,oBAAoB;AAChC,WAAS,KAAK,UAAU,OAAO,gBAAgB;AAC/C,MAAI,sBAAsB,UAAU,OAAO,QAAQ;AACnD,MAAI,qBAAqB,UAAU,OAAO,QAAQ;AAClD,aAAW,MAAM,IAAI,uBAAuB,UAAU,IAAI,cAAc,GAAG,GAAG;AAE9E,MAAI,IAAI,uBAAuB;AAC3B,UAAM,mBAAmB,IAAI,sBAAsB,cAAc,0BAA0B;AAC3F,QAAI,kBAAkB;AAClB,iBAAW,MAAM;AACb,yBAAiB,YAAY;AAAA,MACjC,GAAG,GAAG;AAAA,IACV;AAAA,EACJ;AACJ;;;ACx4BO,IAAM,YAAY,OAAO,cAAc,GAAG;AAAA,EAC7C,QAAQ,IAAI,YAAY;AACpB,QAAI,aAAa,GAAG;AAChB,SAAG,kBAAkB,QAAQ;AAC7B,SAAG,kBAAkB,UAAU;AAC/B,SAAG,kBAAkB,UAAU;AAAA,IACnC;AACA,QAAI,aAAa,GAAG;AAChB,SAAG,kBAAkB,kBAAkB;AAAA,IAC3C;AAEA,QAAI,aAAa,GAAG;AAChB,SAAG,kBAAkB,OAAO;AAAA,IAChC;AAAA,EACJ;AACJ,CAAC;AAED,eAAsB,YAAY;AAC9B,MAAI;AACA,UAAM,KAAK,MAAM;AACjB,UAAM,CAAC,MAAM,OAAO,aAAa,IAAI,MAAM,QAAQ,IAAI;AAAA,MACnD,GAAG,IAAI,YAAY,UAAU;AAAA,MAC7B,GAAG,IAAI,YAAY,cAAc;AAAA,MACjC,GAAG,IAAI,YAAY,eAAe;AAAA,IACtC,CAAC;AAED,UAAM,cAAc,QAAQ;AAC5B,UAAM,eAAe,SAAS,OAAO;AAErC,UAAM,uBAAuB,gBAAgB,MAAM,YAAY;AAC/D,UAAM,YAAY,sBAAsB,aAAa;AAErD,UAAM,WAAY,MAAM,GAAG,IAAI,YAAY,MAAM,YAAY,KAAM,EAAE,OAAO,CAAC,GAAG,OAAO,CAAC,EAAE;AAAA,EAC9F,SAAS,OAAO;AACZ,YAAQ,MAAM,uCAAuC,KAAK;AAC1D,UAAM,cAAc;AACpB,UAAM,eAAe,OAAO;AAC5B,UAAM,WAAW,EAAE,OAAO,CAAC,GAAG,OAAO,CAAC,EAAE;AAAA,EAC5C;AACJ;AAEA,eAAsB,eAAe;AACjC,MAAI;AACA,UAAM,KAAK,MAAM;AACjB,UAAM,GAAG,IAAI,YAAY,MAAM,UAAU,MAAM,YAAY;AAC3D,4BAAwB;AAAA,EAC5B,SAAS,OAAO;AACZ,YAAQ,MAAM,uCAAuC,KAAK;AAAA,EAC9D;AACJ;AAEA,eAAsB,YAAY,KAAK,OAAO;AAC1C,MAAI;AACA,UAAM,KAAK,MAAM;AACjB,UAAM,GAAG,IAAI,YAAY,OAAO,GAAG;AAAA,EACvC,SAAS,OAAO;AACZ,YAAQ,MAAM,yBAAyB,GAAG,mBAAmB,KAAK;AAAA,EACtE;AACJ;AAEA,eAAsB,YAAY,OAAO,OAAO;AAC5C,MAAI,MAAM,QAAQ,KAAK,GAAG;AACtB;AAAA,EACJ;AAEA,MAAI;AACA,UAAM,WAAW,MAAM,MAAM,GAAG,OAAO,QAAQ,IAAI,KAAK,IAAI,KAAK,OAAO;AACxE,QAAI,CAAC,SAAS,IAAI;AACd,YAAM,IAAI,MAAM,uBAAuB,SAAS,MAAM,EAAE;AAAA,IAC5D;AACA,UAAM,OAAO,MAAM,SAAS,KAAK;AACjC,UAAM,QAAQ,KAAK,IAAI;AAAA,EAC3B,SAAS,OAAO;AACZ,YAAQ,MAAM,8BAA8B,KAAK,KAAK,KAAK;AAC3D,UAAM,aAAa,SAAS,eAAe,KAAK;AAChD,QAAI,YAAY;AACZ,YAAME,aAAY,CAAC,KAAK,eAAe,CAAC,MAAM;AAC1C,YAAI,OAAO,MAAM,QAAQ,KAAK,MAAM,WAAW,IAAI,GAAG,KAAK,MAAM,QAAQ,KAAK,IAAI,IAAI,GAAG,KAAK,IAAI,GAAG;AACrG,mBAAW,CAAC,aAAa,KAAK,KAAK,OAAO,QAAQ,YAAY,GAAG;AAC7D,iBAAO,KAAK,QAAQ,IAAI,WAAW,KAAK,KAAK;AAAA,QACjD;AACA,eAAO;AAAA,MACX;AACA,YAAM,YAAYA,WAAU,4BAA4B,EAAE,MAAa,CAAC;AACxE,iBAAW,YAAY,2CAA2C,SAAS;AAAA,IAC/E;AACA,UAAM;AAAA,EACV;AACJ;AAEA,eAAsB,YAAY,OAAO;AACrC,QAAM,YAAY,MAAM,UAAU,OAAO,YAAY,UAAU,EAC1D,KAAK,SAAO;AACT,QAAI,CAAC,IAAI,GAAI,OAAM,IAAI,MAAM,4BAA4B,IAAI,MAAM,EAAE;AACrE,WAAO,IAAI,KAAK;AAAA,EACpB,CAAC,EACA,MAAM,SAAO;AACV,YAAQ,MAAM,kDAAkD,GAAG;AACnE,WAAO,CAAC;AAAA,EACZ,CAAC;AAEL,QAAM,KAAK,MAAM;AACjB,QAAM,YAAY,MAAM,GAAG,IAAI,UAAU,KAAK;AAE9C,MAAI,WAAW;AACX,UAAM,UAAU;AAAA,EACpB,OAAO;AACH,UAAM,UAAU,CAAC;AAAA,EACrB;AAEA,QAAM,QAAQ,KAAK,MAAM;AAC7B;AAUA,eAAsB,SAAS,OAAO,OAAO,SAAS;AAClD,MAAI;AACA,UAAM,KAAK,MAAM;AACjB,UAAM,MAAM,GAAG,KAAK,IAAI,KAAK;AAC7B,UAAM,aAAa;AAAA,MACf;AAAA,MACA,eAAc,oBAAI,KAAK,GAAE,YAAY;AAAA,IACzC;AACA,UAAM,GAAG,IAAI,SAAS,YAAY,GAAG;AAAA,EACzC,SAAS,OAAO;AACZ,YAAQ,MAAM,yBAAyB,KAAK,IAAI,KAAK,KAAK,KAAK;AAAA,EACnE;AACJ;AAUA,eAAsB,SAAS,OAAO,OAAO;AACzC,MAAI;AACA,UAAM,KAAK,MAAM;AACjB,UAAM,MAAM,GAAG,KAAK,IAAI,KAAK;AAE7B,UAAM,OAAO,MAAM,GAAG,IAAI,SAAS,GAAG;AACtC,WAAO,QAAQ;AAAA,EACnB,SAAS,OAAO;AACZ,YAAQ,MAAM,0BAA0B,KAAK,IAAI,KAAK,KAAK,KAAK;AAChE,WAAO;AAAA,EACX;AACJ;AAMA,eAAsB,oBAAoB,OAAO;AAC7C,MAAI;AACA,UAAM,KAAK,MAAM;AACjB,UAAM,KAAK,GAAG,YAAY,SAAS,WAAW;AAC9C,UAAM,OAAO,MAAM,GAAG,MAAM,WAAW;AACvC,UAAM,YAAY,KAAK,OAAO,SAAO,IAAI,WAAW,GAAG,KAAK,GAAG,CAAC;AAChE,UAAM,QAAQ,IAAI,UAAU,IAAI,SAAO,GAAG,MAAM,OAAO,GAAG,CAAC,CAAC;AAC5D,UAAM,GAAG;AAAA,EACb,SAAS,OAAO;AACZ,YAAQ,MAAM,kCAAkC,KAAK,KAAK,KAAK;AAAA,EACnE;AACJ;;;ACpKA,eAAe,8BAA8B;AACzC,QAAM,oBAAoB,CAAC,SAAS,OAAO;AAC3C,QAAM,WAAW,CAAC;AAClB,aAAW,QAAQ,mBAAmB;AAClC,QAAI,CAAC,MAAM,QAAQ,IAAI,GAAG;AAEtB,YAAM,KAAK,MAAM;AACjB,YAAM,gBAAgB,MAAM,GAAG,IAAI,UAAU,MAAM,YAAY;AAC/D,UAAI,CAAC,eAAe;AAChB,iBAAS,KAAK,YAAY,MAAM,cAAc,IAAI,CAAC;AAAA,MACvD;AAAA,IACJ;AAAA,EACJ;AACA,MAAI,SAAS,SAAS,GAAG;AACrB,QAAI;AACA,YAAM,QAAQ,IAAI,QAAQ;AAAA,IAC9B,SAAS,OAAO;AACZ,cAAQ,MAAM,wDAAwD,KAAK;AAAA,IAC/E;AAAA,EACJ;AACJ;AAIA,eAAeC,WAAU,YAAY,MAAM;AAEvC,QAAM,UAAkB,SAAS,GAAG,IAAI;AAGxC,MAAI,YAAY,YAAY;AACxB,4BAAwB;AAAA,EAC5B;AAIA,QAAM,gBAAgB,CAAC,CAAC,YAAY,iBAAiB,EAAE,SAAS,OAAO;AACvE,QAAM,eAAe,SAAS,iBAAiB,mBAAmB;AAElE,eAAa,QAAQ,SAAO;AACxB,QAAI,MAAM,UAAU,gBAAgB,SAAS;AAC7C,QAAI,UAAU,OAAO,UAAU;AAAA,EACnC,CAAC;AAED,MAAI,eAAe;AACf,UAAM,OAAO,MAAM,SAAS,MAAM,cAAc,OAAO;AACvD,UAAM,aAAc,QAAQ,OAAO,SAAS,WAAY,CAAC,CAAC,KAAK,SAAS,KAAK,IAAI,CAAC,CAAC,MAAM,KAAK;AAC9F,iBAAa,QAAQ,SAAO;AACxB,UAAI,UAAU,OAAO,YAAY,UAAU;AAAA,IAC/C,CAAC;AAAA,EACL;AACJ;AAEA,SAAS,qBAAqB;AAC1B,SAAO;AACX;AAEA,SAAS,sBAAsB;AAC3B,SAAO;AACX;AAEA,SAAS,kBAAkB,UAAU;AACjC,MAAI,CAAC,SAAU;AAEf,MAAI,SAAS,UAAU,MAAM,cAAc;AACvC,aAAS,SAAS,OAAO,IAAI;AAAA,EACjC,OAAO;AACH,IAAAA,WAAU,SAAS,SAAS,MAAM,OAAO,IAAI;AAAA,EACjD;AACJ;AAEA,SAAS,qBAAqB,SAAS;AACnC,MAAI,YAAY;AAChB,aAAW,OAAO,MAAM,QAAQ,OAAO;AACnC,UAAM,QAAQ,MAAM,QAAQ,MAAM,GAAG,EAAE,MAAM,KAAK,UAAQ,KAAK,OAAO,OAAO;AAC7E,QAAI,OAAO;AACP,kBAAY;AACZ;AAAA,IACJ;AAAA,EACJ;AAEA,MAAI,CAAC,WAAW;AACZ,YAAQ,MAAM,yBAAyB,OAAO;AAC9C;AAAA,EACJ;AAEA,QAAM,WAAW,SAAS,eAAe,sBAAsB;AAC/D,MAAI,CAAC,UAAU;AACX,YAAQ,MAAM,yCAAyC;AACvD;AAAA,EACJ;AACA,QAAM,QAAQ,SAAS,QAAQ,UAAU,IAAI;AAE7C,QAAMC,aAAY,CAAC,QAAQ,MAAM,QAAQ,KAAK,MAAM,WAAW,IAAI,GAAG,KAAK,MAAM,QAAQ,KAAK,IAAI,IAAI,GAAG,KAAK,IAAI,GAAG;AAGrH,QAAM,cAAc,iCAAiC,EAAE,cAAc,UAAU;AAC/E,QAAM,cAAc,oCAAoC,EAAE,cAAc,UAAU,UAAU,MAAM,WAAW,KAAK,UAAU,SAAS,MAAM;AAG3I,QAAM,kBAAkB,MAAM,cAAc,uCAAuC;AACnF,MAAI,UAAU,YAAY,UAAU,SAAS,SAAS,GAAG;AACrD,UAAM,eAAe,MAAM,cAAc,oCAAoC;AAC7E,oBAAgB,MAAM,UAAU;AAChC,oBAAgB,cAAc,iBAAiB,EAAE,cAAcA,WAAU,eAAe;AACxF,cAAU,SAAS,QAAQ,QAAM;AAC7B,YAAM,KAAK,SAAS,cAAc,IAAI;AACtC,SAAG,YAAY;AACf,SAAG,YAAY;AAAA,4EACiD,GAAG,IAAI,OAAO,GAAG,OAAO;AAAA,wDAC5C,GAAG,QAAQ,MAAM,WAAW,KAAK,GAAG,QAAQ,EAAE;AAC1F,mBAAa,YAAY,EAAE;AAAA,IAC/B,CAAC;AAAA,EACL;AAGA,QAAM,kBAAkB,MAAM,cAAc,uCAAuC;AACnF,QAAM,iBAAiB,UAAU,UAAU;AAC3C,QAAM,aAAa,UAAU,UAAU;AACvC,MAAI,kBAAkB,YAAY;AAC9B,oBAAgB,MAAM,UAAU;AAChC,QAAI,eAAe;AACnB,QAAI,gBAAgB;AAChB,qBAAe,eAAe,IAAI,WAAS,MAAM,IAAI,SAAS,MAAM,CAAC,OAAO,MAAM,CAAC,iBAAiB,MAAM,CAAC,EAAE,KAAK,EAAE;AAAA,IACxH,OAAO;AACH,qBAAe;AAAA,IACnB;AACA,UAAM,cAAc,kCAAkC,EAAE,YAAY;AACpE,UAAM,cAAc,2CAA2C,EAAE,cAAc,UAAU,WAAW,MAAM,WAAW,KAAK,UAAU,UAAU,MAAM;AAAA,EACxJ;AAGA,QAAM,eAAe,UAAU,WAAW,MAAM,WAAW,KAAK,UAAU,UAAU,MAAM;AAC1F,QAAM,cAAc,UAAU,UAAU,MAAM,WAAW,KAAK,UAAU,SAAS,MAAM;AACvF,MAAI,gBAAgB,aAAa;AAC7B,UAAM,cAAc,MAAM,cAAc,mCAAmC;AAC3E,gBAAY,MAAM,UAAU;AAC5B,gBAAY,cAAc,iBAAiB,EAAE,cAAcA,WAAU,WAAW;AAEhF,QAAI,aAAa;AACb,YAAM,iBAAiB,MAAM,cAAc,sCAAsC;AACjF,qBAAe,MAAM,UAAU;AAC/B,qBAAe,cAAc,iBAAiB,EAAE,cAAcA,WAAU,cAAc;AACtF,qBAAe,cAAc,mCAAmC,EAAE,cAAc;AAAA,IACpF;AACA,QAAI,cAAc;AACd,YAAM,kBAAkB,MAAM,cAAc,uCAAuC;AACnF,sBAAgB,MAAM,UAAU;AAChC,sBAAgB,cAAc,iBAAiB,EAAE,cAAcA,WAAU,eAAe;AACxF,sBAAgB,cAAc,oCAAoC,EAAE,cAAc;AAAA,IACtF;AAAA,EACJ;AAGA,MAAI,2BAA2B,YAAY;AAC3C,MAAI,2BAA2B,YAAY,KAAK;AAEhD,QAAM,gBAAgB,IAAI,2BAA2B,cAAc,6BAA6B;AAChG,QAAM,gBAAgB,IAAI,2BAA2B,cAAc,iBAAiB;AACpF,MAAI,iBAAiB,eAAe;AAChC,UAAM,cAAc,MAAM;AACtB,YAAM,aAAa,cAAc,eAAe,cAAc,aAAa,cAAc,eAAe;AACxG,oBAAc,MAAM,UAAU,aAAa,MAAM;AAAA,IACrD;AACA,kBAAc,iBAAiB,UAAU,WAAW;AACpD,eAAW,aAAa,EAAE;AAAA,EAC9B;AAEA,MAAI,iBAAiB,UAAU,IAAI,QAAQ;AAC3C,WAAS,KAAK,UAAU,IAAI,gBAAgB;AAChD;AAEA,SAAS,wBAAwB;AAC7B,MAAI,iBAAiB,UAAU,OAAO,QAAQ;AAC9C,WAAS,KAAK,UAAU,OAAO,gBAAgB;AACnD;AAEA,eAAe,iBAAiB;AAC5B,QAAM,QAAQ,MAAM;AACpB,MAAI,CAAC,SAAS,CAAC,YAAY,iBAAiB,EAAE,SAAS,KAAK,EAAG;AAE/D,QAAMA,aAAY,CAAC,KAAK,eAAe,CAAC,MAAM;AAC1C,QAAI,OAAO,MAAM,QAAQ,KAAK,MAAM,WAAW,IAAI,GAAG,KAAK,IAAI,GAAG;AAClE,QAAI,QAAQ,iBAAiB,CAAC,MAAM,QAAQ,KAAK,MAAM,WAAW,IAAI,GAAG,GAAG;AACxE,aAAO;AAAA,IACX;AACA,eAAW,CAAC,aAAa,KAAK,KAAK,OAAO,QAAQ,YAAY,GAAG;AAC7D,aAAO,KAAK,QAAQ,IAAI,WAAW,KAAK,KAAK;AAAA,IACjD;AACA,WAAO;AAAA,EACX;AAEA,QAAM,YAAY,SAAS,cAAc,4BAA4B,KAAK,SAAS;AACnF,QAAM,iBAAiB,YAAY,UAAU,YAAY,KAAK,IAAI;AAElE,MAAI,gBAAgB,cAAcA,WAAU,YAAY,EAAE,SAAS,eAAe,CAAC;AACnF,MAAI,aAAa,cAAcA,WAAU,WAAW;AACpD,MAAI,cAAc,cAAcA,WAAU,kBAAkB;AAE5D,QAAM,OAAO,MAAM,SAAS,MAAM,cAAc,KAAK;AACrD,QAAM,kBAAkB,SAAS,eAAe,mBAAmB;AAEnE,MAAI,iBAAiB;AAErB,MAAI,QAAQ,OAAO,SAAS,YAAY,KAAK,cAAc;AACvD,qBAAiB,KAAK,WAAW;AACjC,UAAM,IAAI,IAAI,KAAK,KAAK,YAAY;AACpC,QAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,GAAG;AACrB,YAAM,gBAAgB,EAAE,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC;AAClD,sBAAgB,cAAcA,WAAU,eAAe,EAAE,MAAM,cAAc,CAAC;AAAA,IAClF,OAAO;AACH,sBAAgB,cAAc;AAAA,IAClC;AAAA,EACJ,WAAW,OAAO,SAAS,UAAU;AACjC,qBAAiB;AACjB,oBAAgB,cAAc;AAAA,EAClC,OAAO;AACH,qBAAiB;AACjB,oBAAgB,cAAc;AAAA,EAClC;AAEA,MAAI,cAAc,QAAQ;AAE1B,QAAM,MAAM,kBAAkB;AAE9B,WAAS,KAAK,UAAU,IAAI,gBAAgB;AAC5C,MAAI,WAAW,UAAU,OAAO,cAAc;AAC9C,MAAI,mBAAmB,UAAU,IAAI,QAAQ;AAC7C,MAAI,kBAAkB,UAAU,IAAI,QAAQ;AAC5C,MAAI,cAAc,MAAM;AAC5B;AAEA,SAAS,kBAAkB;AACvB,QAAM,iBAAiB,IAAI,cAAc;AACzC,QAAM,kBAAkB,MAAM,MAAM;AAEpC,MAAI,mBAAmB,iBAAiB;AAEpC;AAAA,MACI,UAAU,uBAAuB,iBAAiB;AAAA,MAClD,UAAU,sBAAsB,0EAA0E;AAAA,IAC9G,EAAE,KAAK,eAAa;AAChB,UAAI,WAAW;AAEX,iBAAS,KAAK,UAAU,OAAO,gBAAgB;AAC/C,YAAI,mBAAmB,UAAU,OAAO,QAAQ;AAChD,YAAI,kBAAkB,UAAU,OAAO,QAAQ;AAC/C,mBAAW,MAAM,IAAI,WAAW,UAAU,IAAI,cAAc,GAAG,GAAG;AAClE,cAAM,MAAM,kBAAkB;AAAA,MAClC;AAAA,IAEJ,CAAC;AAAA,EACL,OAAO;AAEH,aAAS,KAAK,UAAU,OAAO,gBAAgB;AAC/C,QAAI,mBAAmB,UAAU,OAAO,QAAQ;AAChD,QAAI,kBAAkB,UAAU,OAAO,QAAQ;AAC/C,eAAW,MAAM,IAAI,WAAW,UAAU,IAAI,cAAc,GAAG,GAAG;AAClE,UAAM,MAAM,kBAAkB;AAAA,EAClC;AACJ;AAEA,eAAe,yBAAyB;AACpC,QAAM,UAAU,IAAI,cAAc;AAClC,QAAM,SAAS,MAAM,cAAc,MAAM,WAAW,OAAO;AAE3D,QAAM,MAAM,kBAAkB;AAE9B,QAAM,MAAM,KAAK,IAAI,MAAM,WAAW,OAAO;AAE7C,QAAM,eAAe,SAAS,iBAAiB,mBAAmB;AAClE,eAAa,QAAQ,SAAO;AACxB,QAAI,UAAU,OAAO,YAAY,CAAC,CAAC,QAAQ,KAAK,CAAC;AAAA,EACrD,CAAC;AAED,MAAI,YAAY,MAAM,UAAU;AAChC,aAAW,MAAM;AACb,oBAAgB;AAChB,eAAW,MAAM;AAAE,UAAI,YAAY,MAAM,UAAU;AAAA,IAAK,GAAG,GAAG;AAAA,EAClE,GAAG,GAAI;AACX;AAEA,SAAS,yBAAyB;AAC9B,QAAM,SAAS,SAAS,gBAAgB,UAAU,OAAO,WAAW;AACpE,QAAM,WAAW,SAAS,SAAS;AAEnC,MAAI,IAAI,YAAY;AAChB,QAAI,WAAW,cAAc,SAAS,cAAO;AAAA,EACjD;AAEA,QAAM,mBAAmB,SAAS,cAAc,uCAAuC;AACvF,MAAI,kBAAkB;AAClB,qBAAiB,UAAU;AAAA,EAC/B;AAEA,cAAY,SAAS,QAAQ;AAC7B,MAAI;AACA,iBAAa,QAAQ,SAAS,QAAQ;AAAA,EAC1C,SAAS,GAAG;AACR,YAAQ,KAAK,yCAAyC,CAAC;AAAA,EAC3D;AACJ;AAEA,SAAS,sBAAsB;AAC3B,WAAS,KAAK,iBAAiB,SAAS,CAAC,MAAM;AAC3C,UAAM,SAAS,EAAE;AACjB,UAAM,eAAe,OAAO,QAAQ,eAAe;AACnD,QAAI,CAAC,aAAc;AAEnB,MAAE,eAAe;AACjB,UAAM,SAAS,aAAa,QAAQ;AAEpC,YAAQ,QAAQ;AAAA,MACZ,KAAK;AACD,QAAAD,WAAU,aAAa,QAAQ,SAAS,YAAY;AACpD;AAAA,MACJ,KAAK;AACD,YAAI,SAAS,UAAU,IAAI,MAAM;AACjC,YAAI,SAAS,UAAU,IAAI,QAAQ;AACnC,iBAAS,KAAK,UAAU,IAAI,cAAc;AAC1C;AAAA,MACJ,KAAK;AACD,+BAAuB;AACvB;AAAA,MACJ,KAAK;AACD,kBAAU;AACV;AAAA,MACJ,KAAK;AACD,uBAAe;AACf;AAAA,MACJ,KAAK;AACD,8BAAsB;AACtB;AAAA,MACJ,KAAK;AACD,yBAAiB,GAAG,aAAa,QAAQ,OAAO;AAChD;AAAA,MACJ,KAAK;AACD,YAAI,CAAC,EAAE,OAAO,QAAQ,oCAAoC,GAAG;AACzD,uBAAa,QAAQ,OAAO,EAAE,UAAU,OAAO,YAAY;AAAA,QAC/D;AACA;AAAA,MACJ,KAAK;AACD,sBAAc,aAAa,QAAQ,UAAU,aAAa,QAAQ,IAAI,YAAY;AAClF;AAAA,MACJ,KAAK;AACD,sBAAc,aAAa,QAAQ,SAAS,aAAa,QAAQ,UAAU;AAC3E;AAAA,MACJ,KAAK;AACD,oBAAY,aAAa,QAAQ,SAAS;AAC1C;AAAA,MACJ,KAAK;AACD,iBAAS,aAAa,QAAQ,SAAS;AACvC;AAAA,MACJ,KAAK;AACD,qBAAa,UAAU,OAAO,MAAM;AACpC;AAAA,MACJ,KAAK;AACD,6BAAqB,aAAa,QAAQ,EAAE;AAC5C;AAAA,IACR;AAAA,EACJ,CAAC;AAED,MAAI,SAAS,iBAAiB,SAAS,YAAY;AACnD,MAAI,aAAa,iBAAiB,SAAS,YAAY;AACvD,MAAI,mBAAmB,iBAAiB,SAAS,YAAY;AAC7D,MAAI,iBAAiB,iBAAiB,SAAS,YAAY;AAE3D,QAAM,kBAAkB,SAAS,MAAM;AACnC,aAAS,iBAAiB,cAAc,EAAE,QAAQ,YAAY;AAC9D,UAAM,eAAe,OAAO,cAAc;AAC1C,QAAI,IAAI,WAAW;AACf,UAAI,UAAU,MAAM,UAAU,eAAe,UAAU;AACvD,UAAI,cAAc;AACd,cAAM,YAAY,SAAS,cAAc,qBAAqB;AAC9D,YAAI,UAAW,sBAAqB,UAAU,EAAE;AAAA,MACpD;AAAA,IACJ;AAAA,EACJ,GAAG,GAAG;AACN,SAAO,iBAAiB,UAAU,eAAe;AAEjD,MAAI,iBAAiB,iBAAiB,SAAS,CAAC,MAAM;AAClD,QAAI,EAAE,WAAW,IAAI,oBAAoB;AACrC,4BAAsB;AAAA,IAC1B;AAAA,EACJ,CAAC;AAED,WAAS,iBAAiB,WAAW,CAAC,MAAM;AACxC,QAAI,EAAE,QAAQ,UAAU;AACpB,UAAI,IAAI,iBAAiB,UAAU,SAAS,QAAQ,GAAG;AACnD,8BAAsB;AAAA,MAC1B,WAAW,CAAC,IAAI,WAAW,UAAU,SAAS,cAAc,GAAG;AAC3D,wBAAgB;AAAA,MACpB;AAAA,IACJ;AAAA,EACJ,CAAC;AAED,MAAI,oBAAoB,iBAAiB,SAAS,eAAe;AACjE,MAAI,cAAc,iBAAiB,SAAS,sBAAsB;AAElE,MAAI,mBAAmB,iBAAiB,SAAS,CAAC,MAAM;AACpD,QAAI,EAAE,WAAW,IAAI,mBAAmB;AACpC,sBAAgB;AAAA,IACpB;AAAA,EACJ,CAAC;AAED,MAAI,eAAe,iBAAiB,WAAW,OAAK;AAChD,QAAI,EAAE,QAAQ,QAAQ,EAAE,WAAW,EAAE,UAAU;AAC3C,QAAE,eAAe;AACjB,6BAAuB;AAAA,IAC3B;AAAA,EACJ,CAAC;AAED,SAAO,iBAAiB,YAAY,CAAC,MAAM;AACvC,sBAAkB,EAAE,KAAK;AAAA,EAC7B,CAAC;AACL;AAEA,SAAS,mBAAmB;AACxB,MAAI,CAAC,IAAI,YAAa;AAEtB,MAAI,eAAe,CAAC;AACpB,MAAI,mBAAmB;AAEvB,QAAMC,aAAY,CAAC,KAAK,eAAe,CAAC,MAAM;AAC1C,QAAI,OAAO,MAAM,QAAQ,KAAK,MAAM,WAAW,IAAI,GAAG,KAAK,MAAM,QAAQ,KAAK,IAAI,IAAI,GAAG,KAAK,IAAI,GAAG;AACrG,eAAW,CAAC,aAAa,KAAK,KAAK,OAAO,QAAQ,YAAY,GAAG;AAC7D,aAAO,KAAK,QAAQ,IAAI,WAAW,KAAK,KAAK;AAAA,IACjD;AACA,WAAO;AAAA,EACX;AAEA,QAAM,oBAAoB,MAAM;AAC5B,QAAI,YAAY,iBAAiB,iBAAiB,EAAE,QAAQ,QAAM,GAAG,cAAcA,WAAU,GAAG,QAAQ,OAAO,CAAC;AAChH,QAAI,YAAY,iBAAiB,6BAA6B,EAAE,QAAQ,QAAM,GAAG,cAAcA,WAAU,GAAG,QAAQ,kBAAkB,CAAC;AAAA,EAC3I;AAEA,QAAM,YAAY,MAAM;AACpB,aAAS,KAAK,UAAU,IAAI,gBAAgB;AAC5C,iBAAa;AACb,eAAW;AACX,sBAAkB;AAClB,QAAI,YAAY,UAAU,OAAO,cAAc;AAC/C,QAAI,oBAAoB,UAAU,IAAI,QAAQ;AAC9C,QAAI,aAAa,UAAU,IAAI,QAAQ;AAAA,EAC3C;AAEA,QAAM,aAAa,MAAM;AACrB,aAAS,KAAK,UAAU,OAAO,gBAAgB;AAC/C,QAAI,oBAAoB,UAAU,OAAO,QAAQ;AACjD,QAAI,aAAa,UAAU,OAAO,QAAQ;AAC1C,eAAW,MAAM,IAAI,YAAY,UAAU,IAAI,cAAc,GAAG,GAAG;AAAA,EACvE;AAEA,QAAM,0BAA0B,MAAM;AAClC,UAAM,YAAY,IAAI,eAAe,MAAM,KAAK,EAAE,YAAY,EAAE,QAAQ,eAAe,EAAE;AACzF,uBAAmB;AACnB,QAAI,CAAC,WAAW;AACZ,UAAI,eAAe,cAAcA,WAAU,wBAAwB;AAAA,IACvE,WAAW,MAAM,mBAAmB,SAAS,SAAS,GAAG;AACrD,UAAI,eAAe,cAAcA,WAAU,sBAAsB;AAAA,IACrE,OAAO;AACH,UAAI,eAAe,cAAc;AACjC,yBAAmB;AAAA,IACvB;AACA,UAAM,WAAW,OAAO,KAAK,YAAY,EAAE,SAAS;AACpD,QAAI,UAAU,WAAW,CAAC,oBAAoB,CAAC;AAAA,EACnD;AAEA,QAAM,aAAa,MAAM;AACrB,QAAI,eAAe,QAAQ;AAC3B,QAAI,UAAU,QAAQ;AACtB,QAAI,eAAe,cAAc;AACjC,mBAAe,CAAC;AAChB,uBAAmB;AACnB,QAAI,eAAe,UAAU,OAAO,iBAAiB,aAAa;AAClE,QAAI,eAAe,YAAY;AAC/B,QAAI,eAAe,iBAAiB,iBAAiB,EAAE,QAAQ,QAAM,GAAG,cAAcA,WAAU,GAAG,QAAQ,OAAO,CAAC;AACnH,4BAAwB;AAAA,EAC5B;AAEA,QAAM,mBAAmB,OAAO,UAAU;AACtC,UAAM,gBAAgB,QAAQ,MAAM,KAAK,KAAK,IAAI,CAAC;AACnD,mBAAe,CAAC;AAChB,QAAI,UAAU,QAAQ;AACtB,QAAI,eAAe,UAAU,IAAI,eAAe;AAEhD,UAAM,qBAAqB,CAAC,eAAe,gBAAgB,aAAa,gBAAgB,iBAAiB,WAAW;AACpH,UAAM,aAAa,cAAc,OAAO,UAAQ,mBAAmB,SAAS,KAAK,IAAI,CAAC;AAEtF,QAAI,WAAW,WAAW,GAAG;AACzB,UAAI,eAAe,YAAY,mCAAmCA,WAAU,uBAAuB,CAAC;AACpG,8BAAwB;AAExB,iBAAW,YAAY,GAAI;AAC3B;AAAA,IACJ;AAEA,UAAM,WAAW,CAAC,YAAY;AAC1B,YAAM,QAAQ,QAAQ,QAAQ,OAAO,EAAE,EAAE,MAAM,IAAI,EAAE,OAAO,UAAQ,KAAK,KAAK,MAAM,EAAE;AACtF,UAAI,MAAM,SAAS,EAAG,QAAO,CAAC;AAE9B,YAAM,YAAY,CAAC,SAAS;AACxB,cAAM,SAAS,CAAC;AAChB,YAAI,UAAU;AACd,YAAI,WAAW;AACf,mBAAW,QAAQ,MAAM;AACrB,cAAI,SAAS,QAAQ,QAAQ,WAAW,KAAK,CAAC,WAAW;AACrD,uBAAW,CAAC;AAAA,UAChB,WAAW,SAAS,OAAO,CAAC,UAAU;AAClC,mBAAO,KAAK,OAAO;AACnB,sBAAU;AAAA,UACd,OAAO;AACH,uBAAW;AAAA,UACf;AAAA,QACJ;AACA,eAAO,KAAK,OAAO;AACnB,eAAO,OAAO,IAAI,OAAK,EAAE,WAAW,GAAG,KAAK,EAAE,SAAS,GAAG,IAAI,EAAE,MAAM,GAAG,EAAE,IAAI,CAAC;AAAA,MACpF;AAEA,YAAM,SAAS,UAAU,MAAM,CAAC,CAAC,EAAE,IAAI,OAAK,EAAE,KAAK,CAAC;AAEpD,aAAO,MAAM,MAAM,CAAC,EAAE,IAAI,UAAQ;AAC9B,cAAM,SAAS,UAAU,IAAI;AAC7B,YAAI,OAAO,WAAW,OAAO,QAAQ;AACjC,kBAAQ,KAAK,gCAAgC,IAAI;AACjD,iBAAO;AAAA,QACX;AACA,eAAO,OAAO,OAAO,CAAC,KAAK,GAAG,MAAM;AAChC,cAAI,CAAC,KAAK,OAAO,CAAC,KAAK,IAAI,KAAK;AAChC,iBAAO;AAAA,QACX,GAAG,CAAC,CAAC;AAAA,MACT,CAAC,EAAE,OAAO,OAAO;AAAA,IACrB;AACA,UAAM,kBAAkB,CAAC,KAAK,SAAS;AACnC,YAAM,WAAW,gBAAgB,GAAG;AACpC,YAAM,YAAY;AAAA,QACd,IAAI,QAAQ,IAAI,OAAO,CAAC,EAAE,YAAY,IAAI,IAAI,MAAM,CAAC,CAAC;AAAA,QACtD,IAAI,GAAG,IAAI,OAAO,CAAC,EAAE,YAAY,IAAI,IAAI,MAAM,CAAC,CAAC;AAAA,MACrD;AAEA,YAAM,QAAQ,KAAK,IAAI,CAAC,KAAK,UAAU;AACnC,cAAM,iBAAiB;AAAA,UACnB,IAAI,GAAG,GAAG,SAAS,KAAK;AAAA,QAC5B;AAEA,mBAAW,aAAa,KAAK;AACzB,cAAI,OAAO,UAAU,eAAe,KAAK,KAAK,SAAS,GAAG;AACtD,kBAAM,QAAQ,IAAI,SAAS;AAC3B,kBAAM,YAAY,UAAU,MAAM,WAAW;AAE7C,gBAAI,WAAW;AACX,oBAAM,UAAU,UAAU,QAAQ,aAAa,EAAE;AACjD,oBAAM,OAAO,UAAU,CAAC;AACxB,kBAAI,CAAC,eAAe,OAAO,GAAG;AAC1B,+BAAe,OAAO,IAAI,CAAC;AAAA,cAC/B;AACA,6BAAe,OAAO,EAAE,IAAI,IAAI;AAAA,YACpC,OAAO;AACH,6BAAe,SAAS,IAAI;AAAA,YAChC;AAAA,UACJ;AAAA,QACJ;AAEA,YAAI,QAAQ,SAAS;AACjB,cAAI,CAAC,eAAe,SAAU,gBAAe,WAAW,CAAC;AACzD,cAAI,CAAC,eAAe,SAAU,gBAAe,WAAW,CAAC;AAAA,QAC7D;AAEA,eAAO;AAAA,MACX,CAAC;AAED,aAAO;AAAA,QACH,CAAC,QAAQ,GAAG;AAAA,UACR,GAAG;AAAA,UACH;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAEA,UAAM,eAAe,WAAW,IAAI,UAAQ;AACxC,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,cAAM,SAAS,IAAI,WAAW;AAC9B,eAAO,SAAS,OAAK;AACjB,cAAI;AACA,kBAAM,UAAU,EAAE,OAAO;AACzB,kBAAM,MAAM,KAAK,KAAK,QAAQ,QAAQ,EAAE;AACxC,kBAAM,aAAa,SAAS,OAAO;AACnC,gBAAI,WAAW,WAAW,GAAG;AACzB,sBAAQ,KAAK,aAAa,KAAK,IAAI,kCAAkC;AACrE,sBAAQ,IAAI;AACZ;AAAA,YACJ;AACA,kBAAM,WAAW,gBAAgB,KAAK,UAAU;AAChD,oBAAQ,EAAE,MAAM,KAAK,MAAM,SAAS,CAAC;AAAA,UACzC,SAAS,KAAK;AACV,oBAAQ,MAAM,oBAAoB,KAAK,IAAI,KAAK,GAAG;AACnD,mBAAO,iBAAiB,KAAK,IAAI,EAAE;AAAA,UACvC;AAAA,QACJ;AACA,eAAO,UAAU,MAAM,OAAO,kBAAkB,KAAK,IAAI,EAAE;AAC3D,eAAO,WAAW,IAAI;AAAA,MAC1B,CAAC;AAAA,IACL,CAAC;AAED,QAAI;AACA,YAAM,WAAW,MAAM,QAAQ,IAAI,YAAY,GAAG,OAAO,OAAO;AAChE,UAAI,QAAQ,WAAW,GAAG;AACtB,YAAI,eAAe,YAAY,mCAAmCA,WAAU,kBAAkB,CAAC;AAC/F,gCAAwB;AAExB,mBAAW,YAAY,GAAI;AAC3B;AAAA,MACJ;AAEA,cAAQ,QAAQ,YAAU;AACtB,qBAAa,OAAO,IAAI,IAAI,OAAO;AAAA,MACvC,CAAC;AACD,UAAI,cAAc,wEAAwEA,WAAU,mBAAmB,CAAC;AACxH,iBAAW,QAAQ,UAAQ;AACvB,uBAAe,yEAAyE,KAAK,IAAI;AAAA,MACrG,CAAC;AACD,qBAAe;AACf,UAAI,eAAe,YAAY;AAAA,IACnC,SAAS,KAAK;AACV,UAAI,eAAe,YAAY,mCAAmC,GAAG;AAErE,iBAAW,YAAY,GAAI;AAAA,IAC/B;AACA,4BAAwB;AAAA,EAC5B;AAEA,QAAM,gBAAgB,YAAY;AAC9B,UAAM,YAAY,IAAI,eAAe,MAAM,KAAK,EAAE,YAAY,EAAE,QAAQ,eAAe,EAAE;AACzF,QAAI,CAAC,oBAAoB,OAAO,KAAK,YAAY,EAAE,WAAW,EAAG;AACjE,QAAI;AACA,UAAI,UAAU,WAAW;AACzB,UAAI,UAAU,cAAc,MAAM,EAAE,cAAcA,WAAU,sBAAsB;AAClF,YAAM,KAAK,MAAM;AAEjB,YAAM,SAAS;AAAA,QACX,MAAM,EAAE,eAAe,eAAe;AAAA,QACtC,MAAM,EAAE,eAAe,mCAAiB;AAAA,MAC5C;AACA,mBAAa,IAAI,IAAI;AAErB,YAAM,GAAG,IAAI,UAAU,cAAc,SAAS;AAE9C,YAAM,iBAAiB,MAAM,MAAM,GAAG,OAAO,QAAQ,cAAc;AACnE,YAAM,aAAa,eAAe,KAAK,MAAM,eAAe,KAAK,IAAI,EAAE,QAAQ,CAAC,EAAE;AAClF,YAAM,eAAe,MAAM,GAAG,WAAW,QAAQ;AACjD,yBAAmB,WAAW,QAAQ,YAAY;AAElD,YAAM,SAAS,SAAS;AAExB,sBAAgBA,WAAU,gBAAgB,SAAS,GAAGA,WAAU,iBAAiB,EAAE,WAAW,UAAU,YAAY,EAAE,CAAC,CAAC;AACxH,iBAAW;AAAA,IACf,SAAS,OAAO;AACZ,cAAQ,MAAM,kCAAkC,KAAK;AACrD,sBAAgBA,WAAU,cAAc,OAAO,GAAGA,WAAU,0BAA0B,sCAAsC,CAAC;AAAA,IACjI,UAAE;AACE,UAAI,UAAU,WAAW;AACzB,UAAI,UAAU,cAAc,MAAM,EAAE,cAAcA,WAAU,cAAc;AAAA,IAC9E;AAAA,EACJ;AAEA,WAAS,eAAe,oBAAoB,GAAG,iBAAiB,SAAS,SAAS;AAClF,MAAI,eAAe,iBAAiB,SAAS,UAAU;AACvD,MAAI,cAAc,iBAAiB,SAAS,CAAC,MAAM;AAAE,QAAI,EAAE,WAAW,IAAI,aAAc,YAAW;AAAA,EAAG,CAAC;AACvG,MAAI,gBAAgB,iBAAiB,SAAS,uBAAuB;AACrE,MAAI,WAAW,iBAAiB,SAAS,aAAa;AACtD,MAAI,gBAAgB,iBAAiB,SAAS,MAAM;AAAE,QAAI,CAAC,IAAI,eAAe,UAAU,SAAS,eAAe,EAAG,KAAI,UAAU,MAAM;AAAA,EAAG,CAAC;AAC3I,MAAI,WAAW,iBAAiB,UAAU,CAAC,MAAM,iBAAiB,EAAE,OAAO,KAAK,CAAC;AACjF,MAAI,gBAAgB,iBAAiB,YAAY,CAAC,MAAM;AAAE,MAAE,eAAe;AAAG,QAAI,eAAe,UAAU,IAAI,aAAa;AAAA,EAAG,CAAC;AAChI,MAAI,gBAAgB,iBAAiB,aAAa,MAAM,IAAI,eAAe,UAAU,OAAO,aAAa,CAAC;AAC1G,MAAI,gBAAgB,iBAAiB,QAAQ,CAAC,MAAM;AAAE,MAAE,eAAe;AAAG,QAAI,eAAe,UAAU,OAAO,aAAa;AAAG,qBAAiB,EAAE,aAAa,KAAK;AAAA,EAAG,CAAC;AAC3K;AAEA,SAAS,0BAA0B;AAC/B,MAAI,IAAI,iBAAiB;AACrB,QAAI,gBAAgB,YAAY;AAAA;AAAA,6LAEqJ,oBAAoB,CAAC;AAAA,qKAC7C,mBAAmB,CAAC;AAAA;AAAA,EAErL;AAEA,QAAM,qBAAqB,SAAS,eAAe,sBAAsB;AACzE,MAAI,oBAAoB;AACpB,uBAAmB,YAAY,oBAAoB;AAAA,EACvD;AAEA,WAAS,iBAAiB,4CAA4C,EAAE,QAAQ,QAAM,GAAG,iBAAiB,UAAU,WAAiB,CAAC;AACtI,WAAS,iBAAiB,qBAAqB,EAAE,QAAQ,QAAM,GAAG,iBAAiB,SAAS,CAAC,MAAM;AAC/F,MAAE,eAAe;AACjB,gBAAY,EAAE,cAAc,QAAQ,IAAI;AAAA,EAC5C,CAAC,CAAC;AACN;AAEA,eAAe,OAAO;AAClB,cAAY;AACZ,QAAM,UAAU;AAEhB,0BAAwB;AACxB,sBAAoB;AACpB,aAAW;AAEX,MAAI;AACA,QAAI,eAAe,CAAC,OAAO,YAAY;AACvC,QAAI;AACA,YAAM,WAAW,MAAM,MAAM,GAAG,OAAO,QAAQ,cAAc;AAC7D,UAAI,SAAS,IAAI;AACb,wBAAgB,MAAM,SAAS,KAAK,GAAG;AAAA,MAC3C;AAAA,IACJ,SAAS,OAAO;AACZ,cAAQ,KAAK,gEAAgE,KAAK;AAAA,IACtF;AAEA,UAAM,KAAK,MAAM;AACjB,UAAM,eAAe,MAAM,GAAG,WAAW,QAAQ;AACjD,UAAM,qBAAqB,CAAC,GAAG,oBAAI,IAAI,CAAC,GAAG,cAAc,GAAG,YAAY,CAAC,CAAC;AAC1E,uBAAmB,cAAc,YAAY;AAE7C,UAAM,SAAS,IAAI,gBAAgB,OAAO,SAAS,MAAM;AACzD,UAAM,WAAW,OAAO,IAAI,OAAO;AACnC,QAAI,YAAY,MAAM,mBAAmB,SAAS,QAAQ,GAAG;AACzD,YAAM,eAAe;AAAA,IACzB;AAEA,UAAM,YAAY,MAAM,YAAY;AAGpC,UAAM,4BAA4B;AAClC,4BAAwB;AAExB,gBAAY,MAAM,aAAa,IAAI;AACnC,qBAAiB;AAEjB,QAAI,IAAI,gBAAgB;AACpB,UAAI,eAAe,MAAM,UAAU;AACnC,UAAI,eAAe,iBAAiB,iBAAiB,MAAM,IAAI,eAAe,UAAU,IAAI,QAAQ,GAAG,EAAE,MAAM,KAAK,CAAC;AAAA,IACzH;AAEA,aAAS,cAAc,yCAAyC,MAAM,YAAY,IAAI,GAAG,UAAU,IAAI,QAAQ;AAC/G,8BAA0B;AAC1B,aAAS,iBAAiB,cAAc,EAAE,QAAQ,YAAY;AAE9D,UAAM,SAAS,OAAO,IAAI,KAAK;AAC/B,UAAM,eAAe,OAAO,cAAc;AAC1C,UAAM,aAAa,eAAe,oBAAoB;AACtD,UAAM,aAAa,UAAU,MAAM,aAAa;AAEhD,UAAMD,WAAU,YAAY,MAAM,OAAO,IAAI;AAE7C,0BAAsB;AAEtB,UAAM,eAAe,EAAE,MAAM,OAAO,SAAS,YAAY,OAAO,MAAM,aAAa;AACnF,UAAM,aAAa,UAAU,MAAM,YAAY,QAAQ,UAAU;AACjE,YAAQ,aAAa,cAAc,IAAI,UAAU;AAAA,EAErD,SAAS,OAAO;AACZ,YAAQ,MAAM,0BAA0B,KAAK;AAC7C,QAAI,IAAI,gBAAgB;AAEpB;AAAA,QACI,UAAU,yBAAyB,mBAAmB;AAAA,QACtD,UAAU,wBAAwB,sEAAsE,IAAI;AAAA;AAAA,SAAc,MAAM,OAAO;AAAA,MAC3I;AAAA,IACJ;AAAA,EACJ;AACJ;AAEA,SAAS,iBAAiB,oBAAoB,IAAI;",
  "names": ["target", "isEqual", "parse", "SPECIAL_SYMBOLS", "SMALL_Y", "createRomajiToKanaMap", "config", "toRomaji", "config", "obj", "path", "norm", "value", "score", "pattern", "result", "item", "searchers", "query", "getUIText", "getUIText", "db", "getUIText", "JAPANESE_REGEX", "getUIText", "changeTab", "getUIText"]
}
